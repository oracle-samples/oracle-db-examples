SQL> @eg4
SQL> column ename format a20
SQL> column rname format a20
SQL> 
SQL> var sqlid varchar2(100)
SQL> 
SQL> select /* MY_TEST_QUERY */
  2         e.ename,r.rname
  3  from   employees  e
  4  join   roles       r on (r.id = e.role_id)
  5  join   departments d on (d.id = e.dept_id)
  6  where  e.staffno <= 10
  7  and    d.dname in ('Department Name 1','Department Name 2');
Employee Name 1      Role Name 1
SQL> 
SQL> --
SQL> -- In this example, let's search for the query
SQL> -- in V$SQL. We could do this in another session
SQL> -- while the query is executing.
SQL> --
SQL> begin
  2     select sql_id
  3     into   :sqlid
  4     from   v$sql
  5     where  sql_text like '%MY_TEST_QUERY%'
  6     and    sql_text not like '%v$sql%'
  7     and    rownum<2;
  8  end;
  9  /
SQL> 
SQL> set long 100000 pagesize 0 linesize 250 tab off trims on
SQL> column plan_table_output format a230
SQL> 
SQL> SELECT *
  2  FROM table(DBMS_XPLAN.DISPLAY_CURSOR(SQL_ID=>:sqlid,FORMAT=>'ALL +OUTLINE'));
SQL_ID  fzfk7qqax6chk, child number 0
-------------------------------------
select /* MY_TEST_QUERY */        e.ename,r.rname from   employees  e
join   roles       r on (r.id = e.role_id) join   departments d on
(d.id = e.dept_id) where  e.staffno <= 10 and    d.dname in
('Department Name 1','Department Name 2')

Plan hash value: 2341252972

-----------------------------------------------------------------------------------
| Id  | Operation           | Name        | Rows  | Bytes | Cost (%CPU)| Time     |
-----------------------------------------------------------------------------------
|   0 | SELECT STATEMENT    |             |       |       |     6 (100)|          |
|*  1 |  HASH JOIN          |             |     3 |   192 |     6   (0)| 00:00:01 |
|*  2 |   HASH JOIN         |             |     3 |   147 |     4   (0)| 00:00:01 |
|*  3 |    TABLE ACCESS FULL| DEPARTMENTS |     2 |    42 |     2   (0)| 00:00:01 |
|*  4 |    TABLE ACCESS FULL| EMPLOYEES   |    10 |   280 |     2   (0)| 00:00:01 |
|   5 |   TABLE ACCESS FULL | ROLES       |    20 |   300 |     2   (0)| 00:00:01 |
-----------------------------------------------------------------------------------

Query Block Name / Object Alias (identified by operation id):
-------------------------------------------------------------

   1 - SEL$9E43CB6E
   3 - SEL$9E43CB6E / D@SEL$2
   4 - SEL$9E43CB6E / E@SEL$1
   5 - SEL$9E43CB6E / R@SEL$1

Outline Data
-------------

  /*+
      BEGIN_OUTLINE_DATA
      IGNORE_OPTIM_EMBEDDED_HINTS
      OPTIMIZER_FEATURES_ENABLE('12.2.0.1')
      DB_VERSION('12.2.0.1')
      ALL_ROWS
      OUTLINE_LEAF(@"SEL$9E43CB6E")
      MERGE(@"SEL$58A6D7F6" >"SEL$3")
      OUTLINE(@"SEL$3")
      OUTLINE(@"SEL$58A6D7F6")
      MERGE(@"SEL$1" >"SEL$2")
      OUTLINE(@"SEL$2")
      OUTLINE(@"SEL$1")
      FULL(@"SEL$9E43CB6E" "D"@"SEL$2")
      FULL(@"SEL$9E43CB6E" "E"@"SEL$1")
      FULL(@"SEL$9E43CB6E" "R"@"SEL$1")
      LEADING(@"SEL$9E43CB6E" "D"@"SEL$2" "E"@"SEL$1" "R"@"SEL$1")
      USE_HASH(@"SEL$9E43CB6E" "E"@"SEL$1")
      USE_HASH(@"SEL$9E43CB6E" "R"@"SEL$1")
      END_OUTLINE_DATA
  */

Predicate Information (identified by operation id):
---------------------------------------------------

   1 - access("R"."ID"="E"."ROLE_ID")
   2 - access("D"."ID"="E"."DEPT_ID")
   3 - filter(("D"."DNAME"='Department Name 1' OR "D"."DNAME"='Department
              Name 2'))
   4 - filter("E"."STAFFNO"<=10)

Column Projection Information (identified by operation id):
-----------------------------------------------------------

   1 - (#keys=1) "E"."ENAME"[VARCHAR2,100], "R"."RNAME"[VARCHAR2,100]
   2 - (#keys=1; rowset=256) "E"."ENAME"[VARCHAR2,100],
       "E"."ROLE_ID"[NUMBER,22]
   3 - (rowset=256) "D"."ID"[NUMBER,22]
   4 - (rowset=256) "E"."ENAME"[VARCHAR2,100], "E"."DEPT_ID"[NUMBER,22],
       "E"."ROLE_ID"[NUMBER,22]
   5 - (rowset=256) "R"."ID"[NUMBER,22], "R"."RNAME"[VARCHAR2,100]

SQL> 
SQL> spool off
