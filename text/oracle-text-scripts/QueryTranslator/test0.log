SQL> 
SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 26.000 cat cat cat cat cat cat cat xx dog                                                                     
 19.000 cat cat cat cat cat xx dog                                                                             
 11.000 cat dog xx cat dog xx cat dog                                                                          
  7.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
  7.000 cat cat dog                                                                                            
  7.000 cat cat xx dog dog dog dog dog                                                                         
  4.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  4.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  4.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
  4.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
  4.000 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  4.000 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
  4.000 cat dog rabbit fox                                                                                     
  4.000 cat dog dog rabbit                                                                                     
  4.000 cat sheep cow <secb>sheep cow<secb>                                                                    
  4.000 cat                                                                                                    
  4.000 cat dog                                                                                                

17 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  '+cat'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 26.000 cat cat cat cat cat cat cat xx dog                                                                     
 19.000 cat cat cat cat cat xx dog                                                                             
 11.000 cat dog xx cat dog xx cat dog                                                                          
  7.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
  7.000 cat cat dog                                                                                            
  7.000 cat cat xx dog dog dog dog dog                                                                         
  4.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  4.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  4.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
  4.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
  4.000 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  4.000 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
  4.000 cat dog rabbit fox                                                                                     
  4.000 cat dog dog rabbit                                                                                     
  4.000 cat sheep cow <secb>sheep cow<secb>                                                                    
  4.000 cat                                                                                                    
  4.000 cat dog                                                                                                

17 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  '+cat dog'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 26.000 cat cat cat cat cat cat cat xx dog                                                                     
 19.000 cat cat cat cat cat xx dog                                                                             
 11.000 cat dog xx cat dog xx cat dog                                                                          
  7.000 cat cat xx dog dog dog dog dog                                                                         
  7.000 cat cat dog                                                                                            
  4.000 cat dog                                                                                                
  4.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
  4.000 cat dog rabbit fox                                                                                     
  4.000 cat dog dog rabbit                                                                                     
  2.000 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
  2.000 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  2.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  2.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  2.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
  2.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
  2.000 cat                                                                                                    
  2.000 cat sheep cow <secb>sheep cow<secb>                                                                    

17 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  '+cat +dog'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 11.000 cat dog xx cat dog xx cat dog                                                                          
  7.000 cat cat xx dog dog dog dog dog                                                                         
  4.000 cat dog rabbit fox                                                                                     
  4.000 cat cat cat cat cat cat cat xx dog                                                                     
  4.000 cat dog dog rabbit                                                                                     
  4.000 cat cat dog                                                                                            
  4.000 cat dog                                                                                                
  4.000 cat cat cat cat cat xx dog                                                                             

8 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat dog +rabbit'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
  5.000 cat dog dog rabbit                                                                                     
  5.000 cat dog rabbit fox                                                                                     
  5.000 dog rabbit fox                                                                                         
  2.000 rabbit fox                                                                                             
  2.000 catty doggy sheepy rabbit<secb>cow</secb>                                                              
  2.000 cat-dog rabbit fox                                                                                     

6 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'seca:(dog)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
  9.000 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
  4.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  4.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  4.000 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  4.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
  4.000 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  4.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
  4.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
  4.000 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
  4.000 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              

10 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat +secb:(albatross)'
  3  ),1) > 0 order by score desc;

no rows selected

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  '+seca:(rabbit) +secb:(sheep) +cat'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
  4.000 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  4.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  4.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
  4.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
  4.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
  4.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              

6 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat +secb:(+albatross)'
  3  ),1) > 0 order by score desc;

no rows selected

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat +secb:(albatross cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
  2.000 cat sheep cow <secb>sheep cow<secb>                                                                    
  2.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
  2.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
  2.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
  2.000 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
  2.000 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  2.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  2.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  1.000 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  1.000 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
  1.000 catty doggy sheepy rabbit<secb>cow</secb>                                                              
  1.000 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  1.000 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  1.000 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              

14 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat +secb:(albatross flamingo)'
  3  ),1) > 0 order by score desc;

no rows selected

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat secb:(albatross flamingo)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 13.000 cat cat cat cat cat cat cat xx dog                                                                     
  9.000 cat cat cat cat cat xx dog                                                                             
  6.000 cat dog xx cat dog xx cat dog                                                                          
  4.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
  4.000 cat cat dog                                                                                            
  4.000 cat cat xx dog dog dog dog dog                                                                         
  2.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  2.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  2.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
  2.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
  2.000 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  2.000 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
  2.000 cat dog rabbit fox                                                                                     
  2.000 cat dog dog rabbit                                                                                     
  2.000 cat sheep cow <secb>sheep cow<secb>                                                                    
  2.000 cat                                                                                                    
  2.000 cat dog                                                                                                

17 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat +secb:(fox cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 52.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
 52.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
 52.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 52.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 52.000 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
 52.000 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
 52.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
 26.000 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 26.000 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
 26.000 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 26.000 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
 26.000 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              
  2.000 cat sheep cow <secb>sheep cow<secb>                                                                    
  1.000 catty doggy sheepy rabbit<secb>cow</secb>                                                              

14 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'dog +secb:(cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
  4.000 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              
  4.000 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  4.000 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
  4.000 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  4.000 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  2.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
  2.000 catty doggy sheepy rabbit<secb>cow</secb>                                                              
  2.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
  2.000 cat sheep cow <secb>sheep cow<secb>                                                                    
  2.000 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
  2.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  2.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  2.000 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  2.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            

14 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'dog +secb:(cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
  4.000 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              
  4.000 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  4.000 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
  4.000 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  4.000 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  2.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
  2.000 catty doggy sheepy rabbit<secb>cow</secb>                                                              
  2.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
  2.000 cat sheep cow <secb>sheep cow<secb>                                                                    
  2.000 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
  2.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  2.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  2.000 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  2.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            

14 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat +secb:(cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
  4.000 cat sheep cow <secb>sheep cow<secb>                                                                    
  4.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
  4.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
  4.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
  4.000 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
  4.000 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  4.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  4.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  2.000 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  2.000 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
  2.000 catty doggy sheepy rabbit<secb>cow</secb>                                                              
  2.000 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  2.000 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  2.000 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              

14 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'secb:(+fox cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
  4.000 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
  4.000 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  4.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  4.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  4.000 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  4.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
  4.000 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              
  4.000 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
  4.000 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
  4.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
  4.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
  4.000 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  

12 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'catt*'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
  7.000 catty doggy sheepy rabbit<secb>cow</secb>                                                              

1 row selected.

SQL> 
SQL> -- prompt progressive relaxation
SQL> column "Query Text" format a111
SQL> set linesize 111
SQL> set long 500000
SQL> set pagesize 50
SQL> 
SQL> variable :qry varchar2(4000)
SP2-0553: Illegal variable name ":qry".
SQL> 
SQL> exec parser.setIndexName('avtestindex')

PL/SQL procedure successfully completed.

SQL> exec parser.setScoreType(parser.scoreTypeFloat)

PL/SQL procedure successfully completed.

SQL> 
SQL> select parser.progrelax('cat') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat})),(({cat})) ), AND, ADD )</seq>                                              
      <seq>DEFINEMERGE( ( (NEAR(({cat}))),(({cat})) ), AND, ADD )</seq>                                        
      <seq>DEFINEMERGE( ( (({cat})),(({cat})) ), AND, ADD )</seq>                                              
      <seq>DEFINEMERGE( ( ({cat}),(({cat})) ), AND, ADD )</seq>                                                
      <seq>((({cat})))</seq>                                                                                   
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 90.472 cat cat cat cat cat cat cat xx dog                                                                     
 87.480 cat cat cat cat cat xx dog                                                                             
 84.488 cat dog xx cat dog xx cat dog                                                                          
 82.992 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
 82.992 cat cat dog                                                                                            
 82.992 cat cat xx dog dog dog dog dog                                                                         
 81.496 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 81.496 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 81.496 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
 81.496 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
 81.496 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
 81.496 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
 81.496 cat dog rabbit fox                                                                                     
 81.496 cat dog dog rabbit                                                                                     
 81.496 cat sheep cow <secb>sheep cow<secb>                                                                    
 81.496 cat                                                                                                    
 81.496 cat dog                                                                                                

17 rows selected.

SQL> select parser.progrelax('+cat') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat})),(({cat})) ), AND, ADD )</seq>                                              
      <seq>DEFINEMERGE( ( (NEAR(({cat}))),(({cat})) ), AND, ADD )</seq>                                        
      <seq>DEFINEMERGE( ( (({cat})),(({cat})) ), AND, ADD )</seq>                                              
      <seq>DEFINEMERGE( ( ({cat}&{cat}),(({cat})) ), AND, ADD )</seq>                                          
      <seq>((({cat}))&{cat})</seq>                                                                             
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  '+cat'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 90.472 cat cat cat cat cat cat cat xx dog                                                                     
 87.480 cat cat cat cat cat xx dog                                                                             
 84.488 cat dog xx cat dog xx cat dog                                                                          
 82.992 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
 82.992 cat cat dog                                                                                            
 82.992 cat cat xx dog dog dog dog dog                                                                         
 81.496 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 81.496 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 81.496 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
 81.496 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
 81.496 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
 81.496 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
 81.496 cat dog rabbit fox                                                                                     
 81.496 cat dog dog rabbit                                                                                     
 81.496 cat sheep cow <secb>sheep cow<secb>                                                                    
 81.496 cat                                                                                                    
 81.496 cat dog                                                                                                

17 rows selected.

SQL> select parser.progrelax('+cat dog') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat} {dog})),(({cat}) & ({cat},{dog})) ), AND, ADD )</seq>                        
      <seq>DEFINEMERGE( ( (NEAR(({cat},{dog}))),(({cat}) & ({cat},{dog})) ), AND, ADD )</seq>                  
      <seq>DEFINEMERGE( ( (({cat}&{dog})),(({cat}) & ({cat},{dog})) ), AND, ADD )</seq>                        
      <seq>DEFINEMERGE( ( ((NEAR(({cat},{dog})))&{cat}),(({cat}) & ({cat},{dog})) ), AND, ADD )</seq>          
      <seq>((({cat},{dog}))&{cat})</seq>                                                                       
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  '+cat dog'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 84.640 cat dog xx cat dog xx cat dog                                                                          
 82.295 cat cat dog                                                                                            
 81.547 cat dog dog rabbit                                                                                     
 81.547 cat dog                                                                                                
 81.547 cat dog rabbit fox                                                                                     
 68.059 cat cat cat cat cat cat cat xx dog                                                                     
 66.563 cat cat cat cat cat xx dog                                                                             
 64.319 cat cat xx dog dog dog dog dog                                                                         
   .748 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .374 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
   .374 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
   .374 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .374 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .374 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
   .374 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
   .374 cat sheep cow <secb>sheep cow<secb>                                                                    
   .374 cat                                                                                                    

17 rows selected.

SQL> select parser.progrelax('+cat +dog') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat} {dog})),(({cat}&{dog})) ), AND, ADD )</seq>                                  
      <seq>DEFINEMERGE( ( (NEAR(({cat},{dog}))),(({cat}&{dog})) ), AND, ADD )</seq>                            
      <seq>DEFINEMERGE( ( (({cat}&{dog})),(({cat}&{dog})) ), AND, ADD )</seq>                                  
      <seq>DEFINEMERGE( ( ((NEAR(({cat},{dog})))&{cat}&{dog}),(({cat}&{dog})) ), AND, ADD )</seq>              
      <seq>((({cat},{dog}))&{cat}&{dog})</seq>                                                                 
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  '+cat +dog'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 84.640 cat dog xx cat dog xx cat dog                                                                          
 81.597 cat cat dog                                                                                            
 81.547 cat dog                                                                                                
 81.547 cat dog dog rabbit                                                                                     
 81.547 cat dog rabbit fox                                                                                     
 64.319 cat cat xx dog dog dog dog dog                                                                         
 63.622 cat cat cat cat cat xx dog                                                                             
 63.622 cat cat cat cat cat cat cat xx dog                                                                     

8 rows selected.

SQL> select parser.progrelax('+dog +cat') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({dog} {cat})),(({dog}&{cat})) ), AND, ADD )</seq>                                  
      <seq>DEFINEMERGE( ( (NEAR(({dog},{cat}))),(({dog}&{cat})) ), AND, ADD )</seq>                            
      <seq>DEFINEMERGE( ( (({dog}&{cat})),(({dog}&{cat})) ), AND, ADD )</seq>                                  
      <seq>DEFINEMERGE( ( ((NEAR(({dog},{cat})))&{dog}&{cat}),(({dog}&{cat})) ), AND, ADD )</seq>              
      <seq>((({dog},{cat}))&{dog}&{cat})</seq>                                                                 
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  '+dog +cat'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 76.462 cat dog xx cat dog xx cat dog                                                                          
 64.319 cat cat xx dog dog dog dog dog                                                                         
 63.656 cat cat dog                                                                                            
 63.622 cat cat cat cat cat xx dog                                                                             
 63.622 cat cat cat cat cat cat cat xx dog                                                                     
 63.605 cat dog                                                                                                
 63.605 cat dog dog rabbit                                                                                     
 63.605 cat dog rabbit fox                                                                                     

8 rows selected.

SQL> select parser.progrelax('dog cat') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({dog} {cat})),(({dog},{cat})) ), AND, ADD )</seq>                                  
      <seq>DEFINEMERGE( ( (NEAR(({dog},{cat}))),(({dog},{cat})) ), AND, ADD )</seq>                            
      <seq>DEFINEMERGE( ( (({dog}&{cat})),(({dog},{cat})) ), AND, ADD )</seq>                                  
      <seq>DEFINEMERGE( ( ((NEAR(({dog},{cat})))),(({dog},{cat})) ), AND, ADD )</seq>                          
      <seq>((({dog},{cat})))</seq>                                                                             
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'dog cat'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 80.000 cat dog xx cat dog xx cat dog                                                                          
 74.332 cat cat cat cat cat cat cat xx dog                                                                     
 74.196 cat cat xx dog dog dog dog dog                                                                         
 73.958 cat cat cat cat cat xx dog                                                                             
 73.443 cat dog dog rabbit                                                                                     
 73.431 cat cat dog                                                                                            
 73.244 cat dog rabbit fox                                                                                     
 73.244 cat dog                                                                                                
   .748 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .399 dog rabbit fox                                                                                         
   .399 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              
   .399 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .399 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .399 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
   .399 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .374 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
   .374 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
   .374 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .374 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .374 cat sheep cow <secb>sheep cow<secb>                                                                    
   .374 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
   .374 cat                                                                                                    
   .374 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      

23 rows selected.

SQL> select parser.progrelax('cat dog +rabbit') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat} {dog} {rabbit})),(({rabbit}) & ({rabbit},{cat},{dog})) ), AND, ADD )</seq>   
      <seq>DEFINEMERGE( ( (NEAR(({cat},{dog},{rabbit}))),(({rabbit}) & ({rabbit},{cat},{dog})) ), AND, ADD )</s
eq>                                                                                                            
      <seq>DEFINEMERGE( ( (({cat}&{dog}&{rabbit})),(({rabbit}) & ({rabbit},{cat},{dog})) ), AND, ADD )</seq>   
      <seq>DEFINEMERGE( ( ((NEAR(({cat},{dog})),NEAR(({cat},{rabbit})),NEAR(({dog},{rabbit})))&{rabbit}),(({rab
bit}) & ({rabbit},{cat},{dog})) ), AND, ADD )</seq>                                                            
      <seq>((({cat},{dog},{rabbit}))&{rabbit})</seq>                                                           
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat dog +rabbit'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 82.039 cat dog rabbit fox                                                                                     
 64.313 cat dog dog rabbit                                                                                     
 21.972 dog rabbit fox                                                                                         
   .340 rabbit fox                                                                                             
   .340 catty doggy sheepy rabbit<secb>cow</secb>                                                              
   .340 cat-dog rabbit fox                                                                                     

6 rows selected.

SQL> select parser.progrelax('cat rabbit') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat} {rabbit})),(({cat},{rabbit})) ), AND, ADD )</seq>                            
      <seq>DEFINEMERGE( ( (NEAR(({cat},{rabbit}))),(({cat},{rabbit})) ), AND, ADD )</seq>                      
      <seq>DEFINEMERGE( ( (({cat}&{rabbit})),(({cat},{rabbit})) ), AND, ADD )</seq>                            
      <seq>DEFINEMERGE( ( ((NEAR(({cat},{rabbit})))),(({cat},{rabbit})) ), AND, ADD )</seq>                    
      <seq>((({cat},{rabbit})))</seq>                                                                          
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat rabbit'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 73.265 cat dog rabbit fox                                                                                     
 73.232 cat dog dog rabbit                                                                                     
  2.618 cat cat cat cat cat cat cat xx dog                                                                     
  1.870 cat cat cat cat cat xx dog                                                                             
  1.122 cat dog xx cat dog xx cat dog                                                                          
   .748 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .748 cat cat xx dog dog dog dog dog                                                                         
   .748 cat cat dog                                                                                            
   .510 rabbit fox                                                                                             
   .510 catty doggy sheepy rabbit<secb>cow</secb>                                                              
   .510 cat-dog rabbit fox                                                                                     
   .510 dog rabbit fox                                                                                         
   .374 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
   .374 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .374 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .374 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
   .374 cat dog                                                                                                
   .374 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
   .374 cat sheep cow <secb>sheep cow<secb>                                                                    
   .374 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
   .374 cat                                                                                                    

21 rows selected.

SQL> select parser.progrelax('"cat rabbit"') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat rabbit})),(({cat rabbit})) ), AND, ADD )</seq>                                
      <seq>DEFINEMERGE( ( (NEAR(({cat rabbit}))),(({cat rabbit})) ), AND, ADD )</seq>                          
      <seq>DEFINEMERGE( ( (({cat rabbit})),(({cat rabbit})) ), AND, ADD )</seq>                                
      <seq>DEFINEMERGE( ( ({cat rabbit}),(({cat rabbit})) ), AND, ADD )</seq>                                  
      <seq>((({cat rabbit})))</seq>                                                                            
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  '"cat rabbit"'
  3  ),1) > 0 order by score desc;

no rows selected

SQL> select parser.progrelax('+cat +rabbit') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat} {rabbit})),(({cat}&{rabbit})) ), AND, ADD )</seq>                            
      <seq>DEFINEMERGE( ( (NEAR(({cat},{rabbit}))),(({cat}&{rabbit})) ), AND, ADD )</seq>                      
      <seq>DEFINEMERGE( ( (({cat}&{rabbit})),(({cat}&{rabbit})) ), AND, ADD )</seq>                            
      <seq>DEFINEMERGE( ( ((NEAR(({cat},{rabbit})))&{cat}&{rabbit}),(({cat}&{rabbit})) ), AND, ADD )</seq>     
      <seq>((({cat},{rabbit}))&{cat}&{rabbit})</seq>                                                           
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  '+cat +rabbit'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 63.571 cat dog rabbit fox                                                                                     
 63.538 cat dog dog rabbit                                                                                     

2 rows selected.

SQL> select parser.progrelax('seca:(dog)') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (((({dog})) WITHIN seca)),((((({dog})) WITHIN seca))) ), AND, ADD )</seq>            
      <seq>DEFINEMERGE( ( (((NEAR(({dog}))) WITHIN seca)),((((({dog})) WITHIN seca))) ), AND, ADD )</seq>      
      <seq>DEFINEMERGE( ( (((({dog})) WITHIN seca)),((((({dog})) WITHIN seca))) ), AND, ADD )</seq>            
      <seq>DEFINEMERGE( ( ((({dog}) WITHIN seca)),((((({dog})) WITHIN seca))) ), AND, ADD )</seq>              
      <seq>((((((({dog})))) WITHIN seca)))</seq>                                                               
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'seca:(dog)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 83.545 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
 81.773 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 81.773 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 81.773 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 81.773 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
 81.773 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 81.773 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
 81.773 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
 81.773 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
 81.773 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              

10 rows selected.

SQL> select parser.progrelax('seca:(+dog)') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (((({dog})) WITHIN seca)),((((({dog})) WITHIN seca))) ), AND, ADD )</seq>            
      <seq>DEFINEMERGE( ( (((NEAR(({dog}))) WITHIN seca)),((((({dog})) WITHIN seca))) ), AND, ADD )</seq>      
      <seq>DEFINEMERGE( ( (((({dog})) WITHIN seca)),((((({dog})) WITHIN seca))) ), AND, ADD )</seq>            
      <seq>DEFINEMERGE( ( ((({dog}&{dog}) WITHIN seca)),((((({dog})) WITHIN seca))) ), AND, ADD )</seq>        
      <seq>((((((({dog}))&{dog})) WITHIN seca)))</seq>                                                         
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'seca:(+dog)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 83.545 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
 81.773 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 81.773 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 81.773 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 81.773 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
 81.773 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 81.773 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
 81.773 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
 81.773 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
 81.773 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              

10 rows selected.

SQL> select parser.progrelax('seca:(-dog)') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (((({dog})) WITHIN seca)),((((({dog})) WITHIN seca))) ), AND, ADD )</seq>            
      <seq>DEFINEMERGE( ( (((NEAR(({dog}))) WITHIN seca)),((((({dog})) WITHIN seca))) ), AND, ADD )</seq>      
      <seq>DEFINEMERGE( ( (((({dog})) WITHIN seca)),((((({dog})) WITHIN seca))) ), AND, ADD )</seq>            
      <seq>DEFINEMERGE( ( ((({dog}) WITHIN seca)),((((({dog})) WITHIN seca))) ), AND, ADD )</seq>              
      <seq>((((((({dog})))) WITHIN seca)))</seq>                                                               
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'seca:(-dog)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 83.545 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
 81.773 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 81.773 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 81.773 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 81.773 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
 81.773 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 81.773 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
 81.773 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
 81.773 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
 81.773 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              

10 rows selected.

SQL> select parser.progrelax('cat +secb:(albatross)') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat})&((({albatross})) WITHIN secb)),((((({albatross})) WITHIN secb)) & (((({albat
ross})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                                               
      <seq>DEFINEMERGE( ( (NEAR(({cat}))&((NEAR(({albatross}))) WITHIN secb)),((((({albatross})) WITHIN secb)) 
& (((({albatross})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                                   
      <seq>DEFINEMERGE( ( (({cat})&((({albatross})) WITHIN secb)),((((({albatross})) WITHIN secb)) & (((({albat
ross})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                                               
      <seq>DEFINEMERGE( ( ({cat}&(({albatross}) WITHIN secb)&((({albatross})) WITHIN secb)),((((({albatross})) 
WITHIN secb)) & (((({albatross})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                     
      <seq>((({cat}),((((({albatross})))) WITHIN secb))&((({albatross})) WITHIN secb))</seq>                   
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat +secb:(albatross)'
  3  ),1) > 0 order by score desc;

no rows selected

SQL> select parser.progrelax('+seca:(rabbit) +secb:(sheep) +cat') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat})&((({rabbit})) WITHIN seca)&((({sheep})) WITHIN secb)),((((({rabbit})) WITHIN
 seca)&((({sheep})) WITHIN secb)&{cat})) ), AND, ADD )</seq>                                                   
      <seq>DEFINEMERGE( ( (NEAR(({cat}))&((NEAR(({rabbit}))) WITHIN seca)&((NEAR(({sheep}))) WITHIN secb)),((((
({rabbit})) WITHIN seca)&((({sheep})) WITHIN secb)&{cat})) ), AND, ADD )</seq>                                 
      <seq>DEFINEMERGE( ( (({cat})&((({rabbit})) WITHIN seca)&((({sheep})) WITHIN secb)),((((({rabbit})) WITHIN
 seca)&((({sheep})) WITHIN secb)&{cat})) ), AND, ADD )</seq>                                                   
      <seq>DEFINEMERGE( ( ({cat}&(({rabbit}) WITHIN seca)&(({sheep}) WITHIN secb)&((({rabbit})) WITHIN seca)&((
({sheep})) WITHIN secb)&{cat}),((((({rabbit})) WITHIN seca)&((({sheep})) WITHIN secb)&{cat})) ), AND, ADD )</se
q>                                                                                                             
      <seq>((({cat}),((((({rabbit})))) WITHIN seca),((((({sheep})))) WITHIN secb))&((({rabbit})) WITHIN seca)&(
(({sheep})) WITHIN secb)&{cat})</seq>                                                                          
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  '+seca:(rabbit) +secb:(sheep) +cat'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 81.636 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
 81.496 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 81.496 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
 81.496 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
 81.496 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
 81.496 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              

6 rows selected.

SQL> select parser.progrelax('cat +secb:(+albatross)') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat})&((({albatross})) WITHIN secb)),((((({albatross})) WITHIN secb)) & (((({albat
ross})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                                               
      <seq>DEFINEMERGE( ( (NEAR(({cat}))&((NEAR(({albatross}))) WITHIN secb)),((((({albatross})) WITHIN secb)) 
& (((({albatross})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                                   
      <seq>DEFINEMERGE( ( (({cat})&((({albatross})) WITHIN secb)),((((({albatross})) WITHIN secb)) & (((({albat
ross})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                                               
      <seq>DEFINEMERGE( ( ({cat}&(({albatross}&{albatross}) WITHIN secb)&((({albatross})) WITHIN secb)),((((({a
lbatross})) WITHIN secb)) & (((({albatross})) WITHIN secb),{cat})) ), AND, ADD )</seq>                         
      <seq>((({cat}),((((({albatross}))&{albatross})) WITHIN secb))&((({albatross})) WITHIN secb))</seq>       
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat +secb:(+albatross)'
  3  ),1) > 0 order by score desc;

no rows selected

SQL> select parser.progrelax('cat +secb:(albatross cow)') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat})&((({albatross} {cow})) WITHIN secb)),((((({albatross},{cow})) WITHIN secb)) 
& (((({albatross},{cow})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                             
      <seq>DEFINEMERGE( ( (NEAR(({cat}))&((NEAR(({albatross},{cow}))) WITHIN secb)),((((({albatross},{cow})) WI
THIN secb)) & (((({albatross},{cow})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                 
      <seq>DEFINEMERGE( ( (({cat})&((({albatross}&{cow})) WITHIN secb)),((((({albatross},{cow})) WITHIN secb)) 
& (((({albatross},{cow})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                             
      <seq>DEFINEMERGE( ( ({cat}&(((NEAR(({albatross},{cow})))) WITHIN secb)&((({albatross},{cow})) WITHIN secb
)),((((({albatross},{cow})) WITHIN secb)) & (((({albatross},{cow})) WITHIN secb),{cat})) ), AND, ADD )</seq>   
      <seq>((({cat}),((((({albatross},{cow})))) WITHIN secb))&((({albatross},{cow})) WITHIN secb))</seq>       
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat +secb:(albatross cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
   .399 cat sheep cow <secb>sheep cow<secb>                                                                    
   .399 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
   .399 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .399 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
   .399 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
   .399 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
   .399 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .399 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .200 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .200 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .200 catty doggy sheepy rabbit<secb>cow</secb>                                                              
   .200 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .200 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
   .200 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              

14 rows selected.

SQL> select parser.progrelax('cat +secb:(albatross flamingo)') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat})&((({albatross} {flamingo})) WITHIN secb)),((((({albatross},{flamingo})) WITH
IN secb)) & (((({albatross},{flamingo})) WITHIN secb),{cat})) ), AND, ADD )</seq>                              
      <seq>DEFINEMERGE( ( (NEAR(({cat}))&((NEAR(({albatross},{flamingo}))) WITHIN secb)),((((({albatross},{flam
ingo})) WITHIN secb)) & (((({albatross},{flamingo})) WITHIN secb),{cat})) ), AND, ADD )</seq>                  
      <seq>DEFINEMERGE( ( (({cat})&((({albatross}&{flamingo})) WITHIN secb)),((((({albatross},{flamingo})) WITH
IN secb)) & (((({albatross},{flamingo})) WITHIN secb),{cat})) ), AND, ADD )</seq>                              
      <seq>DEFINEMERGE( ( ({cat}&(((NEAR(({albatross},{flamingo})))) WITHIN secb)&((({albatross},{flamingo})) W
ITHIN secb)),((((({albatross},{flamingo})) WITHIN secb)) & (((({albatross},{flamingo})) WITHIN secb),{cat})) ),
 AND, ADD )</seq>                                                                                              
      <seq>((({cat}),((((({albatross},{flamingo})))) WITHIN secb))&((({albatross},{flamingo})) WITHIN secb))</s
eq>                                                                                                            
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat +secb:(albatross flamingo)'
  3  ),1) > 0 order by score desc;

no rows selected

SQL> select parser.progrelax('cat secb:(albatross flamingo)') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat})&((({albatross} {flamingo})) WITHIN secb)),((((({albatross},{flamingo})) WITH
IN secb),{cat})) ), AND, ADD )</seq>                                                                           
      <seq>DEFINEMERGE( ( (NEAR(({cat}))&((NEAR(({albatross},{flamingo}))) WITHIN secb)),((((({albatross},{flam
ingo})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                                               
      <seq>DEFINEMERGE( ( (({cat})&((({albatross}&{flamingo})) WITHIN secb)),((((({albatross},{flamingo})) WITH
IN secb),{cat})) ), AND, ADD )</seq>                                                                           
      <seq>DEFINEMERGE( ( ({cat}&(((NEAR(({albatross},{flamingo})))) WITHIN secb)),((((({albatross},{flamingo})
) WITHIN secb),{cat})) ), AND, ADD )</seq>                                                                     
      <seq>((({cat}),((((({albatross},{flamingo})))) WITHIN secb)))</seq>                                      
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat secb:(albatross flamingo)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
  2.618 cat cat cat cat cat cat cat xx dog                                                                     
  1.870 cat cat cat cat cat xx dog                                                                             
  1.122 cat dog xx cat dog xx cat dog                                                                          
   .748 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .748 cat cat dog                                                                                            
   .748 cat cat xx dog dog dog dog dog                                                                         
   .374 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .374 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .374 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
   .374 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
   .374 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
   .374 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
   .374 cat dog rabbit fox                                                                                     
   .374 cat dog dog rabbit                                                                                     
   .374 cat sheep cow <secb>sheep cow<secb>                                                                    
   .374 cat                                                                                                    
   .374 cat dog                                                                                                

17 rows selected.

SQL> select parser.progrelax('cat +secb:(fox cow)') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat})&((({fox} {cow})) WITHIN secb)),((((({fox},{cow})) WITHIN secb)) & (((({fox},
{cow})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                                               
      <seq>DEFINEMERGE( ( (NEAR(({cat}))&((NEAR(({fox},{cow}))) WITHIN secb)),((((({fox},{cow})) WITHIN secb)) 
& (((({fox},{cow})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                                   
      <seq>DEFINEMERGE( ( (({cat})&((({fox}&{cow})) WITHIN secb)),((((({fox},{cow})) WITHIN secb)) & (((({fox},
{cow})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                                               
      <seq>DEFINEMERGE( ( ({cat}&(((NEAR(({fox},{cow})))) WITHIN secb)&((({fox},{cow})) WITHIN secb)),((((({fox
},{cow})) WITHIN secb)) & (((({fox},{cow})) WITHIN secb),{cat})) ), AND, ADD )</seq>                           
      <seq>((({cat}),((((({fox},{cow})))) WITHIN secb))&((({fox},{cow})) WITHIN secb))</seq>                   
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat +secb:(fox cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 51.208 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
 51.157 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
 51.157 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 51.157 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 51.157 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
 51.157 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
 51.157 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
  5.205 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
  5.205 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
  5.205 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              
  5.205 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
  5.205 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .399 cat sheep cow <secb>sheep cow<secb>                                                                    
   .200 catty doggy sheepy rabbit<secb>cow</secb>                                                              

14 rows selected.

SQL> select parser.progrelax('dog +secb:(cow)') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({dog})&((({cow})) WITHIN secb)),((((({cow})) WITHIN secb)) & (((({cow})) WITHIN sec
b),{dog})) ), AND, ADD )</seq>                                                                                 
      <seq>DEFINEMERGE( ( (NEAR(({dog}))&((NEAR(({cow}))) WITHIN secb)),((((({cow})) WITHIN secb)) & (((({cow})
) WITHIN secb),{dog})) ), AND, ADD )</seq>                                                                     
      <seq>DEFINEMERGE( ( (({dog})&((({cow})) WITHIN secb)),((((({cow})) WITHIN secb)) & (((({cow})) WITHIN sec
b),{dog})) ), AND, ADD )</seq>                                                                                 
      <seq>DEFINEMERGE( ( ({dog}&(({cow}) WITHIN secb)&((({cow})) WITHIN secb)),((((({cow})) WITHIN secb)) & ((
(({cow})) WITHIN secb),{dog})) ), AND, ADD )</seq>                                                             
      <seq>((({dog}),((((({cow})))) WITHIN secb))&((({cow})) WITHIN secb))</seq>                               
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'dog +secb:(cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 81.597 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              
 81.597 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 81.597 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
 81.597 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 81.597 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .399 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .399 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
   .399 cat sheep cow <secb>sheep cow<secb>                                                                    
   .399 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
   .399 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .399 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .399 catty doggy sheepy rabbit<secb>cow</secb>                                                              
   .399 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
   .399 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      

14 rows selected.

SQL> select parser.progrelax('dog +secb:(cow)') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({dog})&((({cow})) WITHIN secb)),((((({cow})) WITHIN secb)) & (((({cow})) WITHIN sec
b),{dog})) ), AND, ADD )</seq>                                                                                 
      <seq>DEFINEMERGE( ( (NEAR(({dog}))&((NEAR(({cow}))) WITHIN secb)),((((({cow})) WITHIN secb)) & (((({cow})
) WITHIN secb),{dog})) ), AND, ADD )</seq>                                                                     
      <seq>DEFINEMERGE( ( (({dog})&((({cow})) WITHIN secb)),((((({cow})) WITHIN secb)) & (((({cow})) WITHIN sec
b),{dog})) ), AND, ADD )</seq>                                                                                 
      <seq>DEFINEMERGE( ( ({dog}&(({cow}) WITHIN secb)&((({cow})) WITHIN secb)),((((({cow})) WITHIN secb)) & ((
(({cow})) WITHIN secb),{dog})) ), AND, ADD )</seq>                                                             
      <seq>((({dog}),((((({cow})))) WITHIN secb))&((({cow})) WITHIN secb))</seq>                               
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'dog +secb:(cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 81.597 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              
 81.597 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 81.597 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
 81.597 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 81.597 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .399 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .399 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
   .399 cat sheep cow <secb>sheep cow<secb>                                                                    
   .399 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
   .399 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .399 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .399 catty doggy sheepy rabbit<secb>cow</secb>                                                              
   .399 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
   .399 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      

14 rows selected.

SQL> select parser.progrelax('cat +secb:(cow)') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat})&((({cow})) WITHIN secb)),((((({cow})) WITHIN secb)) & (((({cow})) WITHIN sec
b),{cat})) ), AND, ADD )</seq>                                                                                 
      <seq>DEFINEMERGE( ( (NEAR(({cat}))&((NEAR(({cow}))) WITHIN secb)),((((({cow})) WITHIN secb)) & (((({cow})
) WITHIN secb),{cat})) ), AND, ADD )</seq>                                                                     
      <seq>DEFINEMERGE( ( (({cat})&((({cow})) WITHIN secb)),((((({cow})) WITHIN secb)) & (((({cow})) WITHIN sec
b),{cat})) ), AND, ADD )</seq>                                                                                 
      <seq>DEFINEMERGE( ( ({cat}&(({cow}) WITHIN secb)&((({cow})) WITHIN secb)),((((({cow})) WITHIN secb)) & ((
(({cow})) WITHIN secb),{cat})) ), AND, ADD )</seq>                                                             
      <seq>((({cat}),((((({cow})))) WITHIN secb))&((({cow})) WITHIN secb))</seq>                               
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat +secb:(cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 81.597 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
 81.547 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
 81.547 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 81.547 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 81.547 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
 81.547 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
 81.547 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
 81.547 cat sheep cow <secb>sheep cow<secb>                                                                    
   .399 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
   .399 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .399 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              
   .399 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .399 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .399 catty doggy sheepy rabbit<secb>cow</secb>                                                              

14 rows selected.

SQL> select parser.progrelax('secb:(+fox cow)') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (((({fox} {cow})) WITHIN secb)),((((({fox}) & ({fox},{cow})) WITHIN secb))) ), AND, A
DD )</seq>                                                                                                     
      <seq>DEFINEMERGE( ( (((NEAR(({fox},{cow}))) WITHIN secb)),((((({fox}) & ({fox},{cow})) WITHIN secb))) ), 
AND, ADD )</seq>                                                                                               
      <seq>DEFINEMERGE( ( (((({fox}&{cow})) WITHIN secb)),((((({fox}) & ({fox},{cow})) WITHIN secb))) ), AND, A
DD )</seq>                                                                                                     
      <seq>DEFINEMERGE( ( ((((NEAR(({fox},{cow})))&{fox}) WITHIN secb)),((((({fox}) & ({fox},{cow})) WITHIN sec
b))) ), AND, ADD )</seq>                                                                                       
      <seq>((((((({fox},{cow}))&{fox})) WITHIN secb)))</seq>                                                   
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'secb:(+fox cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 63.662 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
 63.662 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
 63.662 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 63.662 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 63.662 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
 63.662 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
 63.662 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              
 63.662 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
 63.662 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 63.662 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
 63.662 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
 63.662 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  

12 rows selected.

SQL> select parser.progrelax('seca:(dog rabbit)') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (((({dog} {rabbit})) WITHIN seca)),((((({dog},{rabbit})) WITHIN seca))) ), AND, ADD )
</seq>                                                                                                         
      <seq>DEFINEMERGE( ( (((NEAR(({dog},{rabbit}))) WITHIN seca)),((((({dog},{rabbit})) WITHIN seca))) ), AND,
 ADD )</seq>                                                                                                   
      <seq>DEFINEMERGE( ( (((({dog}&{rabbit})) WITHIN seca)),((((({dog},{rabbit})) WITHIN seca))) ), AND, ADD )
</seq>                                                                                                         
      <seq>DEFINEMERGE( ( ((((NEAR(({dog},{rabbit})))) WITHIN seca)),((((({dog},{rabbit})) WITHIN seca))) ), AN
D, ADD )</seq>                                                                                                 
      <seq>((((((({dog},{rabbit})))) WITHIN seca)))</seq>                                                      
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'seca:(dog rabbit)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 91.545 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
 91.323 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 91.323 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 91.323 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 91.323 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
 91.323 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
 91.323 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
 91.323 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
 73.260 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              
   .443 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
   .431 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
   .431 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      

12 rows selected.

SQL> select parser.progrelax('catt*') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( ((catt%)),((catt%)) ), AND, ADD )</seq>                                              
      <seq>DEFINEMERGE( ( (NEAR((catt%))),((catt%)) ), AND, ADD )</seq>                                        
      <seq>DEFINEMERGE( ( ((catt%)),((catt%)) ), AND, ADD )</seq>                                              
      <seq>DEFINEMERGE( ( (catt%),((catt%)) ), AND, ADD )</seq>                                                
      <seq>(((catt%)))</seq>                                                                                   
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'catt*'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 82.973 catty doggy sheepy rabbit<secb>cow</secb>                                                              

1 row selected.

SQL> select parser.progrelax('cat-dog') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat} {dog})),(({cat},{dog})) ), AND, ADD )</seq>                                  
      <seq>DEFINEMERGE( ( (NEAR(({cat},{dog}))),(({cat},{dog})) ), AND, ADD )</seq>                            
      <seq>DEFINEMERGE( ( (({cat}&{dog})),(({cat},{dog})) ), AND, ADD )</seq>                                  
      <seq>DEFINEMERGE( ( ((NEAR(({cat},{dog})))),(({cat},{dog})) ), AND, ADD )</seq>                          
      <seq>((({cat},{dog})))</seq>                                                                             
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat-dog'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 93.556 cat dog xx cat dog xx cat dog                                                                          
 91.385 cat dog dog rabbit                                                                                     
 91.372 cat cat dog                                                                                            
 91.185 cat dog rabbit fox                                                                                     
 91.185 cat dog                                                                                                
 74.332 cat cat cat cat cat cat cat xx dog                                                                     
 74.196 cat cat xx dog dog dog dog dog                                                                         
 73.958 cat cat cat cat cat xx dog                                                                             
   .748 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .399 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
   .399 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              
   .399 dog rabbit fox                                                                                         
   .399 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .399 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .399 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .374 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
   .374 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
   .374 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .374 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .374 cat sheep cow <secb>sheep cow<secb>                                                                    
   .374 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
   .374 cat                                                                                                    
   .374 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      

23 rows selected.

SQL> select parser.progrelax('cat*dog') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat*dog})),(({cat*dog})) ), AND, ADD )</seq>                                      
      <seq>DEFINEMERGE( ( (NEAR(({cat*dog}))),(({cat*dog})) ), AND, ADD )</seq>                                
      <seq>DEFINEMERGE( ( (({cat*dog})),(({cat*dog})) ), AND, ADD )</seq>                                      
      <seq>DEFINEMERGE( ( ({cat*dog}),(({cat*dog})) ), AND, ADD )</seq>                                        
      <seq>((({cat*dog})))</seq>                                                                               
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat*dog'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 82.611 cat*dog rabbit*fox                                                                                     
 82.611 cat*dog rabbit*fox                                                                                     

2 rows selected.

SQL> select parser.progrelax('cat*dog*') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( ((cat\*dog%)),((cat\*dog%)) ), AND, ADD )</seq>                                      
      <seq>DEFINEMERGE( ( (NEAR((cat\*dog%))),((cat\*dog%)) ), AND, ADD )</seq>                                
      <seq>DEFINEMERGE( ( ((cat\*dog%)),((cat\*dog%)) ), AND, ADD )</seq>                                      
      <seq>DEFINEMERGE( ( (cat\*dog%),((cat\*dog%)) ), AND, ADD )</seq>                                        
      <seq>(((cat\*dog%)))</seq>                                                                               
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat*dog*'
  3  ),1) > 0 order by score desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 82.611 cat*dog rabbit*fox                                                                                     
 82.611 cat#doggy                                                                                              
 82.611 cat*dog rabbit*fox                                                                                     

3 rows selected.

SQL> select parser.progrelax('cat +seca:(rabbit +dog) -mouse -horse') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({cat})&((({rabbit} {dog})) WITHIN seca) ~{mouse} ~{horse}),((((({dog}) & ({dog},{ra
bbit})) WITHIN seca)) & (((({dog}) & ({dog},{rabbit})) WITHIN seca),{cat}) ~{mouse} ~{horse}) ), AND, ADD )</se
q>                                                                                                             
      <seq>DEFINEMERGE( ( (NEAR(({cat}))&((NEAR(({rabbit},{dog}))) WITHIN seca) ~{mouse} ~{horse}),((((({dog}) 
& ({dog},{rabbit})) WITHIN seca)) & (((({dog}) & ({dog},{rabbit})) WITHIN seca),{cat}) ~{mouse} ~{horse}) ), AN
D, ADD )</seq>                                                                                                 
      <seq>DEFINEMERGE( ( (({cat})&((({rabbit}&{dog})) WITHIN seca) ~{mouse} ~{horse}),((((({dog}) & ({dog},{ra
bbit})) WITHIN seca)) & (((({dog}) & ({dog},{rabbit})) WITHIN seca),{cat}) ~{mouse} ~{horse}) ), AND, ADD )</se
q>                                                                                                             
      <seq>DEFINEMERGE( ( ({cat}&(((NEAR(({rabbit},{dog})))&{dog}) WITHIN seca)&((({dog}) & ({dog},{rabbit})) W
ITHIN seca) ~{mouse} ~{horse}),((((({dog}) & ({dog},{rabbit})) WITHIN seca)) & (((({dog}) & ({dog},{rabbit})) W
ITHIN seca),{cat}) ~{mouse} ~{horse}) ), AND, ADD )</seq>                                                      
      <seq>((({cat}),((((({rabbit},{dog}))&{dog})) WITHIN seca))&((({dog}) & ({dog},{rabbit})) WITHIN seca) ~{m
ouse} ~{horse})</seq>                                                                                          
    </progression>                                                                                             
  </textquery>                                                                                                 
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat +seca:(rabbit +dog) -mouse -horse'
  3  ),1) > 0 order by score(1) desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 41.748 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
 41.634 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
 41.634 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .886 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .443 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              
   .443 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .443 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .443 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         

8 rows selected.

SQL> select parser.progrelax('the angry cat attacked the ugly horse. They then both attacked the dog who was scared of the mouse. Afterwards, the went for a cup of tea with the rabbit') "Query Text" from dual;

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
                                                                                                               
<query>                                                                                                        
  <textquery>                                                                                                  
    <progression>                                                                                              
      <seq>DEFINEMERGE( ( (({the} {angry} {cat} {attacked} {the} {ugly} {horse} {They} {then} {both} {attacked}
 {the} {dog} {who} {was} {scared} {of} {the} {mouse} {Afterwards} {the} {went} {for} {a} {cup} {of} {tea} {with
} {the} {rabbit})),(({the},{angry},{cat},{attacked},{the},{ugly},{horse},{They},{then},{both},{attacked},{the},
{dog},{who},{was},{scared},{of},{the},{mouse},{Afterwards},{the},{went},{for},{a},{cup},{of},{tea},{with},{the}
,{rabbit})) ), AND, ADD )</seq>                                                                                
      <seq>DEFINEMERGE( ( (NEAR(({the},{angry},{cat},{attacked},{the},{ugly},{horse},{They},{then},{both},{atta
cked},{the},{dog},{who},{was},{scared},{of},{the},{mouse},{Afterwards},{the},{went},{for},{a},{cup},{of},{tea},
{with},{the},{rabbit}))),(({the},{angry},{cat},{attacked},{the},{ugly},{horse},{They},{then},{both},{attacked},
{the},{dog},{who},{was},{scared},{of},{the},{mouse},{Afterwards},{the},{went},{for},{a},{cup},{of},{tea},{with}
,{the},{rabbit})) ), AND, ADD )</seq>                                                                          
      <seq>DEFINEMERGE( ( (({the}&{angry}&{cat}&{attacked}&{the}&{ugly}&{horse}&{They}&{then}&{both}&{attacked}
&{the}&{dog}&{who}&{was}&{scared}&{of}&{the}&{mouse}&{Afterwards}&{the}&{went}&{for}&{a}&{cup}&{of}&{tea}&{with
}&{the}&{rabbit})),(({the},{angry},{cat},{attacked},{the},{ugly},{horse},{They},{then},{both},{attacked},{the},
{dog},{who},{was},{scared},{of},{the},{mouse},{Afterwards},{the},{went},{for},{a},{cup},{of},{tea},{with},{the}
,{rabbit})) ), AND, ADD )</seq>                                                                                
      <seq>DEFINEMERGE( ( ((NEAR(({angry},{cat})),NEAR(({angry},{attacked})),NEAR(({angry},{ugly})),NEAR(({angr
y},{horse})),NEAR(({angry},{attacked})),NEAR(({angry},{dog})),NEAR(({angry},{scared})),NEAR(({angry},{mouse})),
NEAR(({angry},{Afterwards})),NEAR(({angry},{went})),NEAR(({angry},{cup})),NEAR(({angry},{tea})),NEAR(({angry},{
rabbit})),NEAR(({cat},{attacked})),NEAR(({cat},{ugly})),NEAR(({cat},{horse})),NEAR(({cat},{attacked})),NEAR(({c
at},{dog})),NEAR(({cat},{scared})),NEAR(({cat},{mouse})),NEAR(({cat},{Afterwards})),NEAR(({cat},{went})),NEAR((
{cat},{cup})),NEAR(({cat},{tea})),NEAR(({cat},{rabbit})),NEAR(({attacked},{ugly})),NEAR(({attacked},{horse})),N
EAR(({attacked},{attacked})),NEAR(({attacked},{dog})),NEAR(({attacked},{scared})),NEAR(({attacked},{mouse})),NE
AR(({attacked},{Afterwards})),NEAR(({attacked},{went})),NEAR(({attacked},{cup})),NEAR(({attacked},{tea})),NEAR(
({attacked},{rabbit})),NEAR(({ugly},{horse})),NEAR(({ugly},{attacked})),NEAR(({ugly},{dog})),NEAR(({ugly},{scar
ed})),NEAR(({ugly},{mouse})),NEAR(({ugly},{Afterwards})),NEAR(({ugly},{went})),NEAR(({ugly},{cup})),NEAR(({ugly
},{tea})),NEAR(({ugly},{rabbit})),NEAR(({horse},{attacked})),NEAR(({horse},{dog})),NEAR(({horse},{scared})),NEA
R(({horse},{mouse})),NEAR(({horse},{Afterwards})),NEAR(({horse},{went})),NEAR(({horse},{cup})),NEAR(({horse},{t
ea})),NEAR(({horse},{rabbit})),NEAR(({attacked},{dog})),NEAR(({attacked},{scared})),NEAR(({attacked},{mouse})),
NEAR(({attacked},{Afterwards})),NEAR(({attacked},{went})),NEAR(({attacked},{cup})),NEAR(({attacked},{tea})),NEA
R(({attacked},{rabbit})),NEAR(({dog},{scared})),NEAR(({dog},{mouse})),NEAR(({dog},{Afterwards})),NEAR(({dog},{w
ent})),NEAR(({dog},{cup})),NEAR(({dog},{tea})),NEAR(({dog},{rabbit})),NEAR(({scared},{mouse})),NEAR(({scared},{
Afterwards})),NEAR(({scared},{went})),NEAR(({scared},{cup})),NEAR(({scared},{tea})),NEAR(({scared},{rabbit})),N
EAR(({mouse},{Afterwards})),NEAR(({mouse},{went})),NEAR(({mouse},{cup})),NEAR(({mouse},{tea})),NEAR(({mouse},{r
abbit})),NEAR(({Afterwards},{went})),NEAR(({Afterwards},{cup})),NEAR(({Afterwards},{tea})),NEAR(({Afterwards},{
rabbit})),NEAR(({went},{cup})),NEAR(({went},{tea})),NEAR(({went},{rabbit})),NEAR(({cup},{tea})),NEAR(({cup},{ra
bbit})),NEAR(({tea},{rabbit})))),(({the},{angry},{cat},{attacked},{the},{ugly},{horse},{They},{then},{both},{at
tacked},{the},{dog},{who},{was},{scared},{of},{the},{mouse},{Afterwards},{the},{went},{for},{a},{cup},{of},{tea
},{with},{the},{rabbit})) ), AND, ADD )</seq>                                                                  
      <seq>((({the},{angry},{cat},{attacked},{the},{ugly},{horse},{They},{then},{both},{attacked},{the},{dog},{
who},{was},{scared},{of},{the},{mouse},{Afterwards},{the},{went},{for},{a},{cup},{of},{tea},{with},{the},{rabbi
t})))</seq>                                                                                                    
    </progression>                                                                                             
  </textquery>                                                                                                 

Query Text                                                                                                     
---------------------------------------------------------------------------------------------------------------
  <score datatype="FLOAT"/>                                                                                    
</query>                                                                                                       
                                                                                                               

1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'the angry cat attacked the ugly horse. They then both attacked the dog who was scared of the mouse. Afterwards, the went for a cup of tea with the rabbit'
  3  ),1) > 0 order by score(1) desc;

  SCORE TEXT                                                                                                   
------- -----------------------------------------------------------------                                      
 23.408 cat dog dog rabbit                                                                                     
 23.389 cat dog rabbit fox                                                                                     
 21.751 cat dog xx cat dog xx cat dog                                                                          
 21.675 cat cat cat cat cat cat cat xx dog                                                                     
 21.656 cat cat xx dog dog dog dog dog                                                                         
 21.622 cat cat cat cat cat xx dog                                                                             
 21.542 cat cat dog                                                                                            
 21.540 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                            
 21.540 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                        
 21.525 dog rabbit fox                                                                                         
 21.515 cat dog                                                                                                
   .107 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .073 cat-dog rabbit fox                                                                                     
   .073 rabbit fox                                                                                             
   .073 catty doggy sheepy rabbit<secb>cow</secb>                                                              
   .057 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>                                              
   .057 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .057 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>                                              
   .057 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  
   .057 dog <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
   .053 cat <seca>dog</seca><secb>fox sheep cow</secb>                                                         
   .053 cat sheep cow <secb>sheep cow<secb>                                                                    
   .053 cat                                                                                                    
   .053 cat <seca>rabbit</seca><secb>fox sheep cow</secb>                                                      
   .053 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>                                              
   .053 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>                                                  

26 rows selected.

SQL> 
SQL> set echo off
