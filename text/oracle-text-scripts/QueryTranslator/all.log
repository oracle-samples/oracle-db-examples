SQL> connect system/welcome1
Connected.
SQL> grant select on ctxsys.ctx_indexes to roger;

Grant succeeded.

SQL> grant select on ctxsys.ctx_index_values to roger;

Grant succeeded.

SQL> connect roger/roger
Connected.
SQL> @query_parser

Package created.

No errors.

Package body created.

No errors.
SQL> @loaddata
SQL> @test_qry

Call completed.

SQL> 
SQL> exec :srch := rep.OTSearchString('+cat dog rabbit fox -fish')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
(({cat}),{dog},{rabbit},{fox})~{fish}

SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
        76 cat dog rabbit fox
        76 dog rabbit fox cat
        51 cat dog rabbit
        51 the cat nt dog bt rabbit
        26 dog cat
        26 the cat nt dog bt
        26 cat dog
         1 cat

8 rows selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('+cat +dog rabbit fox -fish', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({cat} {dog} {rabbit} {fox})~{fish}</seq>
      <seq>( NEAR(({cat},{dog},{rabbit},{fox})) )~{fish}</seq>
      <seq>(({cat}&{dog}&{rabbit}&{fox})*10*10)&(NEAR(({cat},{dog}))&NEAR(({cat}
,{rabbit}))&NEAR(({cat},{fox}))&NEAR(({dog},{rabbit}))&NEAR(({dog},{fox}))&NEAR(
({rabbit},{fox})))~{fish}</seq>
      <seq>({cat}&{dog}&{rabbit}&{fox})~{fish}</seq>
      <seq>(({cat}&{dog})*10*10)&({cat},{dog},{rabbit},{fox})~{fish}</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
        81 cat dog rabbit fox
        64 dog rabbit fox cat
        10 cat dog rabbit
        10 the cat nt dog bt rabbit
         5 dog cat
         5 the cat nt dog bt
         5 cat dog

7 rows selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('+cat +dog rabbit -fish', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({cat} {dog} {rabbit})~{fish}</seq>
      <seq>( NEAR(({cat},{dog},{rabbit})) )~{fish}</seq>
      <seq>(({cat}&{dog}&{rabbit})*10*10)&(NEAR(({cat},{dog}))&NEAR(({cat},{rabb
it}))&NEAR(({dog},{rabbit})))~{fish}</seq>
      <seq>({cat}&{dog}&{rabbit})~{fish}</seq>
      <seq>(({cat}&{dog})*10*10)&({cat},{dog},{rabbit})~{fish}</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
        81 cat dog rabbit
        81 cat dog rabbit fox
        63 dog rabbit fox cat
        63 the cat nt dog bt rabbit
         7 cat dog
         7 dog cat
         7 the cat nt dog bt

7 rows selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('+cat +dog rabbit', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({cat} {dog} {rabbit})</seq>
      <seq>( NEAR(({cat},{dog},{rabbit})) )</seq>
      <seq>(({cat}&{dog}&{rabbit})*10*10)&(NEAR(({cat},{dog}))&NEAR(({cat},{rabb
it}))&NEAR(({dog},{rabbit})))</seq>
      <seq>({cat}&{dog}&{rabbit})</seq>
      <seq>(({cat}&{dog})*10*10)&({cat},{dog},{rabbit})</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
        81 cat dog rabbit
        81 cat dog rabbit fox
        81 cat dog rabbit fox fish
        63 dog rabbit fox cat
        63 dog rabbit fox fish cat
        63 the cat nt dog bt rabbit
        63 the cat and the dog and the rabbit but not the fish
         7 dog cat
         7 cat dog
         7 the cat nt dog bt

10 rows selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('cat dog rabbit', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({cat} {dog} {rabbit})</seq>
      <seq>( NEAR(({cat},{dog},{rabbit})) )</seq>
      <seq>(({cat}&{dog}&{rabbit})*10*10)&(NEAR(({cat},{dog}))&NEAR(({cat},{rabb
it}))&NEAR(({dog},{rabbit})))</seq>
      <seq>({cat}&{dog}&{rabbit})</seq>
      <seq>({cat},{dog},{rabbit})</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
        81 cat dog rabbit fox
        81 cat dog rabbit
        81 cat dog rabbit fox fish
        63 dog rabbit fox fish cat
        63 dog rabbit fox cat
        63 the cat and the dog and the rabbit but not the fish
        63 the cat nt dog bt rabbit
         7 cat dog
         7 dog cat
         7 the cat nt dog bt
         1 cat

11 rows selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('cat volkswagen dog rabbit', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({cat} {volkswagen} {dog} {rabbit})</seq>
      <seq>( NEAR(({cat},{volkswagen},{dog},{rabbit})) )</seq>
      <seq>(({cat}&{volkswagen}&{dog}&{rabbit})*10*10)&(NEAR(({cat},{volkswagen}
))&NEAR(({cat},{dog}))&NEAR(({cat},{rabbit}))&NEAR(({volkswagen},{dog}))&NEAR(({
volkswagen},{rabbit}))&NEAR(({dog},{rabbit})))</seq>
      <seq>({cat}&{volkswagen}&{dog}&{rabbit})</seq>
      <seq>({cat},{volkswagen},{dog},{rabbit})</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
        10 dog rabbit fox fish cat
        10 the cat and the dog and the rabbit but not the fish
        10 cat dog rabbit
        10 cat dog rabbit fox
        10 cat dog rabbit fox fish
        10 the cat nt dog bt rabbit
        10 dog rabbit fox cat
         5 cat dog
         5 dog cat
         5 the cat nt dog bt
         1 cat

11 rows selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('cat +dog', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({cat} {dog})</seq>
      <seq>( NEAR(({cat},{dog})) )</seq>
      <seq>(({cat}&{dog})*10*10)&(NEAR(({cat},{dog})))</seq>
      <seq>({cat}&{dog})</seq>
      <seq>(({dog})*10*10)&({cat},{dog})</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
        81 cat dog
        81 cat dog rabbit fox fish
        81 cat dog rabbit fox
        81 cat dog rabbit
        63 the cat nt dog bt
        63 the cat and the dog and the rabbit but not the fish
        63 dog rabbit fox fish cat
        63 dog rabbit fox cat
        63 the cat nt dog bt rabbit
        63 dog cat

10 rows selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('cat +nt', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({cat} {nt})</seq>
      <seq>( NEAR(({cat},{nt})) )</seq>
      <seq>(({cat}&{nt})*10*10)&(NEAR(({cat},{nt})))</seq>
      <seq>({cat}&{nt})</seq>
      <seq>(({nt})*10*10)&({cat},{nt})</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
        81 the cat nt dog bt rabbit
        81 the cat nt dog bt

2 rows selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('+"cat nt" rabbit', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({cat nt} {rabbit})</seq>
      <seq>( NEAR(({cat nt},{rabbit})) )</seq>
      <seq>(({cat nt}&{rabbit})*10*10)&(NEAR(({cat nt},{rabbit})))</seq>
      <seq>({cat nt}&{rabbit})</seq>
      <seq>(({cat nt})*10*10)&({cat nt},{rabbit})</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
        63 the cat nt dog bt rabbit
         1 the cat nt dog bt

2 rows selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('cat +nt dog', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({cat} {nt} {dog})</seq>
      <seq>( NEAR(({cat},{nt},{dog})) )</seq>
      <seq>(({cat}&{nt}&{dog})*10*10)&(NEAR(({cat},{nt}))&NEAR(({cat},{dog}))&NE
AR(({nt},{dog})))</seq>
      <seq>({cat}&{nt}&{dog})</seq>
      <seq>(({nt})*10*10)&({cat},{nt},{dog})</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
        81 the cat nt dog bt rabbit
        81 the cat nt dog bt

2 rows selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('"dog cat"', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({dog cat})</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
         3 dog cat

1 row selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('+"dog cat"', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({dog cat})</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
         3 dog cat

1 row selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('"cat dog rabbit"', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({cat dog rabbit})</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
         4 cat dog rabbit
         4 cat dog rabbit fox fish
         4 cat dog rabbit fox

3 rows selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('rabbit +"dog cat"', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({rabbit} {dog cat})</seq>
      <seq>( NEAR(({rabbit},{dog cat})) )</seq>
      <seq>(({rabbit}&{dog cat})*10*10)&(NEAR(({rabbit},{dog cat})))</seq>
      <seq>({rabbit}&{dog cat})</seq>
      <seq>(({dog cat})*10*10)&({rabbit},{dog cat})</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
         1 dog cat

1 row selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('cat-dog', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({cat-dog})</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
         6 the cat-dog bites the fox-fish

1 row selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('cat.*dog', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>(cat\.% {dog})</seq>
      <seq>( NEAR((cat\.%,{dog})) )</seq>
      <seq>((cat\.%&{dog})*10*10)&(NEAR((cat\.%,{dog})))</seq>
      <seq>(cat\.%&{dog})</seq>
      <seq>(cat\.%,{dog})</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
         1 cat dog
         1 cat dog rabbit
         1 cat dog rabbit fox
         1 cat dog rabbit fox fish
         1 the cat nt dog bt rabbit
         1 dog rabbit fox cat
         1 dog rabbit fox fish cat
         1 the cat and the dog and the rabbit but not the fish
         1 the cat nt dog bt
         1 dog cat

10 rows selected.

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('cat[]dog', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({cat[]dog})</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

no rows selected

SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('cat-dog -fish', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------
<query>
  <textquery>
    <progression>
      <seq>({cat-dog})~{fish}</seq>
    </progression>
  </textquery>
  <score datatype="INTEGER"/>
</query>


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;

  SCORE(0) TEXT
---------- ------------------------------------------------------------
         6 the cat-dog bites the fox-fish

1 row selected.

SQL> 
SQL> 
SQL> exec :srch := rep.OTProgRelaxClob('*****************', 'avtestindex')

PL/SQL procedure successfully completed.

SQL> print srch

SRCH
--------------------------------------------------------------------------------


SQL> select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc;
select score(0), text from avtest where contains (text, :srch, 0)>0 order by score(0) desc
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 1


SQL> 
SQL> set echo off
SQL> spool off
