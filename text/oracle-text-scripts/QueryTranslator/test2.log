SQL> @test
SQL> 
SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.simplesearch(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 28


SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  '+cat'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.simplesearch(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 1


SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  '+cat dog'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 20.000 cat cat xx dog dog dog dog dog
 12.000 cat dog xx cat dog xx cat dog
  8.000 cat dog dog rabbit
  4.000 cat cat cat cat cat xx dog
  4.000 cat cat cat cat cat cat cat xx dog
  4.000 cat dog
  4.000 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
  4.000 cat dog rabbit fox
  4.000 cat cat dog
  4.000 dog <seca>rabbit</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 dog rabbit fox

14 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  '+cat +dog'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 20.000 cat cat xx dog dog dog dog dog
 12.000 cat dog xx cat dog xx cat dog
  8.000 cat dog dog rabbit
  4.000 cat cat cat cat cat xx dog
  4.000 cat cat cat cat cat cat cat xx dog
  4.000 cat dog
  4.000 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
  4.000 cat dog rabbit fox
  4.000 cat cat dog
  4.000 dog <seca>rabbit</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 dog rabbit fox

14 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat dog +rabbit'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 53.000 cat dog dog rabbit
 52.000 dog rabbit fox
 52.000 cat dog rabbit fox
 10.000 cat cat xx dog dog dog dog dog
  6.000 cat dog xx cat dog xx cat dog
  3.000 catty doggy sheepy rabbit<secb>cow</secb>
  3.000 cat-dog rabbit fox
  3.000 rabbit fox
  2.000 cat dog
  2.000 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
  2.000 dog <seca>rabbit</seca><secb>fox sheep cow</secb>
  2.000 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  2.000 cat cat cat cat cat cat cat xx dog
  2.000 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>
  2.000 cat cat dog
  2.000 cat cat cat cat cat xx dog
  2.000 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>

17 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'seca:(dog)'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.simplesearch(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 4


SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat +secb:(albatross)'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.simplesearch(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 4


SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  '+seca:(rabbit) +secb:(sheep) +cat'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.simplesearch(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 4


SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat +secb:(+albatross)'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.simplesearch(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 4


SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat +secb:(albatross cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
  4.000 cat <seca>dog</seca><secb>fox sheep cow</secb>
  4.000 cat <seca>rabbit</seca><secb>fox sheep cow</secb>
  4.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>rabbit</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 catty doggy sheepy rabbit<secb>cow</secb>
  4.000 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
  4.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
  4.000 cat sheep cow <secb>sheep cow<secb>
  4.000 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>

14 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat +secb:(albatross flamingo)'
  3  ),1) > 0 order by score desc;

no rows selected

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat secb:(albatross flamingo)'
  3  ),1) > 0 order by score desc;

no rows selected

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat +secb:(fox cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
  4.000 cat <seca>dog</seca><secb>fox sheep cow</secb>
  4.000 cat <seca>rabbit</seca><secb>fox sheep cow</secb>
  4.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>rabbit</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 catty doggy sheepy rabbit<secb>cow</secb>
  4.000 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
  4.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
  4.000 cat sheep cow <secb>sheep cow<secb>
  4.000 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>

14 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'dog +secb:(cow)'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.simplesearch(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 4


SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'dog +secb:(cow)'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.simplesearch(
                                 *
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 4


SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'cat +secb:(cow)'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.simplesearch(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 4


SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'secb:(+fox cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
  4.000 cat <seca>dog</seca><secb>fox sheep cow</secb>
  4.000 cat <seca>rabbit</seca><secb>fox sheep cow</secb>
  4.000 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>rabbit</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 catty doggy sheepy rabbit<secb>cow</secb>
  4.000 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
  4.000 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
  4.000 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
  4.000 cat sheep cow <secb>sheep cow<secb>
  4.000 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>

14 rows selected.

SQL> select score(1) score, text from avtest where contains (text, parser.simplesearch(
  2  'catt*'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.simplesearch(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 1


SQL> 
SQL> -- prompt progressive relaxation
SQL> column "Query Text" format a111
SQL> set linesize 111
SQL> set long 500000
SQL> set pagesize 50
SQL> 
SQL> variable :qry varchar2(4000)
SP2-0553: Illegal variable name ":qry".
SQL> 
SQL> exec parser.setIndexName('avtestindex')

PL/SQL procedure successfully completed.

SQL> exec parser.setScoreType(parser.scoreTypeFloat)

PL/SQL procedure successfully completed.

SQL> 
SQL> select parser.progrelax('cat') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 1


SQL> select parser.progrelax('+cat') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  '+cat'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 1


SQL> select parser.progrelax('+cat dog') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (( {dog})),(( {dog})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (NEAR(( {dog}))),(( {dog})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (( {dog})),(( {dog})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ( {dog}),(( {dog})) ), AND, ADD )</seq>
      <seq>((( {dog})))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  '+cat dog'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 87.986 cat cat xx dog dog dog dog dog
 84.792 cat dog xx cat dog xx cat dog
 83.194 cat dog dog rabbit
 81.597 cat cat cat cat cat xx dog
 81.597 cat cat cat cat cat cat cat xx dog
 81.597 cat dog
 81.597 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.597 cat dog rabbit fox
 81.597 cat cat dog
 81.597 dog <seca>rabbit</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 dog rabbit fox

14 rows selected.

SQL> select parser.progrelax('+cat +dog') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (( +{dog})),(( +{dog})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (NEAR(( +{dog}))),(( +{dog})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (( +{dog})),(( +{dog})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ( +{dog}),(( +{dog})) ), AND, ADD )</seq>
      <seq>((( +{dog})))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  '+cat +dog'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 87.986 cat cat xx dog dog dog dog dog
 84.792 cat dog xx cat dog xx cat dog
 83.194 cat dog dog rabbit
 81.597 cat cat cat cat cat xx dog
 81.597 cat cat cat cat cat cat cat xx dog
 81.597 cat dog
 81.597 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.597 cat dog rabbit fox
 81.597 cat cat dog
 81.597 dog <seca>rabbit</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 dog rabbit fox

14 rows selected.

SQL> select parser.progrelax('+dog +cat') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (( +{cat})),(( +{cat})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (NEAR(( +{cat}))),(( +{cat})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (( +{cat})),(( +{cat})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ( +{cat}),(( +{cat})) ), AND, ADD )</seq>
      <seq>((( +{cat})))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  '+dog +cat'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 90.472 cat cat cat cat cat cat cat xx dog
 87.480 cat cat cat cat cat xx dog
 84.488 cat dog xx cat dog xx cat dog
 82.992 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 82.992 cat cat dog
 82.992 cat cat xx dog dog dog dog dog
 81.496 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.496 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.496 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.496 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.496 cat <seca>rabbit</seca><secb>fox sheep cow</secb>
 81.496 cat <seca>dog</seca><secb>fox sheep cow</secb>
 81.496 cat dog rabbit fox
 81.496 cat dog dog rabbit
 81.496 cat sheep cow <secb>sheep cow<secb>
 81.496 cat
 81.496 cat dog

17 rows selected.

SQL> select parser.progrelax('dog cat') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (( {cat})),(( {cat})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (NEAR(( {cat}))),(( {cat})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (( {cat})),(( {cat})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ( {cat}),(( {cat})) ), AND, ADD )</seq>
      <seq>((( {cat})))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'dog cat'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 90.472 cat cat cat cat cat cat cat xx dog
 87.480 cat cat cat cat cat xx dog
 84.488 cat dog xx cat dog xx cat dog
 82.992 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 82.992 cat cat dog
 82.992 cat cat xx dog dog dog dog dog
 81.496 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.496 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.496 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.496 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.496 cat <seca>rabbit</seca><secb>fox sheep cow</secb>
 81.496 cat <seca>dog</seca><secb>fox sheep cow</secb>
 81.496 cat dog rabbit fox
 81.496 cat dog dog rabbit
 81.496 cat sheep cow <secb>sheep cow<secb>
 81.496 cat
 81.496 cat dog

17 rows selected.

SQL> select parser.progrelax('cat dog +rabbit') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (( {dog}  +{rabbit})),(( {dog}, +{rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (NEAR(( {dog}, +{rabbit}))),(( {dog}, +{rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (( {dog}& +{rabbit})),(( {dog}, +{rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((NEAR(( {dog}, +{rabbit})))),(( {dog}, +{rabbit})) ), AND, ADD )</seq>
      <seq>((( {dog}, +{rabbit})))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat dog +rabbit'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 91.674 cat dog dog rabbit
 91.474 cat dog rabbit fox
 91.474 dog rabbit fox
  1.997 cat cat xx dog dog dog dog dog
  1.198 cat dog xx cat dog xx cat dog
   .510 catty doggy sheepy rabbit<secb>cow</secb>
   .510 cat-dog rabbit fox
   .510 rabbit fox
   .399 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>
   .399 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>
   .399 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>
   .399 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
   .399 cat dog
   .399 cat cat cat cat cat cat cat xx dog
   .399 cat cat cat cat cat xx dog
   .399 cat cat dog
   .399 dog <seca>rabbit</seca><secb>fox sheep cow</secb>

17 rows selected.

SQL> select parser.progrelax('cat rabbit') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (( {rabbit})),(( {rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (NEAR(( {rabbit}))),(( {rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (( {rabbit})),(( {rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ( {rabbit}),(( {rabbit})) ), AND, ADD )</seq>
      <seq>((( {rabbit})))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat rabbit'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 82.039 cat dog dog rabbit
 82.039 cat dog rabbit fox
 82.039 cat-dog rabbit fox
 82.039 rabbit fox
 82.039 catty doggy sheepy rabbit<secb>cow</secb>
 82.039 dog rabbit fox

6 rows selected.

SQL> select parser.progrelax('"cat rabbit"') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (( {rabbit})),(( {rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (NEAR(( {rabbit}))),(( {rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (( {rabbit})),(( {rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ( {rabbit}),(( {rabbit})) ), AND, ADD )</seq>
      <seq>((( {rabbit})))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  '"cat rabbit"'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 82.039 cat dog dog rabbit
 82.039 cat dog rabbit fox
 82.039 cat-dog rabbit fox
 82.039 rabbit fox
 82.039 catty doggy sheepy rabbit<secb>cow</secb>
 82.039 dog rabbit fox

6 rows selected.

SQL> select parser.progrelax('+cat +rabbit') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (( +{rabbit})),(( +{rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (NEAR(( +{rabbit}))),(( +{rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (( +{rabbit})),(( +{rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ( +{rabbit}),(( +{rabbit})) ), AND, ADD )</seq>
      <seq>((( +{rabbit})))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  '+cat +rabbit'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 82.039 cat dog dog rabbit
 82.039 cat dog rabbit fox
 82.039 cat-dog rabbit fox
 82.039 rabbit fox
 82.039 catty doggy sheepy rabbit<secb>cow</secb>
 82.039 dog rabbit fox

6 rows selected.

SQL> select parser.progrelax('seca:(dog)') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( ((() WITHIN seca)),(((() WITHIN seca))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN seca)),(((() WITHIN seca))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN seca)),(((() WITHIN seca))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN seca)),(((() WITHIN seca))) ), AND, ADD )</seq>
      <seq>(((((())) WITHIN seca)))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'seca:(dog)'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 29


SQL> select parser.progrelax('seca:(+dog)') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( ((() WITHIN seca)),(((() WITHIN seca))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN seca)),(((() WITHIN seca))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN seca)),(((() WITHIN seca))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN seca)),(((() WITHIN seca))) ), AND, ADD )</seq>
      <seq>(((((())) WITHIN seca)))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'seca:(+dog)'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 19


SQL> select parser.progrelax('seca:(-dog)') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( ((() WITHIN seca)),(((() WITHIN seca))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN seca)),(((() WITHIN seca))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN seca)),(((() WITHIN seca))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN seca)),(((() WITHIN seca))) ), AND, ADD )</seq>
      <seq>(((((())) WITHIN seca)))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'seca:(-dog)'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 19


SQL> select parser.progrelax('cat +secb:(albatross)') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)&(() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>(((((())) WITHIN secb))&(() WITHIN secb))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat +secb:(albatross)'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 19


SQL> select parser.progrelax('+seca:(rabbit) +secb:(sheep) +cat') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (( +{cat})&(() WITHIN seca)&(() WITHIN secb)),(((() WITHIN seca)&(() WITHIN secb)) &
((() WITHIN seca),(() WITHIN secb), +{cat})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (NEAR(( +{cat}))&(() WITHIN seca)&(() WITHIN secb)),(((() WITHIN seca)&(() WITHIN sec
b)) & ((() WITHIN seca),(() WITHIN secb), +{cat})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (( +{cat})&(() WITHIN seca)&(() WITHIN secb)),(((() WITHIN seca)&(() WITHIN secb)) &
((() WITHIN seca),(() WITHIN secb), +{cat})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ( +{cat}&(() WITHIN seca)&(() WITHIN secb)&(() WITHIN seca)&(() WITHIN secb)),(((() W
ITHIN seca)&(() WITHIN secb)) & ((() WITHIN seca),(() WITHIN secb), +{cat})) ), AND, ADD )</seq>
      <seq>((( +{cat}),(((())) WITHIN seca),(((())) WITHIN secb))&(() WITHIN seca)&(() WITHIN secb))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  '+seca:(rabbit) +secb:(sheep) +cat'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 29


SQL> select parser.progrelax('cat +secb:(+albatross)') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)&(() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>(((((())) WITHIN secb))&(() WITHIN secb))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat +secb:(+albatross)'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 19


SQL> select parser.progrelax('cat +secb:(albatross cow)') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (((( {cow})) WITHIN secb)),((((( {cow})) WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (((NEAR(( {cow}))) WITHIN secb)),((((( {cow})) WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (((( {cow})) WITHIN secb)),((((( {cow})) WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((( {cow}) WITHIN secb)&((( {cow})) WITHIN secb)),((((( {cow})) WITHIN secb))) ), AND
, ADD )</seq>
      <seq>((((((( {cow})))) WITHIN secb))&((( {cow})) WITHIN secb))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat +secb:(albatross cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 81.597 cat <seca>dog</seca><secb>fox sheep cow</secb>
 81.597 cat <seca>rabbit</seca><secb>fox sheep cow</secb>
 81.597 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>rabbit</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 catty doggy sheepy rabbit<secb>cow</secb>
 81.597 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.597 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.597 cat sheep cow <secb>sheep cow<secb>
 81.597 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>

14 rows selected.

SQL> select parser.progrelax('cat +secb:(albatross flamingo)') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (((( {flamingo})) WITHIN secb)),((((( {flamingo})) WITHIN secb))) ), AND, ADD )</seq>

      <seq>DEFINEMERGE( ( (((NEAR(( {flamingo}))) WITHIN secb)),((((( {flamingo})) WITHIN secb))) ), AND, ADD )
</seq>
      <seq>DEFINEMERGE( ( (((( {flamingo})) WITHIN secb)),((((( {flamingo})) WITHIN secb))) ), AND, ADD )</seq>

      <seq>DEFINEMERGE( ( ((( {flamingo}) WITHIN secb)&((( {flamingo})) WITHIN secb)),((((( {flamingo})) WITHIN
 secb))) ), AND, ADD )</seq>
      <seq>((((((( {flamingo})))) WITHIN secb))&((( {flamingo})) WITHIN secb))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat +secb:(albatross flamingo)'
  3  ),1) > 0 order by score desc;

no rows selected

SQL> select parser.progrelax('cat secb:(albatross flamingo)') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (((( {flamingo})) WITHIN secb)),((((( {flamingo})) WITHIN secb))) ), AND, ADD )</seq>

      <seq>DEFINEMERGE( ( (((NEAR(( {flamingo}))) WITHIN secb)),((((( {flamingo})) WITHIN secb))) ), AND, ADD )
</seq>
      <seq>DEFINEMERGE( ( (((( {flamingo})) WITHIN secb)),((((( {flamingo})) WITHIN secb))) ), AND, ADD )</seq>

      <seq>DEFINEMERGE( ( ((( {flamingo}) WITHIN secb)),((((( {flamingo})) WITHIN secb))) ), AND, ADD )</seq>
      <seq>((((((( {flamingo})))) WITHIN secb)))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat secb:(albatross flamingo)'
  3  ),1) > 0 order by score desc;

no rows selected

SQL> select parser.progrelax('cat +secb:(fox cow)') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (((( {cow})) WITHIN secb)),((((( {cow})) WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (((NEAR(( {cow}))) WITHIN secb)),((((( {cow})) WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (((( {cow})) WITHIN secb)),((((( {cow})) WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((( {cow}) WITHIN secb)&((( {cow})) WITHIN secb)),((((( {cow})) WITHIN secb))) ), AND
, ADD )</seq>
      <seq>((((((( {cow})))) WITHIN secb))&((( {cow})) WITHIN secb))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat +secb:(fox cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 81.597 cat <seca>dog</seca><secb>fox sheep cow</secb>
 81.597 cat <seca>rabbit</seca><secb>fox sheep cow</secb>
 81.597 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>rabbit</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 catty doggy sheepy rabbit<secb>cow</secb>
 81.597 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.597 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.597 cat sheep cow <secb>sheep cow<secb>
 81.597 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>

14 rows selected.

SQL> select parser.progrelax('dog +secb:(cow)') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)&(() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>(((((())) WITHIN secb))&(() WITHIN secb))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'dog +secb:(cow)'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 31


SQL> select parser.progrelax('dog +secb:(cow)') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)&(() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>(((((())) WITHIN secb))&(() WITHIN secb))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'dog +secb:(cow)'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
                                 *
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 19


SQL> select parser.progrelax('cat +secb:(cow)') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((() WITHIN secb)&(() WITHIN secb)),(((() WITHIN secb))) ), AND, ADD )</seq>
      <seq>(((((())) WITHIN secb))&(() WITHIN secb))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat +secb:(cow)'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 19


SQL> select parser.progrelax('secb:(+fox cow)') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (((( {cow})) WITHIN secb)),((((( {cow})) WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (((NEAR(( {cow}))) WITHIN secb)),((((( {cow})) WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (((( {cow})) WITHIN secb)),((((( {cow})) WITHIN secb))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((( {cow}) WITHIN secb)),((((( {cow})) WITHIN secb))) ), AND, ADD )</seq>
      <seq>((((((( {cow})))) WITHIN secb)))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'secb:(+fox cow)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 81.597 cat <seca>dog</seca><secb>fox sheep cow</secb>
 81.597 cat <seca>rabbit</seca><secb>fox sheep cow</secb>
 81.597 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>rabbit</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 catty doggy sheepy rabbit<secb>cow</secb>
 81.597 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.597 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.597 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.597 cat sheep cow <secb>sheep cow<secb>
 81.597 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>

14 rows selected.

SQL> select parser.progrelax('seca:(dog rabbit)') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (((( {rabbit})) WITHIN seca)),((((( {rabbit})) WITHIN seca))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (((NEAR(( {rabbit}))) WITHIN seca)),((((( {rabbit})) WITHIN seca))) ), AND, ADD )</se
q>
      <seq>DEFINEMERGE( ( (((( {rabbit})) WITHIN seca)),((((( {rabbit})) WITHIN seca))) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((( {rabbit}) WITHIN seca)),((((( {rabbit})) WITHIN seca))) ), AND, ADD )</seq>
      <seq>((((((( {rabbit})))) WITHIN seca)))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'seca:(dog rabbit)'
  3  ),1) > 0 order by score desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 81.723 cat <seca>rabbit</seca><secb>fox sheep cow</secb>
 81.723 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.723 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.723 dog <seca>rabbit</seca><secb>fox sheep cow</secb>
 81.723 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.723 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.723 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>
 81.723 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 81.723 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.723 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 81.723 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>

11 rows selected.

SQL> select parser.progrelax('catt*') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'catt*'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 31


SQL> select parser.progrelax('cat-dog') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat-dog'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 1


SQL> select parser.progrelax('cat*dog') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat*dog'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 1


SQL> select parser.progrelax('cat*dog*') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat*dog*'
  3  ),1) > 0 order by score desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 1


SQL> select parser.progrelax('cat +seca:(rabbit +dog) -mouse -horse') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (( -{mouse}  -{horse})&((( +{dog})) WITHIN seca)),((((( +{dog})) WITHIN seca)) & ((((
 +{dog})) WITHIN seca), -{mouse}, -{horse})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (NEAR(( -{mouse}, -{horse}))&((NEAR(( +{dog}))) WITHIN seca)),((((( +{dog})) WITHIN s
eca)) & (((( +{dog})) WITHIN seca), -{mouse}, -{horse})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (( -{mouse}& -{horse})&((( +{dog})) WITHIN seca)),((((( +{dog})) WITHIN seca)) & ((((
 +{dog})) WITHIN seca), -{mouse}, -{horse})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((NEAR(( -{mouse}, -{horse})))&(( +{dog}) WITHIN seca)&((( +{dog})) WITHIN seca)),(((
(( +{dog})) WITHIN seca)) & (((( +{dog})) WITHIN seca), -{mouse}, -{horse})) ), AND, ADD )</seq>
      <seq>((( -{mouse}, -{horse}),((((( +{dog})))) WITHIN seca))&((( +{dog})) WITHIN seca))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'cat +seca:(rabbit +dog) -mouse -horse'
  3  ),1) > 0 order by score(1) desc;
select score(1) score, text from avtest where contains (text, parser.progrelax(
*
ERROR at line 1:
ORA-29902: error in executing ODCIIndexStart() routine
ORA-20000: Oracle Text error:
DRG-50901: text query parser syntax error on line 1, column 19


SQL> select parser.progrelax('the angry cat attacked the ugly horse. They then both attacked the dog who was scared of the mouse. Afterwards, the went for a cup of tea with the rabbit') "Query Text" from dual;

Query Text
---------------------------------------------------------------------------------------------------------------

<query>
  <textquery>
    <progression>
      <seq>DEFINEMERGE( ( (( {angry}  {cat}  {attacked}  {the}  {ugly}  {horse}  {They}  {then}  {both}  {attac
ked}  {the}  {dog}  {who}  {was}  {scared}  {of}  {the}  {mouse}  {Afterwards}  {the}  {went}  {for}  {a}  {cup
}  {of}  {tea}  {with}  {the}  {rabbit})),(( {angry}, {cat}, {attacked}, {the}, {ugly}, {horse}, {They}, {then}
, {both}, {attacked}, {the}, {dog}, {who}, {was}, {scared}, {of}, {the}, {mouse}, {Afterwards}, {the}, {went},
{for}, {a}, {cup}, {of}, {tea}, {with}, {the}, {rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (NEAR(( {angry}, {cat}, {attacked}, {the}, {ugly}, {horse}, {They}, {then}, {both}, {
attacked}, {the}, {dog}, {who}, {was}, {scared}, {of}, {the}, {mouse}, {Afterwards}, {the}, {went}, {for}, {a},
 {cup}, {of}, {tea}, {with}, {the}, {rabbit}))),(( {angry}, {cat}, {attacked}, {the}, {ugly}, {horse}, {They},
{then}, {both}, {attacked}, {the}, {dog}, {who}, {was}, {scared}, {of}, {the}, {mouse}, {Afterwards}, {the}, {w
ent}, {for}, {a}, {cup}, {of}, {tea}, {with}, {the}, {rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( (( {angry}& {cat}& {attacked}& {the}& {ugly}& {horse}& {They}& {then}& {both}& {attac
ked}& {the}& {dog}& {who}& {was}& {scared}& {of}& {the}& {mouse}& {Afterwards}& {the}& {went}& {for}& {a}& {cup
}& {of}& {tea}& {with}& {the}& {rabbit})),(( {angry}, {cat}, {attacked}, {the}, {ugly}, {horse}, {They}, {then}
, {both}, {attacked}, {the}, {dog}, {who}, {was}, {scared}, {of}, {the}, {mouse}, {Afterwards}, {the}, {went},
{for}, {a}, {cup}, {of}, {tea}, {with}, {the}, {rabbit})) ), AND, ADD )</seq>
      <seq>DEFINEMERGE( ( ((NEAR(( {angry}, {cat})),NEAR(( {angry}, {attacked})),NEAR(( {angry}, {the})),NEAR((
 {angry}, {ugly})),NEAR(( {angry}, {horse})),NEAR(( {angry}, {They})),NEAR(( {angry}, {then})),NEAR(( {angry},
{both})),NEAR(( {angry}, {attacked})),NEAR(( {angry}, {the})),NEAR(( {angry}, {dog})),NEAR(( {angry}, {who})),N
EAR(( {angry}, {was})),NEAR(( {angry}, {scared})),NEAR(( {angry}, {of})),NEAR(( {angry}, {the})),NEAR(( {angry}
, {mouse})),NEAR(( {angry}, {Afterwards})),NEAR(( {angry}, {the})),NEAR(( {angry}, {went})),NEAR(( {angry}, {fo
r})),NEAR(( {angry}, {a})),NEAR(( {angry}, {cup})),NEAR(( {angry}, {of})),NEAR(( {angry}, {tea})),NEAR(( {angry
}, {with})),NEAR(( {angry}, {the})),NEAR(( {angry}, {rabbit})),NEAR(( {cat}, {attacked})),NEAR(( {cat}, {the}))
,NEAR(( {cat}, {ugly})),NEAR(( {cat}, {horse})),NEAR(( {cat}, {They})),NEAR(( {cat}, {then})),NEAR(( {cat}, {bo
th})),NEAR(( {cat}, {attacked})),NEAR(( {cat}, {the})),NEAR(( {cat}, {dog})),NEAR(( {cat}, {who})),NEAR(( {cat}
, {was})),NEAR(( {cat}, {scared})),NEAR(( {cat}, {of})),NEAR(( {cat}, {the})),NEAR(( {cat}, {mouse})),NEAR(( {c
at}, {Afterwards})),NEAR(( {cat}, {the})),NEAR(( {cat}, {went})),NEAR(( {cat}, {for})),NEAR(( {cat}, {a})),NEAR
(( {cat}, {cup})),NEAR(( {cat}, {of})),NEAR(( {cat}, {tea})),NEAR(( {cat}, {with})),NEAR(( {cat}, {the})),NEAR(
( {cat}, {rabbit})),NEAR(( {attacked}, {the})),NEAR(( {attacked}, {ugly})),NEAR(( {attacked}, {horse})),NEAR((
{attacked}, {They})),NEAR(( {attacked}, {then})),NEAR(( {attacked}, {both})),NEAR(( {attacked}, {attacked})),NE
AR(( {attacked}, {the})),NEAR(( {attacked}, {dog})),NEAR(( {attacked}, {who})),NEAR(( {attacked}, {was})),NEAR(
( {attacked}, {scared})),NEAR(( {attacked}, {of})),NEAR(( {attacked}, {the})),NEAR(( {attacked}, {mouse})),NEAR
(( {attacked}, {Afterwards})),NEAR(( {attacked}, {the})),NEAR(( {attacked}, {went})),NEAR(( {attacked}, {for}))
,NEAR(( {attacked}, {a})),NEAR(( {attacked}, {cup})),NEAR(( {attacked}, {of})),NEAR(( {attacked}, {tea})),NEAR(
( {attacked}, {with})),NEAR(( {attacked}, {the})),NEAR(( {attacked}, {rabbit})),NEAR(( {the}, {ugly})),NEAR(( {
the}, {horse})),NEAR(( {the}, {They})),NEAR(( {the}, {then})),NEAR(( {the}, {both})),NEAR(( {the}, {attacked}))
,NEAR(( {the}, {the})),NEAR(( {the}, {dog})),NEAR(( {the}, {who})),NEAR(( {the}, {was})),NEAR(( {the}, {scared}
)),NEAR(( {the}, {of})),NEAR(( {the}, {the})),NEAR(( {the}, {mouse})),NEAR(( {the}, {Afterwards})),NEAR(( {the}
, {the})),NEAR(( {the}, {went})),NEAR(( {the}, {for})),NEAR(( {the}, {a})),NEAR(( {the}, {cup})),NEAR(( {the},
{of})),NEAR(( {the}, {tea})),NEAR(( {the}, {with})),NEAR(( {the}, {the})),NEAR(( {the}, {rabbit})),NEAR(( {ugly
}, {horse})),NEAR(( {ugly}, {They})),NEAR(( {ugly}, {then})),NEAR(( {ugly}, {both})),NEAR(( {ugly}, {attacked})
),NEAR(( {ugly}, {the})),NEAR(( {ugly}, {dog})),NEAR(( {ugly}, {who})),NEAR(( {ugly}, {was})),NEAR(( {ugly}, {s
cared})),NEAR(( {ugly}, {of})),NEAR(( {ugly}, {the})),NEAR(( {ugly}, {mouse})),NEAR(( {ugly}, {Afterwards})),NE
AR(( {ugly}, {the})),NEAR(( {ugly}, {went})),NEAR(( {ugly}, {for})),NEAR(( {ugly}, {a})),NEAR(( {ugly}, {cup}))

Query Text
---------------------------------------------------------------------------------------------------------------
,NEAR(( {ugly}, {of})),NEAR(( {ugly}, {tea})),NEAR(( {ugly}, {with})),NEAR(( {ugly}, {the})),NEAR(( {ugly}, {ra
bbit})),NEAR(( {horse}, {They})),NEAR(( {horse}, {then})),NEAR(( {horse}, {both})),NEAR(( {horse}, {attacked}))
,NEAR(( {horse}, {the})),NEAR(( {horse}, {dog})),NEAR(( {horse}, {who})),NEAR(( {horse}, {was})),NEAR(( {horse}
, {scared})),NEAR(( {horse}, {of})),NEAR(( {horse}, {the})),NEAR(( {horse}, {mouse})),NEAR(( {horse}, {Afterwar
ds})),NEAR(( {horse}, {the})),NEAR(( {horse}, {went})),NEAR(( {horse}, {for})),NEAR(( {horse}, {a})),NEAR(( {ho
rse}, {cup})),NEAR(( {horse}, {of})),NEAR(( {horse}, {tea})),NEAR(( {horse}, {with})),NEAR(( {horse}, {the})),N
EAR(( {horse}, {rabbit})),NEAR(( {They}, {then})),NEAR(( {They}, {both})),NEAR(( {They}, {attacked})),NEAR(( {T
hey}, {the})),NEAR(( {They}, {dog})),NEAR(( {They}, {who})),NEAR(( {They}, {was})),NEAR(( {They}, {scared})),NE
AR(( {They}, {of})),NEAR(( {They}, {the})),NEAR(( {They}, {mouse})),NEAR(( {They}, {Afterwards})),NEAR(( {They}
, {the})),NEAR(( {They}, {went})),NEAR(( {They}, {for})),NEAR(( {They}, {a})),NEAR(( {They}, {cup})),NEAR(( {Th
ey}, {of})),NEAR(( {They}, {tea})),NEAR(( {They}, {with})),NEAR(( {They}, {the})),NEAR(( {They}, {rabbit})),NEA
R(( {then}, {both})),NEAR(( {then}, {attacked})),NEAR(( {then}, {the})),NEAR(( {then}, {dog})),NEAR(( {then}, {
who})),NEAR(( {then}, {was})),NEAR(( {then}, {scared})),NEAR(( {then}, {of})),NEAR(( {then}, {the})),NEAR(( {th
en}, {mouse})),NEAR(( {then}, {Afterwards})),NEAR(( {then}, {the})),NEAR(( {then}, {went})),NEAR(( {then}, {for
})),NEAR(( {then}, {a})),NEAR(( {then}, {cup})),NEAR(( {then}, {of})),NEAR(( {then}, {tea})),NEAR(( {then}, {wi
th})),NEAR(( {then}, {the})),NEAR(( {then}, {rabbit})),NEAR(( {both}, {attacked})),NEAR(( {both}, {the})),NEAR(
( {both}, {dog})),NEAR(( {both}, {who})),NEAR(( {both}, {was})),NEAR(( {both}, {scared})),NEAR(( {both}, {of}))
,NEAR(( {both}, {the})),NEAR(( {both}, {mouse})),NEAR(( {both}, {Afterwards})),NEAR(( {both}, {the})),NEAR(( {b
oth}, {went})),NEAR(( {both}, {for})),NEAR(( {both}, {a})),NEAR(( {both}, {cup})),NEAR(( {both}, {of})),NEAR((
{both}, {tea})),NEAR(( {both}, {with})),NEAR(( {both}, {the})),NEAR(( {both}, {rabbit})),NEAR(( {attacked}, {th
e})),NEAR(( {attacked}, {dog})),NEAR(( {attacked}, {who})),NEAR(( {attacked}, {was})),NEAR(( {attacked}, {scare
d})),NEAR(( {attacked}, {of})),NEAR(( {attacked}, {the})),NEAR(( {attacked}, {mouse})),NEAR(( {attacked}, {Afte
rwards})),NEAR(( {attacked}, {the})),NEAR(( {attacked}, {went})),NEAR(( {attacked}, {for})),NEAR(( {attacked},
{a})),NEAR(( {attacked}, {cup})),NEAR(( {attacked}, {of})),NEAR(( {attacked}, {tea})),NEAR(( {attacked}, {with}
)),NEAR(( {attacked}, {the})),NEAR(( {attacked}, {rabbit})),NEAR(( {the}, {dog})),NEAR(( {the}, {who})),NEAR((
{the}, {was})),NEAR(( {the}, {scared})),NEAR(( {the}, {of})),NEAR(( {the}, {the})),NEAR(( {the}, {mouse})),NEAR
(( {the}, {Afterwards})),NEAR(( {the}, {the})),NEAR(( {the}, {went})),NEAR(( {the}, {for})),NEAR(( {the}, {a}))
,NEAR(( {the}, {cup})),NEAR(( {the}, {of})),NEAR(( {the}, {tea})),NEAR(( {the}, {with})),NEAR(( {the}, {the})),
NEAR(( {the}, {rabbit})),NEAR(( {dog}, {who})),NEAR(( {dog}, {was})),NEAR(( {dog}, {scared})),NEAR(( {dog}, {of
})),NEAR(( {dog}, {the})),NEAR(( {dog}, {mouse})),NEAR(( {dog}, {Afterwards})),NEAR(( {dog}, {the})),NEAR(( {do
g}, {went})),NEAR(( {dog}, {for})),NEAR(( {dog}, {a})),NEAR(( {dog}, {cup})),NEAR(( {dog}, {of})),NEAR(( {dog},
 {tea})),NEAR(( {dog}, {with})),NEAR(( {dog}, {the})),NEAR(( {dog}, {rabbit})),NEAR(( {who}, {was})),NEAR(( {wh
o}, {scared})),NEAR(( {who}, {of})),NEAR(( {who}, {the})),NEAR(( {who}, {mouse})),NEAR(( {who}, {Afterwards})),
NEAR(( {who}, {the})),NEAR(( {who}, {went})),NEAR(( {who}, {for})),NEAR(( {who}, {a})),NEAR(( {who}, {cup})),NE
AR(( {who}, {of})),NEAR(( {who}, {tea})),NEAR(( {who}, {with})),NEAR(( {who}, {the})),NEAR(( {who}, {rabbit})),
NEAR(( {was}, {scared})),NEAR(( {was}, {of})),NEAR(( {was}, {the})),NEAR(( {was}, {mouse})),NEAR(( {was}, {Afte
rwards})),NEAR(( {was}, {the})),NEAR(( {was}, {went})),NEAR(( {was}, {for})),NEAR(( {was}, {a})),NEAR(( {was},
{cup})),NEAR(( {was}, {of})),NEAR(( {was}, {tea})),NEAR(( {was}, {with})),NEAR(( {was}, {the})),NEAR(( {was}, {
rabbit})),NEAR(( {scared}, {of})),NEAR(( {scared}, {the})),NEAR(( {scared}, {mouse})),NEAR(( {scared}, {Afterwa
rds})),NEAR(( {scared}, {the})),NEAR(( {scared}, {went})),NEAR(( {scared}, {for})),NEAR(( {scared}, {a})),NEAR(
( {scared}, {cup})),NEAR(( {scared}, {of})),NEAR(( {scared}, {tea})),NEAR(( {scared}, {with})),NEAR(( {scared},
 {the})),NEAR(( {scared}, {rabbit})),NEAR(( {of}, {the})),NEAR(( {of}, {mouse})),NEAR(( {of}, {Afterwards})),NE
AR(( {of}, {the})),NEAR(( {of}, {went})),NEAR(( {of}, {for})),NEAR(( {of}, {a})),NEAR(( {of}, {cup})),NEAR(( {o
f}, {of})),NEAR(( {of}, {tea})),NEAR(( {of}, {with})),NEAR(( {of}, {the})),NEAR(( {of}, {rabbit})),NEAR(( {the}
, {mouse})),NEAR(( {the}, {Afterwards})),NEAR(( {the}, {the})),NEAR(( {the}, {went})),NEAR(( {the}, {for})),NEA
R(( {the}, {a})),NEAR(( {the}, {cup})),NEAR(( {the}, {of})),NEAR(( {the}, {tea})),NEAR(( {the}, {with})),NEAR((
 {the}, {the})),NEAR(( {the}, {rabbit})),NEAR(( {mouse}, {Afterwards})),NEAR(( {mouse}, {the})),NEAR(( {mouse},

Query Text
---------------------------------------------------------------------------------------------------------------
 {went})),NEAR(( {mouse}, {for})),NEAR(( {mouse}, {a})),NEAR(( {mouse}, {cup})),NEAR(( {mouse}, {of})),NEAR(( {
mouse}, {tea})),NEAR(( {mouse}, {with})),NEAR(( {mouse}, {the})),NEAR(( {mouse}, {rabbit})),NEAR(( {Afterwards}
, {the})),NEAR(( {Afterwards}, {went})),NEAR(( {Afterwards}, {for})),NEAR(( {Afterwards}, {a})),NEAR(( {Afterwa
rds}, {cup})),NEAR(( {Afterwards}, {of})),NEAR(( {Afterwards}, {tea})),NEAR(( {Afterwards}, {with})),NEAR(( {Af
terwards}, {the})),NEAR(( {Afterwards}, {rabbit})),NEAR(( {the}, {went})),NEAR(( {the}, {for})),NEAR(( {the}, {
a})),NEAR(( {the}, {cup})),NEAR(( {the}, {of})),NEAR(( {the}, {tea})),NEAR(( {the}, {with})),NEAR(( {the}, {the
})),NEAR(( {the}, {rabbit})),NEAR(( {went}, {for})),NEAR(( {went}, {a})),NEAR(( {went}, {cup})),NEAR(( {went},
{of})),NEAR(( {went}, {tea})),NEAR(( {went}, {with})),NEAR(( {went}, {the})),NEAR(( {went}, {rabbit})),NEAR(( {
for}, {a})),NEAR(( {for}, {cup})),NEAR(( {for}, {of})),NEAR(( {for}, {tea})),NEAR(( {for}, {with})),NEAR(( {for
}, {the})),NEAR(( {for}, {rabbit})),NEAR(( {a}, {cup})),NEAR(( {a}, {of})),NEAR(( {a}, {tea})),NEAR(( {a}, {wit
h})),NEAR(( {a}, {the})),NEAR(( {a}, {rabbit})),NEAR(( {cup}, {of})),NEAR(( {cup}, {tea})),NEAR(( {cup}, {with}
)),NEAR(( {cup}, {the})),NEAR(( {cup}, {rabbit})),NEAR(( {of}, {tea})),NEAR(( {of}, {with})),NEAR(( {of}, {the}
)),NEAR(( {of}, {rabbit})),NEAR(( {tea}, {with})),NEAR(( {tea}, {the})),NEAR(( {tea}, {rabbit})),NEAR(( {with},
 {the})),NEAR(( {with}, {rabbit})),NEAR(( {the}, {rabbit})))),(( {angry}, {cat}, {attacked}, {the}, {ugly}, {ho
rse}, {They}, {then}, {both}, {attacked}, {the}, {dog}, {who}, {was}, {scared}, {of}, {the}, {mouse}, {Afterwar
ds}, {the}, {went}, {for}, {a}, {cup}, {of}, {tea}, {with}, {the}, {rabbit})) ), AND, ADD )</seq>
      <seq>((( {angry}, {cat}, {attacked}, {the}, {ugly}, {horse}, {They}, {then}, {both}, {attacked}, {the}, {
dog}, {who}, {was}, {scared}, {of}, {the}, {mouse}, {Afterwards}, {the}, {went}, {for}, {a}, {cup}, {of}, {tea}
, {with}, {the}, {rabbit})))</seq>
    </progression>
  </textquery>
  <score datatype="FLOAT"/>
</query>


1 row selected.

SQL> select score(1) score, text from avtest where contains (text, parser.progrelax(
  2  'the angry cat attacked the ugly horse. They then both attacked the dog who was scared of the mouse. Afterwards, the went for a cup of tea with the rabbit'
  3  ),1) > 0 order by score(1) desc;

  SCORE TEXT
------- -----------------------------------------------------------------
 26.064 cat dog dog rabbit
 26.044 cat dog rabbit fox
 23.647 cat cat cat cat cat cat cat xx dog
 23.627 cat cat xx dog dog dog dog dog
 23.597 cat dog xx cat dog xx cat dog
 23.592 cat cat cat cat cat xx dog
 23.508 cat cat dog
 23.506 cat mouse <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 23.506 cat horse <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 23.490 dog rabbit fox
 23.480 cat dog
 21.439 cat cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 21.006 rabbit fox
 21.006 catty doggy sheepy rabbit<secb>cow</secb>
 21.006 cat-dog rabbit fox
 20.990 dog <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 20.990 dog <seca>dog dog rabbit</seca><secb>fox sheep cow</secb>
 20.990 dog <seca>dog cat rabbit</seca><secb>fox sheep cow</secb>
 20.990 dog <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 20.990 dog <seca>rabbit</seca><secb>fox sheep cow</secb>
 20.986 cat <seca>dog rabbit cow</seca><secb>fox sheep cow</secb>
 20.986 cat sheep cow <secb>sheep cow<secb>
 20.986 cat
 20.986 cat <seca>dog</seca><secb>fox sheep cow</secb>
 20.986 cat <seca>dog rabbit</seca><secb>fox sheep cow</secb>
 20.986 cat <seca>rabbit</seca><secb>fox sheep cow</secb>

26 rows selected.

SQL> 
SQL> set echo off
SQL> spool off
