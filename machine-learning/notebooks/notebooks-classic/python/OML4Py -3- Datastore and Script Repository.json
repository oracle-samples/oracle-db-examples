{
  "paragraphs": [
    {
      "text": "%md\n\n# Oracle Machine Learning for Python - Datastore and Script Repository\n\n***Oracle Machine Learning for Python*** (OML4Py) makes the open source Python scripting language and environment ready for the enterprise and big data. Designed for problems involving both large and small data volumes, OML4Py integrates Python with Oracle Autonomous Database, allowing users to run Python commands and scripts for statistical, machine learning, and visualization analyses on database tables and views using Python syntax. Many familiar Python functions are overloaded that translate Python behavior into SQL for running in-database, as well as new automatic machine learning capabilities.\n\nIn this notebook, we highlight the datastore and script repository features of OML4Py.\n\nWith a datastore, you can store Python objects in a named datastore entry. This named datastore can then use in subsequent Python sessions and even be made available to other users or programs by granting/revoking read permissions.\n\nPython objects, including OML4Py proxy objects, exist for the duration of the current Python session unless you explicitly save them. You can save one or more Python objects, including OML proxy objects, to a named datastore and then load those objects in a later Python session. This is also useful when using embedded Python execution. Datastores exist in the user’s Oracle Database schema. A datastore, and the objects it contains, persist in the database until explicitly deleted.\n\nUsing a datastore, you can:\n\n* Save OML4Py and other Python objects in one Python session and load them in another Python session\n* Pass non-scalar arguments to Python functions for use in embedded Python execution from both the Python, and more importantly, the SQL API where only scalar values can be passed to functions\n* List available datastores and explore the contents of a datastore\n\nWith the script repository, users can:\n\n* Create and store user-defined Python functions as scripts in Oracle Database\n* Grant or revoke the read/eecute privilege to a script\n* List available scripts\n* Load a script function into the Python environment\n* Drop a script from the script repository\n\nYou can make scripts either private or global. A private script is available only to the owner. A global script is available to any user. For private scripts, the owner of the script may grant the read privilege to other users or revoke that privilege.\n\nCopyright (c) 2022 Oracle Corporation \n###### \u003ca href\u003d\"https://oss.oracle.com/licenses/upl/\" onclick\u003d\"return ! window.open(\u0027https://oss.oracle.com/licenses/upl/\u0027);\"\u003eThe Universal Permissive License (UPL), Version 1.0\u003c/a\u003e\n---",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:48:57+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch1\u003eOracle Machine Learning for Python - Datastore and Script Repository\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eOracle Machine Learning for Python\u003c/em\u003e\u003c/strong\u003e (OML4Py) makes the open source Python scripting language and environment ready for the enterprise and big data. Designed for problems involving both large and small data volumes, OML4Py integrates Python with Oracle Autonomous Database, allowing users to run Python commands and scripts for statistical, machine learning, and visualization analyses on database tables and views using Python syntax. Many familiar Python functions are overloaded that translate Python behavior into SQL for running in-database, as well as new automatic machine learning capabilities.\u003c/p\u003e\n\u003cp\u003eIn this notebook, we highlight the datastore and script repository features of OML4Py.\u003c/p\u003e\n\u003cp\u003eWith a datastore, you can store Python objects in a named datastore entry. This named datastore can then use in subsequent Python sessions and even be made available to other users or programs by granting/revoking read permissions.\u003c/p\u003e\n\u003cp\u003ePython objects, including OML4Py proxy objects, exist for the duration of the current Python session unless you explicitly save them. You can save one or more Python objects, including OML proxy objects, to a named datastore and then load those objects in a later Python session. This is also useful when using embedded Python execution. Datastores exist in the user’s Oracle Database schema. A datastore, and the objects it contains, persist in the database until explicitly deleted.\u003c/p\u003e\n\u003cp\u003eUsing a datastore, you can:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSave OML4Py and other Python objects in one Python session and load them in another Python session\u003c/li\u003e\n\u003cli\u003ePass non-scalar arguments to Python functions for use in embedded Python execution from both the Python, and more importantly, the SQL API where only scalar values can be passed to functions\u003c/li\u003e\n\u003cli\u003eList available datastores and explore the contents of a datastore\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWith the script repository, users can:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate and store user-defined Python functions as scripts in Oracle Database\u003c/li\u003e\n\u003cli\u003eGrant or revoke the read/eecute privilege to a script\u003c/li\u003e\n\u003cli\u003eList available scripts\u003c/li\u003e\n\u003cli\u003eLoad a script function into the Python environment\u003c/li\u003e\n\u003cli\u003eDrop a script from the script repository\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eYou can make scripts either private or global. A private script is available only to the owner. A global script is available to any user. For private scripts, the owner of the script may grant the read privilege to other users or revoke that privilege.\u003c/p\u003e\n\u003cp\u003eCopyright (c) 2022 Oracle Corporation\u003c/p\u003e\n\u003ch6\u003e\u003ca href\u003d\"https: //oss.oracle.com/licenses/upl/\" onclick\u003d\"return ! window.open(\u0027https://oss.oracle.com/licenses/upl/\u0027);\"\u003eThe Universal Permissive License (UPL), Version 1.0\u003c/a\u003e\u003c/h6\u003e\n\u003chr /\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-1917370032",
      "id": "20220124-201436_1644840197",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:48:57+0000",
      "dateFinished": "2022-03-10T15:48:59+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n## Import libraries supporting OML4Py and create data table\n\nTo use OML4Py, first import the package ***oml***. Check for the PYQADMIN role, which is required to use certain functionalities here and later for embedded Python execution. \n\nUsers can get online help using Python\u0027s help function and specifying the function of interest.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:48:59+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eImport libraries supporting OML4Py and create data table\u003c/h2\u003e\n\u003cp\u003eTo use OML4Py, first import the package \u003cstrong\u003e\u003cem\u003eoml\u003c/em\u003e\u003c/strong\u003e. Check for the PYQADMIN role, which is required to use certain functionalities here and later for embedded Python execution.\u003c/p\u003e\n\u003cp\u003eUsers can get online help using Python\u0027s help function and specifying the function of interest.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-1288394058",
      "id": "20220124-201436_2098638094",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:48:59+0000",
      "dateFinished": "2022-03-10T15:48:59+0000",
      "status": "FINISHED"
    },
    {
      "title": "Import libraries and set display options and check PYQADMIN role",
      "text": "%python\n\nimport pandas as pd\nimport oml\n\npd.set_option(\u0027display.max_rows\u0027, 500)\npd.set_option(\u0027display.max_columns\u0027, 500)\npd.set_option(\u0027display.width\u0027, 1000)\n\noml.core.methods.__checkRole(\"PYQADMIN\")",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:48:59+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_1094649548",
      "id": "20220124-201436_777914198",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:00+0000",
      "dateFinished": "2022-03-10T15:49:10+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n## Create Pandas DataFrames and load them into Autonomous Database\n\nWe load three data sets, combining target and predictors into a single DataFrame, before invoking create and displaying the columns for each. These will be used in exploring *datastore* functionality.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:10+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eCreate Pandas DataFrames and load them into Autonomous Database\u003c/h2\u003e\n\u003cp\u003eWe load three data sets, combining target and predictors into a single DataFrame, before invoking create and displaying the columns for each. These will be used in exploring \u003cem\u003edatastore\u003c/em\u003e functionality.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_15683401",
      "id": "20220124-201436_75340466",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:10+0000",
      "dateFinished": "2022-03-10T15:49:10+0000",
      "status": "FINISHED"
    },
    {
      "title": "Create IRIS data table",
      "text": "%python\nfrom sklearn import datasets\nfrom sklearn import linear_model\nimport pandas as pd\n\niris \u003d datasets.load_iris()\nx \u003d pd.DataFrame(iris.data, columns \u003d [\u0027SEPAL_LENGTH\u0027,\u0027SEPAL_WIDTH\u0027,\n                                       \u0027PETAL_LENGTH\u0027,\u0027PETAL_WIDTH\u0027])\ny \u003d pd.DataFrame(list(map(lambda x: {0: \u0027setosa\u0027, 1: \u0027versicolor\u0027,\n                 2:\u0027virginica\u0027}[x], iris.target)), columns \u003d [\u0027SPECIES\u0027])\ntry:\n    oml.drop(table\u003d\u0027IRIS\u0027)\nexcept:\n    pass\nIRIS \u003d oml.create(pd.concat([x, y], axis\u003d1), table \u003d \u0027IRIS\u0027)\niris \u003d pd.concat([x, y], axis\u003d1)\nprint(IRIS.columns)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:10+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 4.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[\u0027SEPAL_LENGTH\u0027, \u0027SEPAL_WIDTH\u0027, \u0027PETAL_LENGTH\u0027, \u0027PETAL_WIDTH\u0027, \u0027SPECIES\u0027]\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-1344309680",
      "id": "20220124-201436_879744341",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:11+0000",
      "dateFinished": "2022-03-10T15:49:11+0000",
      "status": "FINISHED"
    },
    {
      "title": "Create DIABETES temporary data table",
      "text": "%python\n\ndiabetes \u003d datasets.load_diabetes()\nx \u003d pd.DataFrame(diabetes.data, columns\u003ddiabetes.feature_names)\ny \u003d pd.DataFrame(diabetes.target, columns\u003d[\u0027disease_progression\u0027])\n\nDIABETES_TMP \u003d oml.push(pd.concat([x, y], axis\u003d1))\nprint(DIABETES_TMP.columns)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:11+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 4.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[\u0027age\u0027, \u0027sex\u0027, \u0027bmi\u0027, \u0027bp\u0027, \u0027s1\u0027, \u0027s2\u0027, \u0027s3\u0027, \u0027s4\u0027, \u0027s5\u0027, \u0027s6\u0027, \u0027disease_progression\u0027]\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-602405844",
      "id": "20220124-201436_2086236171",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:12+0000",
      "dateFinished": "2022-03-10T15:49:12+0000",
      "status": "FINISHED"
    },
    {
      "title": "Create BOSTON temporary data table",
      "text": "%python\n\nboston \u003d datasets.load_boston()\nx \u003d pd.DataFrame(boston.data, columns \u003d boston.feature_names.tolist())\ny \u003d pd.DataFrame(boston.target, columns \u003d [\u0027Value\u0027])\n\nBOSTON_TMP \u003d oml.push(pd.concat([x, y], axis\u003d1))\nprint(BOSTON_TMP.columns)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:12+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 4.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[\u0027CRIM\u0027, \u0027ZN\u0027, \u0027INDUS\u0027, \u0027CHAS\u0027, \u0027NOX\u0027, \u0027RM\u0027, \u0027AGE\u0027, \u0027DIS\u0027, \u0027RAD\u0027, \u0027TAX\u0027, \u0027PTRATIO\u0027, \u0027B\u0027, \u0027LSTAT\u0027, \u0027Value\u0027]\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-1135811410",
      "id": "20220124-201436_585346145",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:13+0000",
      "dateFinished": "2022-03-10T15:49:13+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Save Python objects to datastore\n\nSave the actual *iris* data set and the temporary BOSTON proxy object to a datastore named \"ds_pydata\", overwriting if the named datastore already exists. Note that you can store actual data objects in a datastore, but large data objects should remain as database tables for performance and scalability.\n\nBy storing the BOSTON_TMP object, the temporary table will not be deleted when the session terminates.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:13+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eSave Python objects to datastore\u003c/h2\u003e\n\u003cp\u003eSave the actual \u003cem\u003eiris\u003c/em\u003e data set and the temporary BOSTON proxy object to a datastore named \u0026ldquo;ds_pydata\u0026rdquo;, overwriting if the named datastore already exists. Note that you can store actual data objects in a datastore, but large data objects should remain as database tables for performance and scalability.\u003c/p\u003e\n\u003cp\u003eBy storing the BOSTON_TMP object, the temporary table will not be deleted when the session terminates.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_1843883332",
      "id": "20220124-201436_1252203141",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:14+0000",
      "dateFinished": "2022-03-10T15:49:14+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.ds.save(objs\u003d{\u0027iris\u0027:iris, \u0027oml_boston\u0027:BOSTON_TMP},\n            name\u003d\"ds_pydata\", description \u003d \"python datasets\", overwrite\u003dTrue)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:14+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-716737886",
      "id": "20220124-201436_2927609",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:14+0000",
      "dateFinished": "2022-03-10T15:49:20+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nAdd a third object, the temporary DIABETES proxy object, to that same datastore.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:20+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eAdd a third object, the temporary DIABETES proxy object, to that same datastore.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-1327965925",
      "id": "20220124-201436_927095519",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:21+0000",
      "dateFinished": "2022-03-10T15:49:21+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.ds.save(objs\u003d{\u0027oml_diabetes\u0027:DIABETES_TMP}, name\u003d\"ds_pydata\", append\u003dTrue)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:21+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-267594147",
      "id": "20220124-201436_142436594",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:21+0000",
      "dateFinished": "2022-03-10T15:49:23+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nSave the *iris* DataFrame to a new datastore, and then list the datastores. Notice we see the datastore name, the number of objects in the datastore, the size in bytes consumed, when the datastore was create/updated, and any description provided by the user. Our two datastores ***ds_iris_data*** and ***ds_pydata*** are present, with the latter containing three objects.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:23+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eSave the \u003cem\u003eiris\u003c/em\u003e DataFrame to a new datastore, and then list the datastores. Notice we see the datastore name, the number of objects in the datastore, the size in bytes consumed, when the datastore was create/updated, and any description provided by the user. Our two datastores \u003cstrong\u003e\u003cem\u003eds_iris_data\u003c/em\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003cem\u003eds_pydata\u003c/em\u003e\u003c/strong\u003e are present, with the latter containing three objects.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_383281592",
      "id": "20220124-201436_1515727946",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:24+0000",
      "dateFinished": "2022-03-10T15:49:24+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.ds.save(objs\u003d{\u0027iris\u0027:iris},\n            name\u003d\"ds_iris_data\", description \u003d \"iris dataset\", overwrite\u003dTrue)\n\noml.ds.dir()",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:24+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "   datastore_name  object_count    size                date                                       description\n0  auc_result_ftr             1      21 2021-07-02 19:10:24                                              None\n1            ds-1             3    1449 2022-03-09 23:09:36                                              None\n2    ds_iris_data             1    5971 2022-03-10 15:49:26                                      iris dataset\n3       ds_pydata             3    7901 2022-03-10 15:49:15                                   python datasets\n4   ds_rf_species             1  164925 2021-06-28 22:39:44  Random Forest model predicting Species from IRIS\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_273182376",
      "id": "20220124-201436_1062090651",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:24+0000",
      "dateFinished": "2022-03-10T15:49:27+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Store model objects in a datastore\n\nTo illustrate storing other types of objects in datastores, we\u0027ll create regression models using sklearn and OML4Py.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:27+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eStore model objects in a datastore\u003c/h2\u003e\n\u003cp\u003eTo illustrate storing other types of objects in datastores, we\u0027ll create regression models using sklearn and OML4Py.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-1020929027",
      "id": "20220124-201436_444532239",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:27+0000",
      "dateFinished": "2022-03-10T15:49:27+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\nregr1 \u003d linear_model.LinearRegression()\nregr1.fit(boston.data, boston.target)\n\nregr2 \u003d oml.glm(\"regression\")\nX \u003d BOSTON_TMP.drop(\u0027Value\u0027)\ny \u003d BOSTON_TMP[\u0027Value\u0027]\nregr2 \u003d regr2.fit(X, y)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:27+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_1939563842",
      "id": "20220124-201436_2040977226",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:28+0000",
      "dateFinished": "2022-03-10T15:49:30+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nSave objects to a datastore and allow the read privilege to be granted to them. Then grant the read privilege to all users by specifying ***user\u003dNone***. Finally list the datastores to which the read privilege has been granted.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:30+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eSave objects to a datastore and allow the read privilege to be granted to them. Then grant the read privilege to all users by specifying \u003cstrong\u003e\u003cem\u003euser\u003dNone\u003c/em\u003e\u003c/strong\u003e. Finally list the datastores to which the read privilege has been granted.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_2075789017",
      "id": "20220124-201436_1644666440",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:31+0000",
      "dateFinished": "2022-03-10T15:49:31+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.ds.save(objs\u003d{\u0027regr1\u0027:regr1, \u0027regr2\u0027:regr2},\n            name\u003d\"ds_pymodel\", grantable\u003dTrue, overwrite\u003dTrue)\n\noml.ds.dir()",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:31+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "   datastore_name  object_count    size                date                                       description\n0  auc_result_ftr             1      21 2021-07-02 19:10:24                                              None\n1            ds-1             3    1449 2022-03-09 23:09:36                                              None\n2    ds_iris_data             1    5971 2022-03-10 15:49:26                                      iris dataset\n3       ds_pydata             3    7901 2022-03-10 15:49:15                                   python datasets\n4      ds_pymodel             2    4395 2022-03-10 15:49:32                                              None\n5   ds_rf_species             1  164925 2021-06-28 22:39:44  Random Forest model predicting Species from IRIS\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_298189593",
      "id": "20220124-201436_750493564",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:32+0000",
      "dateFinished": "2022-03-10T15:49:32+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.grant(name\u003d\"ds_pymodel\", typ\u003d\"datastore\", user\u003dNone)\n\noml.ds.dir(dstype\u003d\"grant\")",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:32+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "  datastore_name grantee\n0     ds_pymodel  PUBLIC\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-1561931431",
      "id": "20220124-201436_1318501274",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:33+0000",
      "dateFinished": "2022-03-10T15:49:37+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Load datastore objects into memory\n\nLoad all Python objects from a datastore to the global workspace and sort the result by name. Notice that they have the name specified in the dictionary when saved.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:37+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eLoad datastore objects into memory\u003c/h2\u003e\n\u003cp\u003eLoad all Python objects from a datastore to the global workspace and sort the result by name. Notice that they have the name specified in the dictionary when saved.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-1229950603",
      "id": "20220124-201436_29702533",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:38+0000",
      "dateFinished": "2022-03-10T15:49:38+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\nsorted(oml.ds.load(name\u003d\"ds_pydata\"))",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:38+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[\u0027iris\u0027, \u0027oml_boston\u0027, \u0027oml_diabetes\u0027]\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-273744738",
      "id": "20220124-201436_1609433643",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:38+0000",
      "dateFinished": "2022-03-10T15:49:45+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nLoad the named Python object, ***regr2***, from the datastore to the global workspace.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:45+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eLoad the named Python object, \u003cstrong\u003e\u003cem\u003eregr2\u003c/em\u003e\u003c/strong\u003e, from the datastore to the global workspace.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_261123513",
      "id": "20220124-201436_803092181",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:45+0000",
      "dateFinished": "2022-03-10T15:49:45+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.ds.load(name\u003d\"ds_pymodel\", objs\u003d[\"regr2\"])",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:45+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[\u0027regr2\u0027]\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-339577249",
      "id": "20220124-201436_1424954079",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:46+0000",
      "dateFinished": "2022-03-10T15:49:53+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nLoad the named Python object, ***regr1***, from the datastore to the user\u0027s workspace.\n\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:53+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eLoad the named Python object, \u003cstrong\u003e\u003cem\u003eregr1\u003c/em\u003e\u003c/strong\u003e, from the datastore to the user\u0027s workspace.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_172574358",
      "id": "20220124-201436_2085486806",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:53+0000",
      "dateFinished": "2022-03-10T15:49:53+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.ds.load(name\u003d\"ds_pymodel\", objs\u003d[\"regr1\"], to_globals\u003dFalse)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:54+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "{\u0027regr1\u0027: LinearRegression()}\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_305360242",
      "id": "20220124-201436_1402911278",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:49:54+0000",
      "dateFinished": "2022-03-10T15:49:59+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n## Show datastores and other details",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:49:59+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eShow datastores and other details\u003c/h2\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-633479180",
      "id": "20220124-201436_220747286",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:00+0000",
      "dateFinished": "2022-03-10T15:50:00+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.ds.dir(dstype\u003d\"all\")[[\u0027owner\u0027, \u0027datastore_name\u0027, \u0027object_count\u0027]]",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:00+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "       owner  datastore_name  object_count\n0    OMLUSER  auc_result_ftr             1\n1    OMLUSER            ds-1             3\n2    OMLUSER    ds_iris_data             1\n3    OMLUSER       ds_pydata             3\n4    OMLUSER      ds_pymodel             2\n5    OMLUSER   ds_rf_species             1\n6  OMLUSER02     ds_pymodels             2\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_1919556856",
      "id": "20220124-201436_561890438",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:00+0000",
      "dateFinished": "2022-03-10T15:50:02+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nWe can then show datastores to which other users have been granted the read privilege.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:02+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eWe can then show datastores to which other users have been granted the read privilege.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-1587993169",
      "id": "20220124-201436_767113423",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:03+0000",
      "dateFinished": "2022-03-10T15:50:03+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.ds.dir(dstype\u003d\"grant\")",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "  datastore_name grantee\n0     ds_pymodel  PUBLIC\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_1122462807",
      "id": "20220124-201436_198224028",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:04+0000",
      "dateFinished": "2022-03-10T15:50:04+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nOr, show datastores to which this user has been granted the read privilege (there currently are none).\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:04+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eOr, show datastores to which this user has been granted the read privilege (there currently are none).\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_2096490843",
      "id": "20220124-201436_1141360406",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:04+0000",
      "dateFinished": "2022-03-10T15:50:04+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.ds.dir(dstype\u003d\"granted\")",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:04+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "       owner datastore_name  object_count  size                date description\n0  OMLUSER02    ds_pymodels             2  4368 2021-07-23 15:02:43        None\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_1605935787",
      "id": "20220124-201436_194081508",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:05+0000",
      "dateFinished": "2022-03-10T15:50:07+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nOr, show datastores whose names match a pattern.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:07+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eOr, show datastores whose names match a pattern.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-1744896558",
      "id": "20220124-201436_1871334425",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:07+0000",
      "dateFinished": "2022-03-10T15:50:07+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.ds.dir(name\u003d\u0027pydata\u0027, regex_match\u003dTrue)[[\u0027datastore_name\u0027, \u0027object_count\u0027]]",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:07+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "  datastore_name  object_count\n0      ds_pydata             3\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-1032145929",
      "id": "20220124-201436_1628478780",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:08+0000",
      "dateFinished": "2022-03-10T15:50:08+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Describe contents of a datastore\n\nLet\u0027s describe the contents of the ds_pydata datastore. Notice that the three proxy objects are listed.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:08+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eDescribe contents of a datastore\u003c/h2\u003e\n\u003cp\u003eLet\u0027s describe the contents of the ds_pydata datastore. Notice that the three proxy objects are listed.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_2019764701",
      "id": "20220124-201436_466999679",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:09+0000",
      "dateFinished": "2022-03-10T15:50:09+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.ds.describe(name\u003d\u0027ds_pydata\u0027)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:09+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "    object_name                        class  size  length  row_count  col_count\n0          iris  pandas.core.frame.DataFrame  5971     150        150          5\n1    oml_boston                oml.DataFrame  1020     506        506         14\n2  oml_diabetes                oml.DataFrame   910     442        442         11\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_-2038179867",
      "id": "20220124-201436_458464947",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:09+0000",
      "dateFinished": "2022-03-10T15:50:11+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## User privileges on a datastore\n\nRevoke the read privilege from every user, and again show datastores to which read privilege has been granted. The result is empty.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:11+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eUser privileges on a datastore\u003c/h2\u003e\n\u003cp\u003eRevoke the read privilege from every user, and again show datastores to which read privilege has been granted. The result is empty.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_1360344936",
      "id": "20220124-201436_646247236",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:11+0000",
      "dateFinished": "2022-03-10T15:50:11+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.revoke(name\u003d\"ds_pymodel\", typ\u003d\"datastore\", user\u003dNone)\n\noml.ds.dir(dstype\u003d\"grant\")",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:11+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Empty DataFrame\nColumns: [datastore_name, grantee]\nIndex: []\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_1617027805",
      "id": "20220124-201436_1134064597",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:12+0000",
      "dateFinished": "2022-03-10T15:50:12+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nGrant the read privilege to the user PYQUSER2.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:12+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eGrant the read privilege to the user PYQUSER2.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_373776751",
      "id": "20220124-201436_1991464184",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:13+0000",
      "dateFinished": "2022-03-10T15:50:13+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.grant(name\u003d\"ds_pymodel\", typ\u003d\"datastore\", user\u003d\"OMLUSER2\")\n\noml.ds.dir(dstype\u003d\"grant\")",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:13+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "  datastore_name   grantee\n0     ds_pymodel  OMLUSER2\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276516_1182914383",
      "id": "20220124-201436_1905453723",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:14+0000",
      "dateFinished": "2022-03-10T15:50:14+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Delete datastore content\n\nDelete some objects from the datastore. Delete a datastore. Delete all datastores whose names match a pattern. Show the existing datastores again.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:14+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eDelete datastore content\u003c/h2\u003e\n\u003cp\u003eDelete some objects from the datastore. Delete a datastore. Delete all datastores whose names match a pattern. Show the existing datastores again.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_950856959",
      "id": "20220124-201436_1888299326",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:14+0000",
      "dateFinished": "2022-03-10T15:50:14+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.ds.delete(name\u003d\"ds_pydata\", objs\u003d[\"iris\", \"oml_boston\"])\n\noml.ds.delete(name\u003d\"ds_pydata\")\n\noml.ds.delete(name\u003d\"_pymodel\", regex_match\u003dTrue)\n\noml.ds.dir()",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:15+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "   datastore_name  object_count    size                date                                       description\n0  auc_result_ftr             1      21 2021-07-02 19:10:24                                              None\n1            ds-1             3    1449 2022-03-09 23:09:36                                              None\n2    ds_iris_data             1    5971 2022-03-10 15:49:26                                      iris dataset\n3   ds_rf_species             1  164925 2021-06-28 22:39:44  Random Forest model predicting Species from IRIS\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-281133840",
      "id": "20220124-201436_1888221729",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:15+0000",
      "dateFinished": "2022-03-10T15:50:19+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n# Python Script Repository\n\nTo illustrate using the Python Script Repository, we first define a function ***build_lm1*** that will fit a regression model. With this function, we create a script named \"MyLM_function\". OML4Py stores named user-defined functions -- the scripts -- in the repository.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:19+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch1\u003ePython Script Repository\u003c/h1\u003e\n\u003cp\u003eTo illustrate using the Python Script Repository, we first define a function \u003cstrong\u003e\u003cem\u003ebuild_lm1\u003c/em\u003e\u003c/strong\u003e that will fit a regression model. With this function, we create a script named \u0026ldquo;MyLM_function\u0026rdquo;. OML4Py stores named user-defined functions \u0026ndash; the scripts \u0026ndash; in the repository.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_1527413451",
      "id": "20220124-201436_485717084",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:20+0000",
      "dateFinished": "2022-03-10T15:50:20+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python \n\niris \u003d datasets.load_iris()\nx \u003d pd.DataFrame(iris.data, columns \u003d [\u0027SEPAL_LENGTH\u0027,\u0027SEPAL_WIDTH\u0027,\n                                       \u0027PETAL_LENGTH\u0027,\u0027PETAL_WIDTH\u0027])\ny \u003d pd.DataFrame(list(map(lambda x: {0: \u0027setosa\u0027, 1: \u0027versicolor\u0027, 2:\u0027virginica\u0027}[x], iris.target)), \n                 columns \u003d [\u0027SPECIES\u0027])\nIRIS2 \u003d oml.push(pd.concat([x, y], axis\u003d1))",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:20+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-816619436",
      "id": "20220124-201436_2060682091",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:20+0000",
      "dateFinished": "2022-03-10T15:50:20+0000",
      "status": "FINISHED"
    },
    {
      "title": "Define function object",
      "text": "%python\n\ndef build_lm1(dat):\n    from sklearn import linear_model\n    regr \u003d linear_model.LinearRegression()\n    import pandas as pd\n    dat \u003d pd.get_dummies(dat, drop_first\u003dTrue)\n    X \u003d dat[[\"SEPAL_WIDTH\", \"PETAL_LENGTH\", \"PETAL_WIDTH\", \n             \"SPECIES_versicolor\", \"SPECIES_virginica\"]]\n    y \u003d dat[[\"SEPAL_LENGTH\"]]\n    regr.fit(X, y)\n    return regr",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:21+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-1322205716",
      "id": "20220124-201436_1661895126",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:21+0000",
      "dateFinished": "2022-03-10T15:50:21+0000",
      "status": "FINISHED"
    },
    {
      "title": "Define function as string",
      "text": "%python\n\nbuild_lm2 \u003d \"\"\"def build_lm2(dat):\n    from sklearn import linear_model\n    regr \u003d linear_model.LinearRegression()\n    import pandas as pd\n    dat \u003d pd.get_dummies(dat, drop_first\u003dTrue)\n    X \u003d dat[[\"SEPAL_WIDTH\", \"PETAL_LENGTH\", \"PETAL_WIDTH\", \n             \"SPECIES_versicolor\", \"SPECIES_virginica\"]]\n    y \u003d dat[[\"SEPAL_LENGTH\"]]\n    regr.fit(X, y)\n    return regr\"\"\"",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:21+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-1586857910",
      "id": "20220124-201436_1283143012",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:22+0000",
      "dateFinished": "2022-03-10T15:50:22+0000",
      "status": "FINISHED"
    },
    {
      "title": "View function string",
      "text": "%python\nprint(build_lm2)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:22+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "def build_lm2(dat):\n    from sklearn import linear_model\n    regr \u003d linear_model.LinearRegression()\n    import pandas as pd\n    dat \u003d pd.get_dummies(dat, drop_first\u003dTrue)\n    X \u003d dat[[\"SEPAL_WIDTH\", \"PETAL_LENGTH\", \"PETAL_WIDTH\", \n             \"SPECIES_versicolor\", \"SPECIES_virginica\"]]\n    y \u003d dat[[\"SEPAL_LENGTH\"]]\n    regr.fit(X, y)\n    return regr\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_321953676",
      "id": "20220124-201436_1269688611",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:23+0000",
      "dateFinished": "2022-03-10T15:50:23+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Create scripts in repository\n\nCreate ***MyLM_function2*** using function string. Note, that one cannot provide the function object when storing a user-defined function. ",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:23+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eCreate scripts in repository\u003c/h2\u003e\n\u003cp\u003eCreate \u003cstrong\u003e\u003cem\u003eMyLM_function2\u003c/em\u003e\u003c/strong\u003e using function string. Note, that one cannot provide the function object when storing a user-defined function.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_388055714",
      "id": "20220124-201436_755233766",
      "dateCreated": "2020-06-08T01:58:57+0000",
      "dateStarted": "2022-03-10T15:50:23+0000",
      "dateFinished": "2022-03-10T15:50:23+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\ntry:\n    oml.script.drop(\"MyLM_function2\")\nexcept: \n    pass\noml.script.create(\"MyLM_function2\", func\u003dbuild_lm2, overwrite\u003dTrue)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:23+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "title": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_1352563199",
      "id": "20220124-201436_982828961",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:24+0000",
      "dateFinished": "2022-03-10T15:50:24+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nList the scripts available only to the current user.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:24+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eList the scripts available only to the current user.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_1200848447",
      "id": "20220124-201436_793843074",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:25+0000",
      "dateFinished": "2022-03-10T15:50:25+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.script.dir(sctype\u003d\u0027user\u0027)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:25+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "                      name                                             script description                date\n0           MyLM_function2  def build_lm2(dat):\\n    from sklearn import l...        None 2022-03-10 15:50:24\n1          MyTEST_function  def build_lm_str(dat):\\n    from sklearn impor...        None 2021-09-22 21:32:02\n2            RandomRedDots  def RandomRedDots (num_dots_1\u003d100, num_dots_2\u003d...        None 2022-03-09 22:14:42\n3               build_lm_1  def build_lm_1(dat):\\n    import oml\\n    from...        None 2022-03-09 23:09:18\n4            build_lm_rest  def build_rest(dat):\\n            from sklearn...        None 2022-03-10 00:31:56\n5              group_count  def group_count(dat):\\n  import oml\\n  import ...        None 2022-03-10 00:31:33\n6  myLinearRegressionModel  def fit_model(dat, modelName, datastoreName):\\...        None 2022-02-09 18:11:59\n7               sk_svc_fit  def fit(data):\\n\\n    from sklearn.svm import ...        None 2022-03-09 23:09:41\n8          test_noinp_rest  def test_noinp():\\n import oml\\n from oml.auto...        None 2022-03-08 00:32:47\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_1217994178",
      "id": "20220124-201436_194057658",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:25+0000",
      "dateFinished": "2022-03-10T15:50:25+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nGrant the read privilege to the ***MyLM_function1*** script to the user PYQUSER2.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:26+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eGrant the read privilege to the \u003cstrong\u003e\u003cem\u003eMyLM_function1\u003c/em\u003e\u003c/strong\u003e script to the user PYQUSER2.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-1195841360",
      "id": "20220124-201436_960453613",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:26+0000",
      "dateFinished": "2022-03-10T15:50:26+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.grant(name\u003d\"MyLM_function2\", typ\u003d\"pyqscript\", user\u003d\"OMLUSER2\")",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:26+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-888449241",
      "id": "20220124-201436_629811876",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:27+0000",
      "dateFinished": "2022-03-10T15:50:27+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nList the scripts to which read privilege has been granted.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:27+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eList the scripts to which read privilege has been granted.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_502490058",
      "id": "20220124-201436_38848146",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:28+0000",
      "dateFinished": "2022-03-10T15:50:28+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.script.dir(sctype\u003d\"grant\")",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:28+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "             name   grantee\n0  MyLM_function2  OMLUSER2\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-1425271221",
      "id": "20220124-201436_24063911",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:28+0000",
      "dateFinished": "2022-03-10T15:50:28+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\nimport inspect\n\nMyLM_function2 \u003d oml.script.load(\"MyLM_function2\")\nMyLM_function2.get_source()\nprint(str(MyLM_function2))\nprint(MyLM_function2.get_source().read())\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:28+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003coml.script.script.Callable object at 0x7fd6ad43b400\u003e\ndef build_lm2(dat):\n    from sklearn import linear_model\n    regr \u003d linear_model.LinearRegression()\n    import pandas as pd\n    dat \u003d pd.get_dummies(dat, drop_first\u003dTrue)\n    X \u003d dat[[\"SEPAL_WIDTH\", \"PETAL_LENGTH\", \"PETAL_WIDTH\", \n             \"SPECIES_versicolor\", \"SPECIES_virginica\"]]\n    y \u003d dat[[\"SEPAL_LENGTH\"]]\n    regr.fit(X, y)\n    return regr\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_615727298",
      "id": "20220124-201436_1120726100",
      "dateCreated": "2020-07-08T15:54:36+0000",
      "dateStarted": "2022-03-10T15:50:29+0000",
      "dateFinished": "2022-03-10T15:50:29+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nRevoke the read privilege to the MyLM_function script from the user PYQUSER2.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:29+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eRevoke the read privilege to the MyLM_function script from the user PYQUSER2.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-1301310042",
      "id": "20220124-201436_921117091",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:30+0000",
      "dateFinished": "2022-03-10T15:50:30+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.revoke(name\u003d\"MyLM_function2\", typ\u003d\"pyqscript\", user\u003d\"PYQUSER2\")",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:30+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "UserWarning:User OMLUSER did not grant the read privilege of script \u0027MyLM_function2\u0027 to user PYQUSER2.\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_1099979872",
      "id": "20220124-201436_847713723",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:30+0000",
      "dateFinished": "2022-03-10T15:50:30+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Invoke function using embedded Python execution\n\nWe\u0027ll use embedded Python execution to invoke this function. First we ***sync*** the IRIS table to get a proxy object, then use ***table_apply***, providing the proxy object, function name and the output type. We\u0027ll view the result and then pull the coefficients.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:31+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eInvoke function using embedded Python execution\u003c/h2\u003e\n\u003cp\u003eWe\u0027ll use embedded Python execution to invoke this function. First we \u003cstrong\u003e\u003cem\u003esync\u003c/em\u003e\u003c/strong\u003e the IRIS table to get a proxy object, then use \u003cstrong\u003e\u003cem\u003etable_apply\u003c/em\u003e\u003c/strong\u003e, providing the proxy object, function name and the output type. We\u0027ll view the result and then pull the coefficients.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_328841999",
      "id": "20220124-201436_1248663131",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:31+0000",
      "dateFinished": "2022-03-10T15:50:31+0000",
      "status": "FINISHED"
    },
    {
      "title": "Use table_apply to provide full IRIS data set to function",
      "text": "%python\n\nres \u003d oml.table_apply(IRIS, func\u003d\"MyLM_function2\", oml_input_type\u003d\"pandas.DataFrame\")\nres",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:31+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "LinearRegression()\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_1213843306",
      "id": "20220124-201436_1869016334",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:32+0000",
      "dateFinished": "2022-03-10T15:50:32+0000",
      "status": "FINISHED"
    },
    {
      "title": "Show model coefficients",
      "text": "%python\n\nres.coef_",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:32+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "array([[ 0.49588894,  0.82924391, -0.31515517, -0.72356196, -1.02349781]])\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_1075340908",
      "id": "20220124-201436_1619211128",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:33+0000",
      "dateFinished": "2022-03-10T15:50:33+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Storing functions as \u0027global\u0027\n\nLet\u0027s define and save another function ***build_lm3***, but this time as global. We\u0027ll then invoke that function to build another model.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:33+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eStoring functions as \u0027global\u0027\u003c/h2\u003e\n\u003cp\u003eLet\u0027s define and save another function \u003cstrong\u003e\u003cem\u003ebuild_lm3\u003c/em\u003e\u003c/strong\u003e, but this time as global. We\u0027ll then invoke that function to build another model.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-714282859",
      "id": "20220124-201436_1789122590",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:33+0000",
      "dateFinished": "2022-03-10T15:50:33+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\nbuild_lm3 \u003d \"\"\"def build_lm3(dat):\n  from sklearn import linear_model\n  regr \u003d linear_model.LinearRegression()\n  X \u003d dat[[\"PETAL_WIDTH\"]]\n  y \u003d dat[[\"PETAL_LENGTH\"]]\n  regr.fit(X, y)\n  return regr\"\"\"",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-1981711510",
      "id": "20220124-201436_1222558943",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:34+0000",
      "dateFinished": "2022-03-10T15:50:34+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.script.create(\"MyGlobalLM_function\", func\u003dbuild_lm3, is_global\u003dTrue, overwrite\u003dTrue)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:34+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-909808851",
      "id": "20220124-201436_277368407",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:35+0000",
      "dateFinished": "2022-03-10T15:50:35+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\nres \u003d oml.table_apply(IRIS, func\u003d\"MyGlobalLM_function\", \n                      oml_input_type\u003d\"pandas.DataFrame\")\nres",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:35+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "LinearRegression()\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-1923296125",
      "id": "20220124-201436_1776924621",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:35+0000",
      "dateFinished": "2022-03-10T15:50:35+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nList the scripts in the script repository available to the current user only.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:36+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eList the scripts in the script repository available to the current user only.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-1087684327",
      "id": "20220124-201436_503243206",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:36+0000",
      "dateFinished": "2022-03-10T15:50:36+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.script.dir()",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:36+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "                      name                                             script description                date\n0           MyLM_function2  def build_lm2(dat):\\n    from sklearn import l...        None 2022-03-10 15:50:24\n1          MyTEST_function  def build_lm_str(dat):\\n    from sklearn impor...        None 2021-09-22 21:32:02\n2            RandomRedDots  def RandomRedDots (num_dots_1\u003d100, num_dots_2\u003d...        None 2022-03-09 22:14:42\n3               build_lm_1  def build_lm_1(dat):\\n    import oml\\n    from...        None 2022-03-09 23:09:18\n4            build_lm_rest  def build_rest(dat):\\n            from sklearn...        None 2022-03-10 00:31:56\n5              group_count  def group_count(dat):\\n  import oml\\n  import ...        None 2022-03-10 00:31:33\n6  myLinearRegressionModel  def fit_model(dat, modelName, datastoreName):\\...        None 2022-02-09 18:11:59\n7               sk_svc_fit  def fit(data):\\n\\n    from sklearn.svm import ...        None 2022-03-09 23:09:41\n8          test_noinp_rest  def test_noinp():\\n import oml\\n from oml.auto...        None 2022-03-08 00:32:47\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-130931611",
      "id": "20220124-201436_590886554",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:37+0000",
      "dateFinished": "2022-03-10T15:50:37+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nList all of the scripts available to the current user.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:37+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eList all of the scripts available to the current user.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_1099288897",
      "id": "20220124-201436_1896885852",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:38+0000",
      "dateFinished": "2022-03-10T15:50:38+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.script.dir(sctype\u003d\u0027all\u0027)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:38+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "      owner                     name                                             script                                        description                date\n0   OMLUSER           MyLM_function2  def build_lm2(dat):\\n    from sklearn import l...                                               None 2022-03-10 15:50:24\n1   OMLUSER          MyTEST_function  def build_lm_str(dat):\\n    from sklearn impor...                                               None 2021-09-22 21:32:02\n2   OMLUSER            RandomRedDots  def RandomRedDots (num_dots_1\u003d100, num_dots_2\u003d...                                               None 2022-03-09 22:14:42\n3   OMLUSER               build_lm_1  def build_lm_1(dat):\\n    import oml\\n    from...                                               None 2022-03-09 23:09:18\n4   OMLUSER            build_lm_rest  def build_rest(dat):\\n            from sklearn...                                               None 2022-03-10 00:31:56\n5   OMLUSER              group_count  def group_count(dat):\\n  import oml\\n  import ...                                               None 2022-03-10 00:31:33\n6   OMLUSER  myLinearRegressionModel  def fit_model(dat, modelName, datastoreName):\\...                                               None 2022-02-09 18:11:59\n7   OMLUSER               sk_svc_fit  def fit(data):\\n\\n    from sklearn.svm import ...                                               None 2022-03-09 23:09:41\n8   OMLUSER          test_noinp_rest  def test_noinp():\\n import oml\\n from oml.auto...                                               None 2022-03-08 00:32:47\n9    PYQSYS                    GLBLM  def build_lm2(dat):\\n  from sklearn import lin...                                               None 2022-02-11 06:06:44\n10   PYQSYS      MyGlobalLM_function  def build_lm3(dat):\\n  from sklearn import lin...                                               None 2022-03-10 15:50:35\n11   PYQSYS            RandomRedDots  def RandomRedDots (num_dots_1 \u003d 100, num_dots_...                                               None 2022-03-09 23:09:51\n12   PYQSYS           RandomRedDots2  def RandomRedDots2 (num_dots_1 \u003d 100, num_dots...                                               None 2022-03-09 23:09:56\n13   PYQSYS           RandomRedDots3  def RandomRedDots3 (num_dots_1 \u003d 100, num_dots...                                               None 2022-03-09 23:10:01\n14   PYQSYS                     TEST  def test2():\\n    return print(\"Block 2 done. ...                                               None 2021-08-13 17:37:02\n15   PYQSYS                    TEST4  def test4():\\n    return print(\"Block 2 done.\\...                                               None 2021-08-13 17:42:49\n16   PYQSYS                 TEST_FUN  def test_fun(dat):\\n  import seaborn as sns\\n ...                                               None 2021-08-13 22:38:54\n17   PYQSYS               alg_select  def alg_select(table, target, parallel):\\n imp...  Algorithm Selection using OML4Py AutoML(string... 2021-08-04 00:06:31\n18   PYQSYS              algo_select  def algo_select(input, mining_function, score_...  AutoML algorithm selection with string inputs ... 2021-08-04 19:57:55\n19   PYQSYS             build_automl  def build_automl(input_df):\\n import oml\\n fro...  Build AutoML model (String inputs for table, n... 2021-08-03 23:39:03\n20   PYQSYS      compute_random_mean  def compute_random_mean(index):\\n    import nu...                                               None 2021-11-30 22:57:30\n21   PYQSYS              group_count  def group_count(dat):\\n  import oml\\n  import ...                                               None 2021-11-30 22:57:51\n22   PYQSYS                  my_pred  def my_pred(dat):\\n    import pandas as pd\\n  ...                                               None 2021-04-30 01:02:04\n23   PYQSYS               my_predict  def my_predict(dat):\\n    import pandas as pd\\...                                               None 2021-11-30 22:58:03\n24   PYQSYS                  pred_lm  def pred_lm(dat):\\n    from sklearn import lin...                                               None 2021-11-30 22:58:15\n25   PYQSYS              pred_oml_rf  def pred_oml_rf(data_string):\\n import oml\\n t...      Pred Species OML RF (String table name input) 2021-06-29 14:46:17\n26   PYQSYS          pred_rf_species  def pred_rf_species(dat):\\n import pandas as p...              Pred Species SKLearn RF (Table input) 2021-06-29 14:45:41\n27   PYQSYS        pred_rf_species_2  def pred_rf_species_2(data_string):\\n import p...         Pred Species SKLearn RF (Table name input) 2021-06-28 23:03:17\n28   PYQSYS        pred_rf_species_3  def pred_rf_species_3(data_string):\\n import p...         Pred Species SKLearn RF (Table name input) 2021-06-28 15:18:29\n29   PYQSYS           thread_process  def thread_process(key, value ):\\n            ...                                               None 2021-12-16 21:49:42\n30   PYQSYS                train_AML  \\ndef train_aml(dat):\\n import pandas as pd \\n...                                               None 2021-06-27 23:22:19\n31   PYQSYS               train_AML2  \\ndef train_aml2(dat):\\n import pandas as pd \\...                                               None 2021-06-28 00:04:20\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_1609585981",
      "id": "20220124-201436_1440983148",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:38+0000",
      "dateFinished": "2022-03-10T15:50:38+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nList the scripts available to all users.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:38+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eList the scripts available to all users.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_481451724",
      "id": "20220124-201436_1064932295",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:39+0000",
      "dateFinished": "2022-03-10T15:50:39+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.script.dir(sctype\u003d\u0027global\u0027)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:39+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "                   name                                             script                                        description                date\n0                 GLBLM  def build_lm2(dat):\\n  from sklearn import lin...                                               None 2022-02-11 06:06:44\n1   MyGlobalLM_function  def build_lm3(dat):\\n  from sklearn import lin...                                               None 2022-03-10 15:50:35\n2         RandomRedDots  def RandomRedDots (num_dots_1 \u003d 100, num_dots_...                                               None 2022-03-09 23:09:51\n3        RandomRedDots2  def RandomRedDots2 (num_dots_1 \u003d 100, num_dots...                                               None 2022-03-09 23:09:56\n4        RandomRedDots3  def RandomRedDots3 (num_dots_1 \u003d 100, num_dots...                                               None 2022-03-09 23:10:01\n5                  TEST  def test2():\\n    return print(\"Block 2 done. ...                                               None 2021-08-13 17:37:02\n6                 TEST4  def test4():\\n    return print(\"Block 2 done.\\...                                               None 2021-08-13 17:42:49\n7              TEST_FUN  def test_fun(dat):\\n  import seaborn as sns\\n ...                                               None 2021-08-13 22:38:54\n8            alg_select  def alg_select(table, target, parallel):\\n imp...  Algorithm Selection using OML4Py AutoML(string... 2021-08-04 00:06:31\n9           algo_select  def algo_select(input, mining_function, score_...  AutoML algorithm selection with string inputs ... 2021-08-04 19:57:55\n10         build_automl  def build_automl(input_df):\\n import oml\\n fro...  Build AutoML model (String inputs for table, n... 2021-08-03 23:39:03\n11  compute_random_mean  def compute_random_mean(index):\\n    import nu...                                               None 2021-11-30 22:57:30\n12          group_count  def group_count(dat):\\n  import oml\\n  import ...                                               None 2021-11-30 22:57:51\n13              my_pred  def my_pred(dat):\\n    import pandas as pd\\n  ...                                               None 2021-04-30 01:02:04\n14           my_predict  def my_predict(dat):\\n    import pandas as pd\\...                                               None 2021-11-30 22:58:03\n15              pred_lm  def pred_lm(dat):\\n    from sklearn import lin...                                               None 2021-11-30 22:58:15\n16          pred_oml_rf  def pred_oml_rf(data_string):\\n import oml\\n t...      Pred Species OML RF (String table name input) 2021-06-29 14:46:17\n17      pred_rf_species  def pred_rf_species(dat):\\n import pandas as p...              Pred Species SKLearn RF (Table input) 2021-06-29 14:45:41\n18    pred_rf_species_2  def pred_rf_species_2(data_string):\\n import p...         Pred Species SKLearn RF (Table name input) 2021-06-28 23:03:17\n19    pred_rf_species_3  def pred_rf_species_3(data_string):\\n import p...         Pred Species SKLearn RF (Table name input) 2021-06-28 15:18:29\n20       thread_process  def thread_process(key, value ):\\n            ...                                               None 2021-12-16 21:49:42\n21            train_AML  \\ndef train_aml(dat):\\n import pandas as pd \\n...                                               None 2021-06-27 23:22:19\n22           train_AML2  \\ndef train_aml2(dat):\\n import pandas as pd \\...                                               None 2021-06-28 00:04:20\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_119712753",
      "id": "20220124-201436_1570238036",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:40+0000",
      "dateFinished": "2022-03-10T15:50:40+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Loading functions from the script repository\n\nLoad the MyLM_function1 and MyGlobalLM_function scripts, and pull the models to the local Python session. For MYLM, build the model on the IRIS data set and pull the coefficients. For GlobalMYLM, build and display the model.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:40+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eLoading functions from the script repository\u003c/h2\u003e\n\u003cp\u003eLoad the MyLM_function1 and MyGlobalLM_function scripts, and pull the models to the local Python session. For MYLM, build the model on the IRIS data set and pull the coefficients. For GlobalMYLM, build and display the model.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_512274764",
      "id": "20220124-201436_755325300",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:40+0000",
      "dateFinished": "2022-03-10T15:50:40+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\nMYLM \u003d oml.script.load(name\u003d\"MyLM_function2\")\nGlobalMYLM \u003d oml.script.load(name\u003d\"MyGlobalLM_function\")\n\nprint(\"Coefficients: \", MYLM(IRIS.pull()).coef_)\nprint(\"Model: \", GlobalMYLM(IRIS.pull()))",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:41+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Coefficients:  [[ 0.49588894  0.82924391 -0.31515517 -0.72356196 -1.02349781]]\nModel:  LinearRegression()\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_390392401",
      "id": "20220124-201436_1701655664",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:41+0000",
      "dateFinished": "2022-03-10T15:50:41+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\nList the available scripts.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eList the available scripts.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-1186551630",
      "id": "20220124-201436_385442993",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:42+0000",
      "dateFinished": "2022-03-10T15:50:42+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.script.dir(sctype\u003d\"all\")",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "      owner                     name                                             script                                        description                date\n0   OMLUSER           MyLM_function2  def build_lm2(dat):\\n    from sklearn import l...                                               None 2022-03-10 15:50:24\n1   OMLUSER          MyTEST_function  def build_lm_str(dat):\\n    from sklearn impor...                                               None 2021-09-22 21:32:02\n2   OMLUSER            RandomRedDots  def RandomRedDots (num_dots_1\u003d100, num_dots_2\u003d...                                               None 2022-03-09 22:14:42\n3   OMLUSER               build_lm_1  def build_lm_1(dat):\\n    import oml\\n    from...                                               None 2022-03-09 23:09:18\n4   OMLUSER            build_lm_rest  def build_rest(dat):\\n            from sklearn...                                               None 2022-03-10 00:31:56\n5   OMLUSER              group_count  def group_count(dat):\\n  import oml\\n  import ...                                               None 2022-03-10 00:31:33\n6   OMLUSER  myLinearRegressionModel  def fit_model(dat, modelName, datastoreName):\\...                                               None 2022-02-09 18:11:59\n7   OMLUSER               sk_svc_fit  def fit(data):\\n\\n    from sklearn.svm import ...                                               None 2022-03-09 23:09:41\n8   OMLUSER          test_noinp_rest  def test_noinp():\\n import oml\\n from oml.auto...                                               None 2022-03-08 00:32:47\n9    PYQSYS                    GLBLM  def build_lm2(dat):\\n  from sklearn import lin...                                               None 2022-02-11 06:06:44\n10   PYQSYS      MyGlobalLM_function  def build_lm3(dat):\\n  from sklearn import lin...                                               None 2022-03-10 15:50:35\n11   PYQSYS            RandomRedDots  def RandomRedDots (num_dots_1 \u003d 100, num_dots_...                                               None 2022-03-09 23:09:51\n12   PYQSYS           RandomRedDots2  def RandomRedDots2 (num_dots_1 \u003d 100, num_dots...                                               None 2022-03-09 23:09:56\n13   PYQSYS           RandomRedDots3  def RandomRedDots3 (num_dots_1 \u003d 100, num_dots...                                               None 2022-03-09 23:10:01\n14   PYQSYS                     TEST  def test2():\\n    return print(\"Block 2 done. ...                                               None 2021-08-13 17:37:02\n15   PYQSYS                    TEST4  def test4():\\n    return print(\"Block 2 done.\\...                                               None 2021-08-13 17:42:49\n16   PYQSYS                 TEST_FUN  def test_fun(dat):\\n  import seaborn as sns\\n ...                                               None 2021-08-13 22:38:54\n17   PYQSYS               alg_select  def alg_select(table, target, parallel):\\n imp...  Algorithm Selection using OML4Py AutoML(string... 2021-08-04 00:06:31\n18   PYQSYS              algo_select  def algo_select(input, mining_function, score_...  AutoML algorithm selection with string inputs ... 2021-08-04 19:57:55\n19   PYQSYS             build_automl  def build_automl(input_df):\\n import oml\\n fro...  Build AutoML model (String inputs for table, n... 2021-08-03 23:39:03\n20   PYQSYS      compute_random_mean  def compute_random_mean(index):\\n    import nu...                                               None 2021-11-30 22:57:30\n21   PYQSYS              group_count  def group_count(dat):\\n  import oml\\n  import ...                                               None 2021-11-30 22:57:51\n22   PYQSYS                  my_pred  def my_pred(dat):\\n    import pandas as pd\\n  ...                                               None 2021-04-30 01:02:04\n23   PYQSYS               my_predict  def my_predict(dat):\\n    import pandas as pd\\...                                               None 2021-11-30 22:58:03\n24   PYQSYS                  pred_lm  def pred_lm(dat):\\n    from sklearn import lin...                                               None 2021-11-30 22:58:15\n25   PYQSYS              pred_oml_rf  def pred_oml_rf(data_string):\\n import oml\\n t...      Pred Species OML RF (String table name input) 2021-06-29 14:46:17\n26   PYQSYS          pred_rf_species  def pred_rf_species(dat):\\n import pandas as p...              Pred Species SKLearn RF (Table input) 2021-06-29 14:45:41\n27   PYQSYS        pred_rf_species_2  def pred_rf_species_2(data_string):\\n import p...         Pred Species SKLearn RF (Table name input) 2021-06-28 23:03:17\n28   PYQSYS        pred_rf_species_3  def pred_rf_species_3(data_string):\\n import p...         Pred Species SKLearn RF (Table name input) 2021-06-28 15:18:29\n29   PYQSYS           thread_process  def thread_process(key, value ):\\n            ...                                               None 2021-12-16 21:49:42\n30   PYQSYS                train_AML  \\ndef train_aml(dat):\\n import pandas as pd \\n...                                               None 2021-06-27 23:22:19\n31   PYQSYS               train_AML2  \\ndef train_aml2(dat):\\n import pandas as pd \\...                                               None 2021-06-28 00:04:20\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-874151078",
      "id": "20220124-201436_1954471284",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:43+0000",
      "dateFinished": "2022-03-10T15:50:43+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Drop scripts from repository\n\nDrop one of the private scripts.\n\nDrop the global script.\n\nList the available scripts again.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:43+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eDrop scripts from repository\u003c/h2\u003e\n\u003cp\u003eDrop one of the private scripts.\u003c/p\u003e\n\u003cp\u003eDrop the global script.\u003c/p\u003e\n\u003cp\u003eList the available scripts again.\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_1592750850",
      "id": "20220124-201436_1941435510",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:43+0000",
      "dateFinished": "2022-03-10T15:50:43+0000",
      "status": "FINISHED"
    },
    {
      "text": "%python\n\noml.script.drop(\"MyLM_function2\")\noml.script.drop(\"MyGlobalLM_function\", is_global\u003dTrue)\noml.script.dir(sctype\u003d\"all\")",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "      owner                     name                                             script                                        description                date\n0   OMLUSER          MyTEST_function  def build_lm_str(dat):\\n    from sklearn impor...                                               None 2021-09-22 21:32:02\n1   OMLUSER            RandomRedDots  def RandomRedDots (num_dots_1\u003d100, num_dots_2\u003d...                                               None 2022-03-09 22:14:42\n2   OMLUSER               build_lm_1  def build_lm_1(dat):\\n    import oml\\n    from...                                               None 2022-03-09 23:09:18\n3   OMLUSER            build_lm_rest  def build_rest(dat):\\n            from sklearn...                                               None 2022-03-10 00:31:56\n4   OMLUSER              group_count  def group_count(dat):\\n  import oml\\n  import ...                                               None 2022-03-10 00:31:33\n5   OMLUSER  myLinearRegressionModel  def fit_model(dat, modelName, datastoreName):\\...                                               None 2022-02-09 18:11:59\n6   OMLUSER               sk_svc_fit  def fit(data):\\n\\n    from sklearn.svm import ...                                               None 2022-03-09 23:09:41\n7   OMLUSER          test_noinp_rest  def test_noinp():\\n import oml\\n from oml.auto...                                               None 2022-03-08 00:32:47\n8    PYQSYS                    GLBLM  def build_lm2(dat):\\n  from sklearn import lin...                                               None 2022-02-11 06:06:44\n9    PYQSYS            RandomRedDots  def RandomRedDots (num_dots_1 \u003d 100, num_dots_...                                               None 2022-03-09 23:09:51\n10   PYQSYS           RandomRedDots2  def RandomRedDots2 (num_dots_1 \u003d 100, num_dots...                                               None 2022-03-09 23:09:56\n11   PYQSYS           RandomRedDots3  def RandomRedDots3 (num_dots_1 \u003d 100, num_dots...                                               None 2022-03-09 23:10:01\n12   PYQSYS                     TEST  def test2():\\n    return print(\"Block 2 done. ...                                               None 2021-08-13 17:37:02\n13   PYQSYS                    TEST4  def test4():\\n    return print(\"Block 2 done.\\...                                               None 2021-08-13 17:42:49\n14   PYQSYS                 TEST_FUN  def test_fun(dat):\\n  import seaborn as sns\\n ...                                               None 2021-08-13 22:38:54\n15   PYQSYS               alg_select  def alg_select(table, target, parallel):\\n imp...  Algorithm Selection using OML4Py AutoML(string... 2021-08-04 00:06:31\n16   PYQSYS              algo_select  def algo_select(input, mining_function, score_...  AutoML algorithm selection with string inputs ... 2021-08-04 19:57:55\n17   PYQSYS             build_automl  def build_automl(input_df):\\n import oml\\n fro...  Build AutoML model (String inputs for table, n... 2021-08-03 23:39:03\n18   PYQSYS      compute_random_mean  def compute_random_mean(index):\\n    import nu...                                               None 2021-11-30 22:57:30\n19   PYQSYS              group_count  def group_count(dat):\\n  import oml\\n  import ...                                               None 2021-11-30 22:57:51\n20   PYQSYS                  my_pred  def my_pred(dat):\\n    import pandas as pd\\n  ...                                               None 2021-04-30 01:02:04\n21   PYQSYS               my_predict  def my_predict(dat):\\n    import pandas as pd\\...                                               None 2021-11-30 22:58:03\n22   PYQSYS                  pred_lm  def pred_lm(dat):\\n    from sklearn import lin...                                               None 2021-11-30 22:58:15\n23   PYQSYS              pred_oml_rf  def pred_oml_rf(data_string):\\n import oml\\n t...      Pred Species OML RF (String table name input) 2021-06-29 14:46:17\n24   PYQSYS          pred_rf_species  def pred_rf_species(dat):\\n import pandas as p...              Pred Species SKLearn RF (Table input) 2021-06-29 14:45:41\n25   PYQSYS        pred_rf_species_2  def pred_rf_species_2(data_string):\\n import p...         Pred Species SKLearn RF (Table name input) 2021-06-28 23:03:17\n26   PYQSYS        pred_rf_species_3  def pred_rf_species_3(data_string):\\n import p...         Pred Species SKLearn RF (Table name input) 2021-06-28 15:18:29\n27   PYQSYS           thread_process  def thread_process(key, value ):\\n            ...                                               None 2021-12-16 21:49:42\n28   PYQSYS                train_AML  \\ndef train_aml(dat):\\n import pandas as pd \\n...                                               None 2021-06-27 23:22:19\n29   PYQSYS               train_AML2  \\ndef train_aml2(dat):\\n import pandas as pd \\...                                               None 2021-06-28 00:04:20\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_1755921243",
      "id": "20220124-201436_2146799812",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:44+0000",
      "dateFinished": "2022-03-10T15:50:44+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n# End of Script\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:44+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch1\u003eEnd of Script\u003c/h1\u003e\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_-1674826834",
      "id": "20220124-201436_578072423",
      "dateCreated": "2020-02-19T23:52:25+0000",
      "dateStarted": "2022-03-10T15:50:45+0000",
      "dateFinished": "2022-03-10T15:50:45+0000",
      "status": "FINISHED"
    },
    {
      "text": "%md\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T15:50:45+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643055276517_2049697249",
      "id": "20220124-201436_551764768",
      "dateCreated": "2020-05-15T00:10:14+0000",
      "dateStarted": "2022-03-10T15:50:46+0000",
      "dateFinished": "2022-03-10T15:50:46+0000",
      "status": "FINISHED"
    }
  ],
  "name": "OML4Py -3- Datastore and Script Repository",
  "id": "101143",
  "defaultInterpreterGroup": "spark",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "MDW381939C745:shared_process": [],
    "ORA7A60DC9B32:OMLUSER-101143": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {
    "isRunning": false
  }
}