{"paragraphs":[{"text":"%md\n\n# Oracle Machine Learning for Python - Datastore and Script Repository\n\n***Oracle Machine Learning for Python*** (OML4Py), a component of Oracle Machine Learning, makes the open source Python scripting language and environment ready for the enterprise and big data. Designed for problems involving both large and small volumes of data, Oracle Machine Learning for Python integrates Python with Oracle Database, allowing users to execute Python commands and scripts for statistical, machine learning, and graphical analyses on database tables and views using Python syntax. Many familiar Python functions are overloaded and translate Python functions into SQL for in-database execution, as well as new automated machine learning capabilities.\n\nIn this notebook, we highlight the datastore and script repository features of OML4Py.\n\nWith a datastore, you can store Python objects in a named datastore entry. This named datastore can then use in subsequent Python sessions and even be made available to other users or programs by granting/revoking read permissions.\n\nPython objects, including OML4Py proxy objects, exist for the duration of the current Python session unless you explicitly save them. You can save one or more Python objects, including OML proxy objects, to a named datastore and then load those objects in a later Python session. This is also useful when using embedded Python execution. Datastores exist in the user’s Oracle Database schema. A datastore, and the objects it contains, persist in the database until explicitly deleted.\n\nUsing a datastore, you can:\n\n* Save OML4Py and other Python objects in one Python session and load them in another Python session\n* Pass non-scalar arguments to Python functions for use in embedded Python execution from both the Python, and more importantly, the SQL API where only scalar values can be passed to functions\n* List available datastores and explore the contents of a datastore\n\nWith the script repository, users can:\n\n* Create and store user-defined Python functions as scripts in Oracle Database\n* Grant or revoke the read/eecute privilege to a script\n* List available scripts\n* Load a script function into the Python environment\n* Drop a script from the script repository\n\nYou can make scripts either private or global. A private script is available only to the owner. A global script is available to any user. For private scripts, the owner of the script may grant the read privilege to other users or revoke that privilege.\n\nCopyright (c) 2020 Oracle Corporation                             \n###### [The Universal Permissive License (UPL), Version 1.0](https://oss.oracle.com/licenses/upl/)\n---","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:24+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-680212016","id":"20200915-183831_1016194151","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:24+0000","dateFinished":"2020-09-15T20:19:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"focus":true,"$$hashKey":"object:6076","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Oracle Machine Learning for Python - Datastore and Script Repository</h1>\n<p><strong><em>Oracle Machine Learning for Python</em></strong> (OML4Py), a component of Oracle Machine Learning, makes the open source Python scripting language and environment ready for the enterprise and big data. Designed for problems involving both large and small volumes of data, Oracle Machine Learning for Python integrates Python with Oracle Database, allowing users to execute Python commands and scripts for statistical, machine learning, and graphical analyses on database tables and views using Python syntax. Many familiar Python functions are overloaded and translate Python functions into SQL for in-database execution, as well as new automated machine learning capabilities.</p>\n<p>In this notebook, we highlight the datastore and script repository features of OML4Py.</p>\n<p>With a datastore, you can store Python objects in a named datastore entry. This named datastore can then use in subsequent Python sessions and even be made available to other users or programs by granting/revoking read permissions.</p>\n<p>Python objects, including OML4Py proxy objects, exist for the duration of the current Python session unless you explicitly save them. You can save one or more Python objects, including OML proxy objects, to a named datastore and then load those objects in a later Python session. This is also useful when using embedded Python execution. Datastores exist in the user’s Oracle Database schema. A datastore, and the objects it contains, persist in the database until explicitly deleted.</p>\n<p>Using a datastore, you can:</p>\n<ul>\n<li>Save OML4Py and other Python objects in one Python session and load them in another Python session</li>\n<li>Pass non-scalar arguments to Python functions for use in embedded Python execution from both the Python, and more importantly, the SQL API where only scalar values can be passed to functions</li>\n<li>List available datastores and explore the contents of a datastore</li>\n</ul>\n<p>With the script repository, users can:</p>\n<ul>\n<li>Create and store user-defined Python functions as scripts in Oracle Database</li>\n<li>Grant or revoke the read/eecute privilege to a script</li>\n<li>List available scripts</li>\n<li>Load a script function into the Python environment</li>\n<li>Drop a script from the script repository</li>\n</ul>\n<p>You can make scripts either private or global. A private script is available only to the owner. A global script is available to any user. For private scripts, the owner of the script may grant the read privilege to other users or revoke that privilege.</p>\n<p>Copyright (c) 2020 Oracle Corporation</p>\n<h6><a href=\"https://oss.oracle.com/licenses/upl/\">The Universal Permissive License (UPL), Version 1.0</a></h6>\n<hr />\n"}]}},{"text":"%md\n\n## Import libraries supporting OML4Py and create data table\n\nTo use OML4Py, first import the package ***oml***. Check for the PYQADMIN role, which is required to use certain functionalities here and later for embedded Python execution. \n\nUsers can get online help using Python's help function and specifying the function of interest.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:24+0000","config":{"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":true},"colWidth":6,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_574531084","id":"20200915-183831_840283157","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:25+0000","dateFinished":"2020-09-15T20:19:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6077","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Import libraries supporting OML4Py and create data table</h2>\n<p>To use OML4Py, first import the package <strong><em>oml</em></strong>. Check for the PYQADMIN role, which is required to use certain functionalities here and later for embedded Python execution.</p>\n<p>Users can get online help using Python's help function and specifying the function of interest.</p>\n"}]}},{"title":"Import libraries and set display options and check PYQADMIN role","text":"%python\n\nimport pandas as pd\nimport oml\n\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)\n\noml.core.methods.__checkRole(\"PYQADMIN\")","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:25+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":6,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-949480909","id":"20200915-183831_376081363","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:25+0000","dateFinished":"2020-09-15T20:19:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6078","results":{"code":"SUCCESS","msg":[]}},{"text":"%md\n\n## Create Pandas DataFrames and load them into Autonomous Database\n\nWe load three data sets, combining target and predictors into a single DataFrame, before invoking create and displaying the columns for each. These will be used in exploring *datastore* functionality.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:25+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_752303669","id":"20200915-183831_524595801","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:26+0000","dateFinished":"2020-09-15T20:19:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6079","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Create Pandas DataFrames and load them into Autonomous Database</h2>\n<p>We load three data sets, combining target and predictors into a single DataFrame, before invoking create and displaying the columns for each. These will be used in exploring <em>datastore</em> functionality.</p>\n"}]}},{"title":"Create IRIS data table","text":"%python\nfrom sklearn import datasets\nfrom sklearn import linear_model\nimport pandas as pd\n\niris = datasets.load_iris()\nx = pd.DataFrame(iris.data, columns = ['SEPAL_LENGTH','SEPAL_WIDTH',\n                                       'PETAL_LENGTH','PETAL_WIDTH'])\ny = pd.DataFrame(list(map(lambda x: {0: 'setosa', 1: 'versicolor',\n                 2:'virginica'}[x], iris.target)), columns = ['SPECIES'])\ntry:\n    oml.drop(table='IRIS')\nexcept:\n    pass\nIRIS = oml.create(pd.concat([x, y], axis=1), table = 'IRIS')\niris = pd.concat([x, y], axis=1)\nprint(IRIS.columns)","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:26+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":4,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_873451954","id":"20200915-183831_742776586","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:26+0000","dateFinished":"2020-09-15T20:19:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6080","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['SEPAL_LENGTH', 'SEPAL_WIDTH', 'PETAL_LENGTH', 'PETAL_WIDTH', 'SPECIES']\n"}]}},{"title":"Create DIABETES temporary data table","text":"%python\n\ndiabetes = datasets.load_diabetes()\nx = pd.DataFrame(diabetes.data, columns=diabetes.feature_names)\ny = pd.DataFrame(diabetes.target, columns=['disease_progression'])\n\nDIABETES_TMP = oml.push(pd.concat([x, y], axis=1))\nprint(DIABETES_TMP.columns)","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:27+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":4,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-1427161349","id":"20200915-183831_862937995","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:27+0000","dateFinished":"2020-09-15T20:19:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6081","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['age', 'sex', 'bmi', 'bp', 's1', 's2', 's3', 's4', 's5', 's6', 'disease_progression']\n"}]}},{"title":"Create BOSTON temporary data table","text":"%python\n\nboston = datasets.load_boston()\nx = pd.DataFrame(boston.data, columns = boston.feature_names.tolist())\ny = pd.DataFrame(boston.target, columns = ['Value'])\n\nBOSTON_TMP = oml.push(pd.concat([x, y], axis=1))\nprint(BOSTON_TMP.columns)","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:27+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":4,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_930001395","id":"20200915-183831_1897480742","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:28+0000","dateFinished":"2020-09-15T20:19:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6082","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT', 'Value']\n"}]}},{"text":"%md\n## Save Python objects to datastore\n\nSave the actual *iris* data set and the temporary BOSTON proxy object to a datastore named \"ds_pydata\", overwriting if the named datastore already exists. Note that you can store actual data objects in a datastore, but large data objects should remain as database tables for performance and scalability.\n\nBy storing the BOSTON_TMP object, the temporary table will not be deleted when the session terminates.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:28+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1557967501","id":"20200915-183831_1274404902","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:28+0000","dateFinished":"2020-09-15T20:19:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6083","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Save Python objects to datastore</h2>\n<p>Save the actual <em>iris</em> data set and the temporary BOSTON proxy object to a datastore named &ldquo;ds_pydata&rdquo;, overwriting if the named datastore already exists. Note that you can store actual data objects in a datastore, but large data objects should remain as database tables for performance and scalability.</p>\n<p>By storing the BOSTON_TMP object, the temporary table will not be deleted when the session terminates.</p>\n"}]}},{"text":"%python\n\noml.ds.save(objs={'iris':iris, 'oml_boston':BOSTON_TMP},\n            name=\"ds_pydata\", description = \"python datasets\", overwrite=True)","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:28+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-331740873","id":"20200915-183831_1238031325","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:29+0000","dateFinished":"2020-09-15T20:19:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6084","results":{"code":"SUCCESS","msg":[]}},{"text":"%md\n\nAdd a third object, the temporary DIABETES proxy object, to that same datastore.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:29+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1799161915","id":"20200915-183831_32606804","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:29+0000","dateFinished":"2020-09-15T20:19:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6085","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Add a third object, the temporary DIABETES proxy object, to that same datastore.</p>\n"}]}},{"text":"%python\n\noml.ds.save(objs={'oml_diabetes':DIABETES_TMP}, name=\"ds_pydata\", append=True)","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:30+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_468282574","id":"20200915-183831_977461310","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:30+0000","dateFinished":"2020-09-15T20:19:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6086","results":{"code":"SUCCESS","msg":[]}},{"text":"%md\n\nSave the *iris* DataFrame to a new datastore, and then list the datastores. Notice we see the datastore name, the number of objects in the datastore, the size in bytes consumed, when the datastore was create/updated, and any description provided by the user. Our two datastores ***ds_iris_data*** and ***ds_pydata*** are present, with the latter containing three objects.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:30+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1958672366","id":"20200915-183831_1582482304","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:31+0000","dateFinished":"2020-09-15T20:19:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6087","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Save the <em>iris</em> DataFrame to a new datastore, and then list the datastores. Notice we see the datastore name, the number of objects in the datastore, the size in bytes consumed, when the datastore was create/updated, and any description provided by the user. Our two datastores <strong><em>ds_iris_data</em></strong> and <strong><em>ds_pydata</em></strong> are present, with the latter containing three objects.</p>\n"}]}},{"text":"%python\n\noml.ds.save(objs={'iris':iris},\n            name=\"ds_iris_data\", description = \"iris dataset\", overwrite=True)\n\noml.ds.dir()","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:31+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-302093516","id":"20200915-183831_1104805796","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:31+0000","dateFinished":"2020-09-15T20:19:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6088","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"  datastore_name  object_count  size                date      description\n0   ds_iris_data             1  5987 2020-09-15 20:19:31     iris dataset\n1      ds_pydata             3  7941 2020-09-15 20:19:29  python datasets\n"}]}},{"text":"%md\n## Store model objects in a datastore\n\nTo illustrate storing other types of objects in datastores, we'll create regression models using sklearn and OML4Py.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:31+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_915375334","id":"20200915-183831_1282899681","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:32+0000","dateFinished":"2020-09-15T20:19:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6089","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Store model objects in a datastore</h2>\n<p>To illustrate storing other types of objects in datastores, we'll create regression models using sklearn and OML4Py.</p>\n"}]}},{"text":"%python\n\nregr1 = linear_model.LinearRegression()\nregr1.fit(boston.data, boston.target)\n\nregr2 = oml.glm(\"regression\")\nX = BOSTON_TMP.drop('Value')\ny = BOSTON_TMP['Value']\nregr2 = regr2.fit(X, y)","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:32+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_717290201","id":"20200915-183831_1629037633","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:32+0000","dateFinished":"2020-09-15T20:19:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6090","results":{"code":"SUCCESS","msg":[]}},{"text":"%md\n\nSave objects to a datastore and allow the read privilege to be granted to them. Then grant the read privilege to all users by specifying ***user=None***. Finally list the datastores to which the read privilege has been granted.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1833393172","id":"20200915-183831_689939745","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:34+0000","dateFinished":"2020-09-15T20:19:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6091","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Save objects to a datastore and allow the read privilege to be granted to them. Then grant the read privilege to all users by specifying <strong><em>user=None</em></strong>. Finally list the datastores to which the read privilege has been granted.</p>\n"}]}},{"text":"%python\n\noml.ds.save(objs={'regr1':regr1, 'regr2':regr2},\n            name=\"ds_pymodel\", grantable=True, overwrite=True)\n\noml.ds.dir()","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:35+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-322386462","id":"20200915-183831_666196857","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:35+0000","dateFinished":"2020-09-15T20:19:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6092","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"  datastore_name  object_count  size                date      description\n0   ds_iris_data             1  5987 2020-09-15 20:19:31     iris dataset\n1      ds_pydata             3  7941 2020-09-15 20:19:29  python datasets\n2     ds_pymodel             2  4196 2020-09-15 20:19:35             None\n"}]}},{"text":"%python\n\noml.grant(name=\"ds_pymodel\", typ=\"datastore\", user=None)\n\noml.ds.dir(dstype=\"grant\")","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:35+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_426927320","id":"20200915-183831_1354938648","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:36+0000","dateFinished":"2020-09-15T20:19:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6093","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"  datastore_name grantee\n0     ds_pymodel  PUBLIC\n"}]}},{"text":"%md\n## Load datastore objects into memory\n\nLoad all Python objects from a datastore to the global workspace and sort the result by name. Notice that they have the name specified in the dictionary when saved.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:36+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-452024225","id":"20200915-183831_2018616429","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:36+0000","dateFinished":"2020-09-15T20:19:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6094","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Load datastore objects into memory</h2>\n<p>Load all Python objects from a datastore to the global workspace and sort the result by name. Notice that they have the name specified in the dictionary when saved.</p>\n"}]}},{"text":"%python\n\nsorted(oml.ds.load(name=\"ds_pydata\"))","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1991057126","id":"20200915-183831_749936875","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:37+0000","dateFinished":"2020-09-15T20:19:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6095","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['iris', 'oml_boston', 'oml_diabetes']\n"}]}},{"text":"%md\n\nLoad the named Python object, ***regr2***, from the datastore to the global workspace.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:37+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-575420976","id":"20200915-183831_567335063","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:37+0000","dateFinished":"2020-09-15T20:19:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6096","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Load the named Python object, <strong><em>regr2</em></strong>, from the datastore to the global workspace.</p>\n"}]}},{"text":"%python\n\noml.ds.load(name=\"ds_pymodel\", objs=[\"regr2\"])","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:37+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_362243734","id":"20200915-183831_1688186828","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:38+0000","dateFinished":"2020-09-15T20:19:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6097","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['regr2']\n"}]}},{"text":"%md\n\nLoad the named Python object, ***regr1***, from the datastore to the user's workspace.\n\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:40+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1259101169","id":"20200915-183831_295181822","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:40+0000","dateFinished":"2020-09-15T20:19:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6098","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Load the named Python object, <strong><em>regr1</em></strong>, from the datastore to the user's workspace.</p>\n"}]}},{"text":"%python\n\noml.ds.load(name=\"ds_pymodel\", objs=[\"regr1\"], to_globals=False)","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:40+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_766378235","id":"20200915-183831_614060894","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:40+0000","dateFinished":"2020-09-15T20:19:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6099","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"{'regr1': LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)}\n"}]}},{"text":"%md\n\n## Show datastores and other details","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:42+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_2092448794","id":"20200915-183831_53130042","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:42+0000","dateFinished":"2020-09-15T20:19:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6100","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Show datastores and other details</h2>\n"}]}},{"text":"%python\n\noml.ds.dir(dstype=\"all\")[['owner', 'datastore_name', 'object_count']]","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:42+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_536474475","id":"20200915-183831_441621852","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:43+0000","dateFinished":"2020-09-15T20:19:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6101","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"     owner datastore_name  object_count\n0  OMLUSER   ds_iris_data             1\n1  OMLUSER      ds_pydata             3\n2  OMLUSER     ds_pymodel             2\n"}]}},{"text":"%md\n\nWe can then show datastores to which other users have been granted the read privilege.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:43+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_951478721","id":"20200915-183831_1274287109","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:43+0000","dateFinished":"2020-09-15T20:19:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6102","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>We can then show datastores to which other users have been granted the read privilege.</p>\n"}]}},{"text":"%python\n\noml.ds.dir(dstype=\"grant\")","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:43+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_432191071","id":"20200915-183831_563952902","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:44+0000","dateFinished":"2020-09-15T20:19:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6103","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"  datastore_name grantee\n0     ds_pymodel  PUBLIC\n"}]}},{"text":"%md\n\nOr, show datastores to which this user has been granted the read privilege (there currently are none).\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:44+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-322038821","id":"20200915-183831_2004412780","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:44+0000","dateFinished":"2020-09-15T20:19:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6104","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Or, show datastores to which this user has been granted the read privilege (there currently are none).</p>\n"}]}},{"text":"%python\n\noml.ds.dir(dstype=\"granted\")","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:44+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-899819053","id":"20200915-183831_2043552418","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:45+0000","dateFinished":"2020-09-15T20:19:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6105","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Empty DataFrame\nColumns: [owner, datastore_name, object_count, size, date, description]\nIndex: []\n"}]}},{"text":"%md\n\nOr, show datastores whose names match a pattern.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:45+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-127481808","id":"20200915-183831_309413282","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:45+0000","dateFinished":"2020-09-15T20:19:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6106","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Or, show datastores whose names match a pattern.</p>\n"}]}},{"text":"%python\n\noml.ds.dir(name='pydata', regex_match=True)[['datastore_name', 'object_count']]","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:45+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1524711830","id":"20200915-183831_1523331047","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:46+0000","dateFinished":"2020-09-15T20:19:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6107","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"  datastore_name  object_count\n0      ds_pydata             3\n"}]}},{"text":"%md\n## Describe contents of a datastore\n\nLet's describe the contents of the ds_pydata datastore. Notice that the three proxy objects are listed.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:46+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-1323128097","id":"20200915-183831_1783602779","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:46+0000","dateFinished":"2020-09-15T20:19:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6108","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Describe contents of a datastore</h2>\n<p>Let's describe the contents of the ds_pydata datastore. Notice that the three proxy objects are listed.</p>\n"}]}},{"text":"%python\n\noml.ds.describe(name='ds_pydata')","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:46+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_286575133","id":"20200915-183831_1654418050","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:47+0000","dateFinished":"2020-09-15T20:19:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6109","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"    object_name                        class  size  length  row_count  col_count\n0          iris  pandas.core.frame.DataFrame  5987     150        150          5\n1    oml_boston                oml.DataFrame  1032     506        506         14\n2  oml_diabetes                oml.DataFrame   922     442        442         11\n"}]}},{"text":"%md\n## User privileges on a datastore\n\nRevoke the read privilege from every user, and again show datastores to which read privilege has been granted. The result is empty.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:47+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1830189476","id":"20200915-183831_2061008678","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:47+0000","dateFinished":"2020-09-15T20:19:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6110","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>User privileges on a datastore</h2>\n<p>Revoke the read privilege from every user, and again show datastores to which read privilege has been granted. The result is empty.</p>\n"}]}},{"text":"%python\n\noml.revoke(name=\"ds_pymodel\", typ=\"datastore\", user=None)\n\noml.ds.dir(dstype=\"grant\")","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:47+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-740590880","id":"20200915-183831_1095812237","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:48+0000","dateFinished":"2020-09-15T20:19:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6111","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Empty DataFrame\nColumns: [datastore_name, grantee]\nIndex: []\n"}]}},{"text":"%md\n\nGrant the read privilege to the user OMLUSER2. Note that OMLUSER2 does not exist and this example is for illustrative purposes only.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:48+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1334804893","id":"20200915-183831_1467688890","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:48+0000","dateFinished":"2020-09-15T20:19:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6112","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Grant the read privilege to the user OMLUSER2. Note that OMLUSER2 does not exist and this example is for illustrative purposes only.</p>\n"}]}},{"text":"%python\n\noml.grant(name=\"ds_pymodel\", typ=\"datastore\", user=\"OMLUSER2\")\n\noml.ds.dir(dstype=\"grant\")","user":"OMLUSER","dateUpdated":"2020-09-15T20:15:22+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-158566069","id":"20200915-183831_1454546861","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:11:00+0000","dateFinished":"2020-09-15T20:11:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6113","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"  datastore_name   grantee\n0     ds_pymodel  OMLUSER2\n"}]}},{"text":"%md\n## Delete datastore content\n\nDelete some objects from the datastore. Delete a datastore. Delete all datastores whose names match a pattern. Show the existing datastores again.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:48+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-479510625","id":"20200915-183831_1873476370","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:49+0000","dateFinished":"2020-09-15T20:19:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6114","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Delete datastore content</h2>\n<p>Delete some objects from the datastore. Delete a datastore. Delete all datastores whose names match a pattern. Show the existing datastores again.</p>\n"}]}},{"text":"%python\n\noml.ds.delete(name=\"ds_pydata\", objs=[\"iris\", \"oml_boston\"])\n\noml.ds.delete(name=\"ds_pydata\")\n\noml.ds.delete(name=\"_pymodel\", regex_match=True)\n\noml.ds.dir()","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:49+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-360167490","id":"20200915-183831_681127622","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:49+0000","dateFinished":"2020-09-15T20:19:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6115","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"  datastore_name  object_count  size                date   description\n0   ds_iris_data             1  5987 2020-09-15 20:19:31  iris dataset\n"}]}},{"text":"%md\n\n# Python Script Repository\n\nTo illustrate using the Python Script Repository, we first define a function ***build_lm1*** that will fit a regression model. With this function, we create a script named \"MyLM_function\". OML4Py stores named user-defined functions -- the scripts -- in the repository.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:50+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-810060189","id":"20200915-183831_642882200","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:50+0000","dateFinished":"2020-09-15T20:19:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6116","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Python Script Repository</h1>\n<p>To illustrate using the Python Script Repository, we first define a function <strong><em>build_lm1</em></strong> that will fit a regression model. With this function, we create a script named &ldquo;MyLM_function&rdquo;. OML4Py stores named user-defined functions &ndash; the scripts &ndash; in the repository.</p>\n"}]}},{"text":"%python \n\niris = datasets.load_iris()\nx = pd.DataFrame(iris.data, columns = ['SEPAL_LENGTH','SEPAL_WIDTH',\n                                       'PETAL_LENGTH','PETAL_WIDTH'])\ny = pd.DataFrame(list(map(lambda x: {0: 'setosa', 1: 'versicolor', 2:'virginica'}[x], iris.target)), \n                 columns = ['SPECIES'])\nIRIS2 = oml.push(pd.concat([x, y], axis=1))","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:50+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-1847488964","id":"20200915-183831_1692153352","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:50+0000","dateFinished":"2020-09-15T20:19:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6117","results":{"code":"SUCCESS","msg":[]}},{"title":"Define function object","text":"%python\n\ndef build_lm1(dat):\n    from sklearn import linear_model\n    regr = linear_model.LinearRegression()\n    import pandas as pd\n    dat = pd.get_dummies(dat, drop_first=True)\n    X = dat[[\"SEPAL_WIDTH\", \"PETAL_LENGTH\", \"PETAL_WIDTH\", \n             \"SPECIES_versicolor\", \"SPECIES_virginica\"]]\n    y = dat[[\"SEPAL_LENGTH\"]]\n    regr.fit(X, y)\n    return regr","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:51+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_478472972","id":"20200915-183831_1553343466","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:51+0000","dateFinished":"2020-09-15T20:19:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6118","results":{"code":"SUCCESS","msg":[]}},{"title":"Define function as string","text":"%python\n\nbuild_lm2 = \"\"\"def build_lm2(dat):\n    from sklearn import linear_model\n    regr = linear_model.LinearRegression()\n    import pandas as pd\n    dat = pd.get_dummies(dat, drop_first=True)\n    X = dat[[\"SEPAL_WIDTH\", \"PETAL_LENGTH\", \"PETAL_WIDTH\", \n             \"SPECIES_versicolor\", \"SPECIES_virginica\"]]\n    y = dat[[\"SEPAL_LENGTH\"]]\n    regr.fit(X, y)\n    return regr\"\"\"","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:51+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_2093631157","id":"20200915-183831_1033427360","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:51+0000","dateFinished":"2020-09-15T20:19:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6119","results":{"code":"SUCCESS","msg":[]}},{"title":"View function string","text":"%python\nprint(build_lm2)","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:52+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1574961107","id":"20200915-183831_389485009","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:52+0000","dateFinished":"2020-09-15T20:19:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6120","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"def build_lm2(dat):\n    from sklearn import linear_model\n    regr = linear_model.LinearRegression()\n    import pandas as pd\n    dat = pd.get_dummies(dat, drop_first=True)\n    X = dat[[\"SEPAL_WIDTH\", \"PETAL_LENGTH\", \"PETAL_WIDTH\", \n             \"SPECIES_versicolor\", \"SPECIES_virginica\"]]\n    y = dat[[\"SEPAL_LENGTH\"]]\n    regr.fit(X, y)\n    return regr\n"}]}},{"text":"%md\n## Create scripts in repository\n\nCreate ***MyLM_function2*** using function string. Note, that one cannot provide the function object when storing a user-defined function. ","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:52+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_181517580","id":"20200915-183831_316545353","dateCreated":"2020-06-08T01:58:57+0000","dateStarted":"2020-09-15T20:19:52+0000","dateFinished":"2020-09-15T20:19:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6121","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Create scripts in repository</h2>\n<p>Create <strong><em>MyLM_function2</em></strong> using function string. Note, that one cannot provide the function object when storing a user-defined function.</p>\n"}]}},{"text":"%python\ntry:\n    oml.script.drop(\"MyLM_function2\")\nexcept: \n    pass\noml.script.create(\"MyLM_function2\", func=build_lm2, overwrite=True)","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:52+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"title":false},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_283041244","id":"20200915-183831_2142953867","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:53+0000","dateFinished":"2020-09-15T20:19:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6122","results":{"code":"SUCCESS","msg":[]}},{"text":"%md\n\nList the scripts available only to the current user.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:53+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1097790289","id":"20200915-183831_76837381","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:53+0000","dateFinished":"2020-09-15T20:19:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6123","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>List the scripts available only to the current user.</p>\n"}]}},{"text":"%python\n\noml.script.dir(sctype='user')","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:53+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-1342236019","id":"20200915-183831_721568479","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:54+0000","dateFinished":"2020-09-15T20:19:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6124","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"             name                                             script description                date\n0  MyLM_function2  def build_lm2(dat):\\n    from sklearn import l...        None 2020-09-15 20:19:53\n1   RandomRedDots  def RandomRedDots (num_dots_1=100, num_dots_2=...        None 2020-09-15 19:35:15\n"}]}},{"text":"%md\n\nGrant the read privilege to the ***MyLM_function1*** script to the user OMLUSER2.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:54+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1579791547","id":"20200915-183831_1240732327","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:54+0000","dateFinished":"2020-09-15T20:19:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6125","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Grant the read privilege to the <strong><em>MyLM_function1</em></strong> script to the user OMLUSER2.</p>\n"}]}},{"text":"%python\n\noml.grant(name=\"MyLM_function2\", typ=\"pyqscript\", user=\"OMLUSER2\")","user":"OMLUSER","dateUpdated":"2020-09-15T20:16:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-1580232239","id":"20200915-183831_1634342059","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:11:14+0000","dateFinished":"2020-09-15T20:11:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6126","results":{"code":"SUCCESS","msg":[]}},{"text":"%md\n\nList the scripts to which read privilege has been granted.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:54+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_302876268","id":"20200915-183831_1179207385","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:55+0000","dateFinished":"2020-09-15T20:19:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6127","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>List the scripts to which read privilege has been granted.</p>\n"}]}},{"text":"%python\n\noml.script.dir(sctype=\"grant\")","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:55+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1842208301","id":"20200915-183831_2145706101","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:55+0000","dateFinished":"2020-09-15T20:19:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6128","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Empty DataFrame\nColumns: [name, grantee]\nIndex: []\n"}]}},{"text":"%python\n\nimport inspect\n\nMyLM_function2 = oml.script.load(\"MyLM_function2\")\nMyLM_function2.get_source()\nprint(str(MyLM_function2))\nprint(MyLM_function2.get_source().read())\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:55+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/undefined"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1215415052","id":"20200915-183831_376222724","dateCreated":"2020-07-08T15:54:36+0000","dateStarted":"2020-09-15T20:19:56+0000","dateFinished":"2020-09-15T20:19:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6129","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<oml.script.script.Callable object at 0x7f36970266a0>\ndef build_lm2(dat):\n    from sklearn import linear_model\n    regr = linear_model.LinearRegression()\n    import pandas as pd\n    dat = pd.get_dummies(dat, drop_first=True)\n    X = dat[[\"SEPAL_WIDTH\", \"PETAL_LENGTH\", \"PETAL_WIDTH\", \n             \"SPECIES_versicolor\", \"SPECIES_virginica\"]]\n    y = dat[[\"SEPAL_LENGTH\"]]\n    regr.fit(X, y)\n    return regr\n"}]}},{"text":"%md\n\nRevoke the read privilege to the MyLM_function script from the user OMLUSER2.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:56+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1853438105","id":"20200915-183831_663893294","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:56+0000","dateFinished":"2020-09-15T20:19:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6130","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Revoke the read privilege to the MyLM_function script from the user OMLUSER2.</p>\n"}]}},{"text":"%python\n\noml.revoke(name=\"MyLM_function2\", typ=\"pyqscript\", user=\"OMLUSER2\")","user":"OMLUSER","dateUpdated":"2020-09-15T20:18:16+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-1346562385","id":"20200915-183831_736215179","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:18:07+0000","dateFinished":"2020-09-15T20:18:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6131","results":{"code":"SUCCESS","msg":[]}},{"text":"%md\n## Invoke function using embedded Python execution\n\nWe'll use embedded Python execution to invoke this function. First we ***sync*** the IRIS table to get a proxy object, then use ***table_apply***, providing the proxy object, function name and the output type. We'll view the result and then pull the coefficients.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:56+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_87747959","id":"20200915-183831_1943956170","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:57+0000","dateFinished":"2020-09-15T20:19:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6132","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Invoke function using embedded Python execution</h2>\n<p>We'll use embedded Python execution to invoke this function. First we <strong><em>sync</em></strong> the IRIS table to get a proxy object, then use <strong><em>table_apply</em></strong>, providing the proxy object, function name and the output type. We'll view the result and then pull the coefficients.</p>\n"}]}},{"title":"Use table_apply to provide full IRIS data set to function","text":"%python\n\nres = oml.table_apply(IRIS, func=\"MyLM_function2\", oml_input_type=\"pandas.DataFrame\")\nres","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:57+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_325472943","id":"20200915-183831_6368289","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:57+0000","dateFinished":"2020-09-15T20:19:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6133","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)\n"}]}},{"title":"Show model coefficients","text":"%python\n\nres.coef_","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:57+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_312199454","id":"20200915-183831_921453126","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:58+0000","dateFinished":"2020-09-15T20:19:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6134","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"array([[ 0.49588894,  0.82924391, -0.31515517, -0.72356196, -1.02349781]])\n"}]}},{"text":"%md\n## Storing functions as 'global'\n\nLet's define and save another function ***build_lm3***, but this time as global. We'll then invoke that function to build another model.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:58+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1542307161","id":"20200915-183831_321665416","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:58+0000","dateFinished":"2020-09-15T20:19:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6135","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Storing functions as 'global'</h2>\n<p>Let's define and save another function <strong><em>build_lm3</em></strong>, but this time as global. We'll then invoke that function to build another model.</p>\n"}]}},{"text":"%python\n\nbuild_lm3 = \"\"\"def build_lm3(dat):\n  from sklearn import linear_model\n  regr = linear_model.LinearRegression()\n  X = dat[[\"PETAL_WIDTH\"]]\n  y = dat[[\"PETAL_LENGTH\"]]\n  regr.fit(X, y)\n  return regr\"\"\"","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:58+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-1298713135","id":"20200915-183831_329550109","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:58+0000","dateFinished":"2020-09-15T20:19:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6136","results":{"code":"SUCCESS","msg":[]}},{"text":"%python\n\noml.script.create(\"MyGlobalLM_function\", func=build_lm3, is_global=True, overwrite=True)","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:59+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1542956961","id":"20200915-183831_439201644","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:59+0000","dateFinished":"2020-09-15T20:19:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6137","results":{"code":"SUCCESS","msg":[]}},{"text":"%python\n\nres = oml.table_apply(IRIS, func=\"MyGlobalLM_function\", \n                      oml_input_type=\"pandas.DataFrame\")\nres","user":"OMLUSER","dateUpdated":"2020-09-15T20:19:59+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-1679159780","id":"20200915-183831_1317482525","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:19:59+0000","dateFinished":"2020-09-15T20:19:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6138","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)\n"}]}},{"text":"%md\n\nList the scripts in the script repository available to the current user only.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:20:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_19448639","id":"20200915-183831_1008054332","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:20:00+0000","dateFinished":"2020-09-15T20:20:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6139","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>List the scripts in the script repository available to the current user only.</p>\n"}]}},{"text":"%python\n\noml.script.dir()","user":"OMLUSER","dateUpdated":"2020-09-15T20:20:00+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_2055909873","id":"20200915-183831_198060738","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:20:00+0000","dateFinished":"2020-09-15T20:20:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6140","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"             name                                             script description                date\n0  MyLM_function2  def build_lm2(dat):\\n    from sklearn import l...        None 2020-09-15 20:19:53\n1   RandomRedDots  def RandomRedDots (num_dots_1=100, num_dots_2=...        None 2020-09-15 19:35:15\n"}]}},{"text":"%md\n\nList all of the scripts available to the current user.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:20:01+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-60916269","id":"20200915-183831_2087690776","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:20:01+0000","dateFinished":"2020-09-15T20:20:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6141","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>List all of the scripts available to the current user.</p>\n"}]}},{"text":"%python\n\noml.script.dir(sctype='all')","user":"OMLUSER","dateUpdated":"2020-09-15T20:20:01+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_847809011","id":"20200915-183831_194998864","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:20:01+0000","dateFinished":"2020-09-15T20:20:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6142","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"     owner                 name                                             script description                date\n0  OMLUSER       MyLM_function2  def build_lm2(dat):\\n    from sklearn import l...        None 2020-09-15 20:19:53\n1  OMLUSER        RandomRedDots  def RandomRedDots (num_dots_1=100, num_dots_2=...        None 2020-09-15 19:35:15\n2   PYQSYS  MyGlobalLM_function  def build_lm3(dat):\\n  from sklearn import lin...        None 2020-09-15 20:19:59\n3   PYQSYS        RandomRedDots  def RandomRedDots (num_dots_1=100, num_dots_2=...        None 2020-09-14 18:38:57\n4   PYQSYS  compute_random_mean  def compute_random_mean(index):\\n    import nu...        None 2020-09-14 20:23:41\n5   PYQSYS          group_count  def group_count(dat):\\n  import oml\\n  import ...        None 2020-09-14 21:04:28\n6   PYQSYS           my_predict  def my_predict(dat):\\n    import pandas as pd\\...        None 2020-09-14 18:38:51\n7   PYQSYS              pred_lm  def pred_lm(dat):\\n    from sklearn import lin...        None 2020-09-14 18:38:54\n"}]}},{"text":"%md\n\nList the scripts available to all users.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:20:02+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-784852461","id":"20200915-183831_437954383","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:20:02+0000","dateFinished":"2020-09-15T20:20:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6143","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>List the scripts available to all users.</p>\n"}]}},{"text":"%python\n\noml.script.dir(sctype='global')","user":"OMLUSER","dateUpdated":"2020-09-15T20:20:02+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-1165614122","id":"20200915-183831_1618482932","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:20:02+0000","dateFinished":"2020-09-15T20:20:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6144","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"                  name                                             script description                date\n0  MyGlobalLM_function  def build_lm3(dat):\\n  from sklearn import lin...        None 2020-09-15 20:19:59\n1        RandomRedDots  def RandomRedDots (num_dots_1=100, num_dots_2=...        None 2020-09-14 18:38:57\n2  compute_random_mean  def compute_random_mean(index):\\n    import nu...        None 2020-09-14 20:23:41\n3          group_count  def group_count(dat):\\n  import oml\\n  import ...        None 2020-09-14 21:04:28\n4           my_predict  def my_predict(dat):\\n    import pandas as pd\\...        None 2020-09-14 18:38:51\n5              pred_lm  def pred_lm(dat):\\n    from sklearn import lin...        None 2020-09-14 18:38:54\n"}]}},{"text":"%md\n## Loading functions from the script repository\n\nLoad the MyLM_function1 and MyGlobalLM_function scripts, and pull the models to the local Python session. For MYLM, build the model on the IRIS data set and pull the coefficients. For GlobalMYLM, build and display the model.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:20:03+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-1098289655","id":"20200915-183831_1627785089","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:20:03+0000","dateFinished":"2020-09-15T20:20:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6145","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Loading functions from the script repository</h2>\n<p>Load the MyLM_function1 and MyGlobalLM_function scripts, and pull the models to the local Python session. For MYLM, build the model on the IRIS data set and pull the coefficients. For GlobalMYLM, build and display the model.</p>\n"}]}},{"text":"%python\n\nMYLM = oml.script.load(name=\"MyLM_function2\")\nGlobalMYLM = oml.script.load(name=\"MyGlobalLM_function\")\n\nprint(\"Coefficients: \", MYLM(IRIS.pull()).coef_)\nprint(\"Model: \", GlobalMYLM(IRIS.pull()))","user":"OMLUSER","dateUpdated":"2020-09-15T20:20:03+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_343294910","id":"20200915-183831_293336067","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:20:03+0000","dateFinished":"2020-09-15T20:20:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6146","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Coefficients:  [[ 0.49588894  0.82924391 -0.31515517 -0.72356196 -1.02349781]]\nModel:  LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)\n"}]}},{"text":"%md\n\nList the available scripts.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:20:04+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-545937944","id":"20200915-183831_1578371516","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:20:04+0000","dateFinished":"2020-09-15T20:20:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6147","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>List the available scripts.</p>\n"}]}},{"text":"%python\n\noml.script.dir(sctype=\"all\")","user":"OMLUSER","dateUpdated":"2020-09-15T20:20:04+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_1447164411","id":"20200915-183831_2122021692","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:20:04+0000","dateFinished":"2020-09-15T20:20:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6148","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"     owner                 name                                             script description                date\n0  OMLUSER       MyLM_function2  def build_lm2(dat):\\n    from sklearn import l...        None 2020-09-15 20:19:53\n1  OMLUSER        RandomRedDots  def RandomRedDots (num_dots_1=100, num_dots_2=...        None 2020-09-15 19:35:15\n2   PYQSYS  MyGlobalLM_function  def build_lm3(dat):\\n  from sklearn import lin...        None 2020-09-15 20:19:59\n3   PYQSYS        RandomRedDots  def RandomRedDots (num_dots_1=100, num_dots_2=...        None 2020-09-14 18:38:57\n4   PYQSYS  compute_random_mean  def compute_random_mean(index):\\n    import nu...        None 2020-09-14 20:23:41\n5   PYQSYS          group_count  def group_count(dat):\\n  import oml\\n  import ...        None 2020-09-14 21:04:28\n6   PYQSYS           my_predict  def my_predict(dat):\\n    import pandas as pd\\...        None 2020-09-14 18:38:51\n7   PYQSYS              pred_lm  def pred_lm(dat):\\n    from sklearn import lin...        None 2020-09-14 18:38:54\n"}]}},{"text":"%md\n## Drop scripts from repository\n\nDrop one of the private scripts.\n\nDrop the global script.\n\nList the available scripts again.\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:20:05+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_553729285","id":"20200915-183831_789598589","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:20:05+0000","dateFinished":"2020-09-15T20:20:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6149","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Drop scripts from repository</h2>\n<p>Drop one of the private scripts.</p>\n<p>Drop the global script.</p>\n<p>List the available scripts again.</p>\n"}]}},{"text":"%python\n\noml.script.drop(\"MyLM_function2\")\noml.script.drop(\"MyGlobalLM_function\", is_global=True)\noml.script.dir(sctype=\"all\")","user":"OMLUSER","dateUpdated":"2020-09-15T20:20:05+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-1223896669","id":"20200915-183831_1627747184","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:20:05+0000","dateFinished":"2020-09-15T20:20:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6150","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"     owner                 name                                             script description                date\n0  OMLUSER        RandomRedDots  def RandomRedDots (num_dots_1=100, num_dots_2=...        None 2020-09-15 19:35:15\n1   PYQSYS        RandomRedDots  def RandomRedDots (num_dots_1=100, num_dots_2=...        None 2020-09-14 18:38:57\n2   PYQSYS  compute_random_mean  def compute_random_mean(index):\\n    import nu...        None 2020-09-14 20:23:41\n3   PYQSYS          group_count  def group_count(dat):\\n  import oml\\n  import ...        None 2020-09-14 21:04:28\n4   PYQSYS           my_predict  def my_predict(dat):\\n    import pandas as pd\\...        None 2020-09-14 18:38:51\n5   PYQSYS              pred_lm  def pred_lm(dat):\\n    from sklearn import lin...        None 2020-09-14 18:38:54\n"}]}},{"text":"%md\n\n# End of Script\n","user":"OMLUSER","dateUpdated":"2020-09-15T20:20:05+0000","config":{"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"results":{},"enabled":true,"editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600195111132_-888726795","id":"20200915-183831_530763525","dateCreated":"2020-02-19T23:52:25+0000","dateStarted":"2020-09-15T20:20:06+0000","dateFinished":"2020-09-15T20:20:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:6151","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>End of Script</h1>\n"}]}}],"name":"OML4Py -3- Datastore and Script Repository","id":"468035","noteParams":{},"noteForms":{},"angularObjects":{"MDW381939C745:shared_process":[],"ORACED2F65282:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}