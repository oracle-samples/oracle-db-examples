{"paragraphs":[{"text":"%md\n\n# OMP4Py REST API for invoking embedded Python execution\n\nOML4Py contains a REST API to run user-defined Python functions saved in the script repository. The REST API is used when separation between the client and the Database server is beneficial. For example, REST APIs can be called from a web development application, improving the portability of the interface to other types of platforms, increasing project scalability, and allowing components to evolve independently. Use the OML4Py REST API to build, train, deploy, and manage scripts.\n\nTo run a script, it must reside in the OML4Py script repository. An Oracle Machine Learning cloud service account ***username*** and ***password*** must be provided for authentication.\n\n### **REST API Workflow**\n\nIn this workflow, we highlight a few of the features of the REST API:\n\n- authenticating the Database user and obtaining a token\n- loading a database table into the Database\n- saving scripts in the Database Python script repository\n- executing the saved Python scripts from the REST API using both synchronous and asynchronous modes\n\n\nCopyright (c) 2020 Oracle Corporation                             \n###### [The Universal Permissive License (UPL), Version 1.0](https://oss.oracle.com/licenses/upl/)\n---","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:00+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","fontSize":9,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>OMP4Py REST API for invoking embedded Python execution</h1>\n<p>OML4Py contains a REST API to run user-defined Python functions saved in the script repository. The REST API is used when separation between the client and the Database server is beneficial. For example, REST APIs can be called from a web development application, improving the portability of the interface to other types of platforms, increasing project scalability, and allowing components to evolve independently. Use the OML4Py REST API to build, train, deploy, and manage scripts.</p>\n<p>To run a script, it must reside in the OML4Py script repository. An Oracle Machine Learning cloud service account <strong><em>username</em></strong> and <strong><em>password</em></strong> must be provided for authentication.</p>\n<h3><strong>REST API Workflow</strong></h3>\n<p>In this workflow, we highlight a few of the features of the REST API:</p>\n<ul>\n<li>authenticating the Database user and obtaining a token</li>\n<li>loading a database table into the Database</li>\n<li>saving scripts in the Database Python script repository</li>\n<li>executing the saved Python scripts from the REST API using both synchronous and asynchronous modes</li>\n</ul>\n<p>Copyright (c) 2020 Oracle Corporation</p>\n<h6><a href=\"https://oss.oracle.com/licenses/upl/\">The Universal Permissive License (UPL), Version 1.0</a></h6>\n<hr />\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-327014901","id":"20200915-175632_1463544352","dateCreated":"2020-06-10T19:04:55+0000","dateStarted":"2021-01-06T18:02:01+0000","dateFinished":"2021-01-06T18:02:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"focus":true,"$$hashKey":"object:22"},{"text":"%md\n\n### **REST API Authentication**\n\nTo authenticate and obtain a token, use ***cURL*** with the ***-d*** option to pass the credentials for your Oracle Machine Learning account against the Oracle Machine Learning user management cloud service REST endpoint */oauth2/v1/token*. \n\n    $ curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"grant_type\":\"password\", \"username\":\"'<yourusername>'\", \n    \"password\":\"' <yourpassword>'\"}' \"<oml-cloud-service-url>/omlusers/tenants/<tenant_name>/databases/<database_name>/api/oauth2/v1/token\"\n    \nwhere   \n\n* _-X POST_ specifies to use a POST request when communicating with the HTTP server\n* _--header_ defines the headers required for the request (application/json)\n* _-d <data>_ sends the username and password authentication credentials as data in a POST request to the HTTP server\n* _Content-Type_ and _Accept_ define the response format (JSON)\n* _yourusername_ is the user name of a Oracle Machine Learning user with the default OML_DEVELOPER role\n* _yourpassword_ is the password for the user name\n* _oml-cloud-service-url_ is the REST server portion of the Oracle Machine Learning user management cloud service instance\n* _tenant_name_ is the name of the tenancy\n* _database_name_ is the target database\n\nFor example, Oracle Machine Learning user ***OML_USER*** with password ***OML_PASSWD*** and cloud service url ***https://123.4.56.78*** on ***port 8080***, tenant ***MYTENANT*** and Database ***MYADW*** authenticates and obtain a REST token using the following approach:\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:03+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{"oml_server":""},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3><strong>REST API Authentication</strong></h3>\n<p>To authenticate and obtain a token, use <strong><em>cURL</em></strong> with the <strong><em>-d</em></strong> option to pass the credentials for your Oracle Machine Learning account against the Oracle Machine Learning user management cloud service REST endpoint <em>/oauth2/v1/token</em>.</p>\n<pre><code>$ curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"grant_type\":\"password\", \"username\":\"'&lt;yourusername&gt;'\", \n\"password\":\"' &lt;yourpassword&gt;'\"}' \"&lt;oml-cloud-service-url&gt;/omlusers/tenants/&lt;tenant_name&gt;/databases/&lt;database_name&gt;/api/oauth2/v1/token\"\n</code></pre>\n<p>where</p>\n<ul>\n<li><em>-X POST</em> specifies to use a POST request when communicating with the HTTP server</li>\n<li><em>&ndash;header</em> defines the headers required for the request (application/json)</li>\n<li><em>-d <data></em> sends the username and password authentication credentials as data in a POST request to the HTTP server</li>\n<li><em>Content-Type</em> and <em>Accept</em> define the response format (JSON)</li>\n<li><em>yourusername</em> is the user name of a Oracle Machine Learning user with the default OML_DEVELOPER role</li>\n<li><em>yourpassword</em> is the password for the user name</li>\n<li><em>oml-cloud-service-url</em> is the REST server portion of the Oracle Machine Learning user management cloud service instance</li>\n<li><em>tenant_name</em> is the name of the tenancy</li>\n<li><em>database_name</em> is the target database</li>\n</ul>\n<p>For example, Oracle Machine Learning user <strong><em>OML_USER</em></strong> with password <strong><em>OML_PASSWD</em></strong> and cloud service url <strong><em>https://123.4.56.78</em></strong> on <strong><em>port 8080</em></strong>, tenant <strong><em>MYTENANT</em></strong> and Database <strong><em>MYADW</em></strong> authenticates and obtain a REST token using the following approach:</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-138224601","id":"20200915-175632_790029287","dateCreated":"2020-06-14T18:38:33+0000","dateStarted":"2021-01-06T18:02:04+0000","dateFinished":"2021-01-06T18:02:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:23"},{"text":"%md\n\nExport the OML server URL to environment variable *oml_server* and exchange Database credentials for an access token.\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:04+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Export the OML server URL to environment variable <em>oml_server</em> and exchange Database credentials for an access token.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-1424951432","id":"20200915-175632_803207151","dateCreated":"2020-08-11T23:07:01+0000","dateStarted":"2021-01-06T18:02:04+0000","dateFinished":"2021-01-06T18:02:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:24"},{"text":"\n$ export oml_server=https://123.4.56.78:8080\n$ export tenant_name=MYTENANT\n$ export database_name=MYADW\n$ export username=OML_USER\n$ export password=OML_PASSWD\n\ncurl -i -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"grant_type\":\"password\", \"username\":\"'${username}'\", \"password\":\"'${password}'\"}' \"${oml_server}/omlusers/tenants/${tenant_name}/databases/${database_name}/api/oauth2/v1/token\"\n\n  HTTP/1.1 200 OK\n  Date: Mon, 08 Jun 2020 21:59:16 GMT\n  Content-Type: application/json\n  Content-Length: 1027\n  Connection: keep-alive\n  Cache-Control: no-cache, no-store, private\n  X-Frame-Options: SAMEORIGIN\n  X-XSS-Protection: 1;mode=block\n  Strict-Transport-Security: max-age=31536000; includeSubDomains\n  X-Content-Type-Options: nosniff\n\n  {\"accessToken\":\"eyJhbGciOiJ...\",\"expiresIn\":3600,\"tokenType\":\"Bearer\"}\n\n","user":"CHARLIE","dateUpdated":"2020-09-01T16:57:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":false,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600192592546_206193180","id":"20200915-175632_633541319","dateCreated":"2020-08-11T23:04:41+0000","status":"READY","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:25"},{"text":"%md \n\nCopy the \"accessToken\" field from the response and assign it to variable token, surrounded by single quotes.\nA token has a lifecycle of 3600 seconds, or 1 hour, and it can be refreshed for up to 8 hours.","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Copy the &ldquo;accessToken&rdquo; field from the response and assign it to variable token, surrounded by single quotes.\n<br  />A token has a lifecycle of 3600 seconds, or 1 hour, and it can be refreshed for up to 8 hours.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_1109092527","id":"20200915-175632_757175989","dateCreated":"2020-08-11T23:07:51+0000","dateStarted":"2021-01-06T18:02:05+0000","dateFinished":"2021-01-06T18:02:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:26"},{"text":"$ export token='eyJhbGciOiJ...'","user":"CHARLIE","dateUpdated":"2020-09-01T16:57:48+0000","config":{"colWidth":12,"fontSize":9,"enabled":false,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600192592546_-1034377777","id":"20200915-175632_892358957","dateCreated":"2020-08-11T23:08:13+0000","status":"READY","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:27"},{"text":"%md\n\n### **HTTP Status Codes**\n\nThe REST API uses the HTTP response message to inform the status of the returned results. \n\n* **200** *OK* - The request ran successfully and the response has content.\n* **201** *Created* - The resource was successfully created. The response contains a location header that points to the new resource.\n* **202** *Accepted* - The request has accepted for processing, but the processing has not been completed. This response applies to a resource that supports an asynchronous process.\n* **302** *Found* - The request has finished processing and the response contains a location header that points to the new resource.\n* **400** *Bad Request* - The request could not be processed because it contains missing or invalid information, such as a validation error on a parameter or a missing required value.\n* **401** *Unauthorized* - The request lacks valid authentication credentials for the target resource.\n* **500** *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.\n\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3><strong>HTTP Status Codes</strong></h3>\n<p>The REST API uses the HTTP response message to inform the status of the returned results.</p>\n<ul>\n<li><strong>200</strong> <em>OK</em> - The request ran successfully and the response has content.</li>\n<li><strong>201</strong> <em>Created</em> - The resource was successfully created. The response contains a location header that points to the new resource.</li>\n<li><strong>202</strong> <em>Accepted</em> - The request has accepted for processing, but the processing has not been completed. This response applies to a resource that supports an asynchronous process.</li>\n<li><strong>302</strong> <em>Found</em> - The request has finished processing and the response contains a location header that points to the new resource.</li>\n<li><strong>400</strong> <em>Bad Request</em> - The request could not be processed because it contains missing or invalid information, such as a validation error on a parameter or a missing required value.</li>\n<li><strong>401</strong> <em>Unauthorized</em> - The request lacks valid authentication credentials for the target resource.</li>\n<li><strong>500</strong> <em>Internal Server Error</em> - The server encountered an unexpected condition that prevented it from fulfilling the request.</li>\n</ul>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-2138322653","id":"20200915-175632_1702930667","dateCreated":"2020-06-15T20:11:02+0000","dateStarted":"2021-01-06T18:02:06+0000","dateFinished":"2021-01-06T18:02:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:28"},{"text":"%md\n\n### **Create an OML Dataframe and load it to an Oracle Database Table**\n\nIn this example, we load the **iris** data in Python and load the Dataframe into Oracle Database using the ***create*** function. \n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:06+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3><strong>Create an OML Dataframe and load it to an Oracle Database Table</strong></h3>\n<p>In this example, we load the <strong>iris</strong> data in Python and load the Dataframe into Oracle Database using the <strong><em>create</em></strong> function.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-2096153479","id":"20200915-175632_1491655606","dateCreated":"2020-06-14T19:55:10+0000","dateStarted":"2021-01-06T18:02:06+0000","dateFinished":"2021-01-06T18:02:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:29"},{"text":"%python\n\nimport oml\nimport pandas as pd\n\nfrom sklearn import datasets\nfrom sklearn.datasets import load_iris\n\niris = datasets.load_iris()\nx = pd.DataFrame(iris.data, columns = ['SEPAL_LENGTH','SEPAL_WIDTH','PETAL_LENGTH','PETAL_WIDTH'])\ny = pd.DataFrame(list(map(lambda x: {0: 'setosa', 1: 'versicolor', 2:'virginica'}[x], iris.target)), columns = ['SPECIES'])\n\ntry:\n    oml.drop(table=\"IRIS\")\nexcept:\n    pass\n    \noml_iris = oml.create(pd.concat([x, y], axis=1), table = 'IRIS')\nindex = oml.DataFrame(oml_iris['SPECIES'])\nz.show(oml_iris)\n\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:06+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"SEPAL_LENGTH":"string","SEPAL_WIDTH":"string","PETAL_LENGTH":"string","PETAL_WIDTH":"string","SPECIES":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"SEPAL_LENGTH\tSEPAL_WIDTH\tPETAL_LENGTH\tPETAL_WIDTH\tSPECIES\n4.6\t3.6\t1.0\t0.2\tsetosa\n5.1\t2.5\t3.0\t1.1\tversicolor\n6.0\t2.2\t4.0\t1.0\tversicolor\n5.8\t2.6\t4.0\t1.2\tversicolor\n5.5\t2.3\t4.0\t1.3\tversicolor\n5.5\t2.5\t4.0\t1.3\tversicolor\n6.1\t2.8\t4.0\t1.3\tversicolor\n5.7\t2.5\t5.0\t2.0\tvirginica\n6.0\t2.2\t5.0\t1.5\tvirginica\n6.3\t2.5\t5.0\t1.9\tvirginica\n6.7\t3.0\t5.0\t1.7\tversicolor\n7.2\t3.2\t6.0\t1.8\tvirginica\n6.3\t3.3\t6.0\t2.5\tvirginica\n4.3\t3.0\t1.1\t0.1\tsetosa\n5.8\t4.0\t1.2\t0.2\tsetosa\n5.0\t3.2\t1.2\t0.2\tsetosa\n4.4\t3.0\t1.3\t0.2\tsetosa\n4.4\t3.2\t1.3\t0.2\tsetosa\n4.7\t3.2\t1.3\t0.2\tsetosa\n5.5\t3.5\t1.3\t0.2\tsetosa\n4.5\t2.3\t1.3\t0.3\tsetosa\n5.0\t3.5\t1.3\t0.3\tsetosa\n5.4\t3.9\t1.3\t0.4\tsetosa\n4.8\t3.0\t1.4\t0.1\tsetosa\n4.9\t3.6\t1.4\t0.1\tsetosa\n4.9\t3.0\t1.4\t0.2\tsetosa\n4.4\t2.9\t1.4\t0.2\tsetosa\n4.6\t3.2\t1.4\t0.2\tsetosa\n5.0\t3.3\t1.4\t0.2\tsetosa\n5.2\t3.4\t1.4\t0.2\tsetosa\n5.1\t3.5\t1.4\t0.2\tsetosa\n5.0\t3.6\t1.4\t0.2\tsetosa\n5.5\t4.2\t1.4\t0.2\tsetosa\n4.8\t3.0\t1.4\t0.3\tsetosa\n4.6\t3.4\t1.4\t0.3\tsetosa\n5.1\t3.5\t1.4\t0.3\tsetosa\n4.9\t3.1\t1.5\t0.1\tsetosa\n5.2\t4.1\t1.5\t0.1\tsetosa\n4.6\t3.1\t1.5\t0.2\tsetosa\n4.9\t3.1\t1.5\t0.2\tsetosa\n5.0\t3.4\t1.5\t0.2\tsetosa\n5.1\t3.4\t1.5\t0.2\tsetosa\n5.2\t3.5\t1.5\t0.2\tsetosa\n5.3\t3.7\t1.5\t0.2\tsetosa\n5.4\t3.7\t1.5\t0.2\tsetosa\n5.1\t3.8\t1.5\t0.3\tsetosa\n5.4\t3.4\t1.5\t0.4\tsetosa\n5.1\t3.7\t1.5\t0.4\tsetosa\n5.7\t4.4\t1.5\t0.4\tsetosa\n5.0\t3.0\t1.6\t0.2\tsetosa\n4.8\t3.1\t1.6\t0.2\tsetosa\n4.7\t3.2\t1.6\t0.2\tsetosa\n4.8\t3.4\t1.6\t0.2\tsetosa\n5.1\t3.8\t1.6\t0.2\tsetosa\n5.0\t3.4\t1.6\t0.4\tsetosa\n5.0\t3.5\t1.6\t0.6\tsetosa\n5.4\t3.4\t1.7\t0.2\tsetosa\n5.7\t3.8\t1.7\t0.3\tsetosa\n5.4\t3.9\t1.7\t0.4\tsetosa\n5.1\t3.3\t1.7\t0.5\tsetosa\n4.8\t3.4\t1.9\t0.2\tsetosa\n5.1\t3.8\t1.9\t0.4\tsetosa\n5.0\t2.3\t3.3\t1.0\tversicolor\n4.9\t2.4\t3.3\t1.0\tversicolor\n5.0\t2.0\t3.5\t1.0\tversicolor\n5.7\t2.6\t3.5\t1.0\tversicolor\n5.6\t2.9\t3.6\t1.3\tversicolor\n5.5\t2.4\t3.7\t1.0\tversicolor\n5.5\t2.4\t3.8\t1.1\tversicolor\n5.6\t2.5\t3.9\t1.1\tversicolor\n5.8\t2.7\t3.9\t1.2\tversicolor\n5.2\t2.7\t3.9\t1.4\tversicolor\n5.8\t2.7\t4.1\t1.0\tversicolor\n5.6\t3.0\t4.1\t1.3\tversicolor\n5.7\t2.8\t4.1\t1.3\tversicolor\n5.7\t3.0\t4.2\t1.2\tversicolor\n5.6\t2.7\t4.2\t1.3\tversicolor\n5.7\t2.9\t4.2\t1.3\tversicolor\n5.9\t3.0\t4.2\t1.5\tversicolor\n6.2\t2.9\t4.3\t1.3\tversicolor\n6.4\t2.9\t4.3\t1.3\tversicolor\n5.5\t2.6\t4.4\t1.2\tversicolor\n6.3\t2.3\t4.4\t1.3\tversicolor\n6.6\t3.0\t4.4\t1.4\tversicolor\n6.7\t3.1\t4.4\t1.4\tversicolor\n4.9\t2.5\t4.5\t1.7\tvirginica\n5.7\t2.8\t4.5\t1.3\tversicolor\n5.4\t3.0\t4.5\t1.5\tversicolor\n5.6\t3.0\t4.5\t1.5\tversicolor\n6.2\t2.2\t4.5\t1.5\tversicolor\n6.0\t2.9\t4.5\t1.5\tversicolor\n6.4\t3.2\t4.5\t1.5\tversicolor\n6.0\t3.4\t4.5\t1.6\tversicolor\n6.6\t2.9\t4.6\t1.3\tversicolor\n6.1\t3.0\t4.6\t1.4\tversicolor\n6.5\t2.8\t4.6\t1.5\tversicolor\n6.1\t2.8\t4.7\t1.2\tversicolor\n6.1\t2.9\t4.7\t1.4\tversicolor\n7.0\t3.2\t4.7\t1.4\tversicolor\n6.7\t3.1\t4.7\t1.5\tversicolor\n6.3\t3.3\t4.7\t1.6\tversicolor\n6.0\t3.0\t4.8\t1.8\tvirginica\n6.2\t2.8\t4.8\t1.8\tvirginica\n6.8\t2.8\t4.8\t1.4\tversicolor\n5.9\t3.2\t4.8\t1.8\tversicolor\n5.6\t2.8\t4.9\t2.0\tvirginica\n6.1\t3.0\t4.9\t1.8\tvirginica\n6.3\t2.7\t4.9\t1.8\tvirginica\n6.3\t2.5\t4.9\t1.5\tversicolor\n6.9\t3.1\t4.9\t1.5\tversicolor\n6.5\t3.2\t5.1\t2.0\tvirginica\n6.3\t2.8\t5.1\t1.5\tvirginica\n5.9\t3.0\t5.1\t1.8\tvirginica\n5.8\t2.7\t5.1\t1.9\tvirginica\n5.8\t2.7\t5.1\t1.9\tvirginica\n6.9\t3.1\t5.1\t2.3\tvirginica\n5.8\t2.8\t5.1\t2.4\tvirginica\n6.0\t2.7\t5.1\t1.6\tversicolor\n6.5\t3.0\t5.2\t2.0\tvirginica\n6.7\t3.0\t5.2\t2.3\tvirginica\n6.4\t2.7\t5.3\t1.9\tvirginica\n6.4\t3.2\t5.3\t2.3\tvirginica\n6.9\t3.1\t5.4\t2.1\tvirginica\n6.2\t3.4\t5.4\t2.3\tvirginica\n6.5\t3.0\t5.5\t1.8\tvirginica\n6.4\t3.1\t5.5\t1.8\tvirginica\n6.8\t3.0\t5.5\t2.1\tvirginica\n6.1\t2.6\t5.6\t1.4\tvirginica\n6.3\t2.9\t5.6\t1.8\tvirginica\n6.4\t2.8\t5.6\t2.1\tvirginica\n6.4\t2.8\t5.6\t2.2\tvirginica\n6.7\t3.1\t5.6\t2.4\tvirginica\n6.3\t3.4\t5.6\t2.4\tvirginica\n6.7\t3.3\t5.7\t2.1\tvirginica\n6.9\t3.2\t5.7\t2.3\tvirginica\n6.7\t3.3\t5.7\t2.5\tvirginica\n7.2\t3.0\t5.8\t1.6\tvirginica\n6.7\t2.5\t5.8\t1.8\tvirginica\n6.5\t3.0\t5.8\t2.2\tvirginica\n7.1\t3.0\t5.9\t2.1\tvirginica\n6.8\t3.2\t5.9\t2.3\tvirginica\n7.4\t2.8\t6.1\t1.9\tvirginica\n7.7\t3.0\t6.1\t2.3\tvirginica\n7.2\t3.6\t6.1\t2.5\tvirginica\n7.3\t2.9\t6.3\t1.8\tvirginica\n7.9\t3.8\t6.4\t2.0\tvirginica\n7.6\t3.0\t6.6\t2.1\tvirginica\n7.7\t2.8\t6.7\t2.0\tvirginica\n7.7\t3.8\t6.7\t2.2\tvirginica\n7.7\t2.6\t6.9\t2.3\tvirginica\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-1653711695","id":"20200915-175632_2044557856","dateCreated":"2020-06-14T19:56:19+0000","dateStarted":"2021-01-06T18:02:07+0000","dateFinished":"2021-01-06T18:02:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:30"},{"text":"%md\n\n### **Create a Python script and save it to the OML4Py Script Repository**\n\nIn this script, we return the counts for each category in the **SPECIES** column and return the results sorted by the **SEPAL_LENGTH** column using ***oml.group_apply***.\nNotice the value for ***group_count*** is a string, not a Python function object, however, the results are the same. The script is invoked from the Python interface, followed by the REST API.\n\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3><strong>Create a Python script and save it to the OML4Py Script Repository</strong></h3>\n<p>In this script, we return the counts for each category in the <strong>SPECIES</strong> column and return the results sorted by the <strong>SEPAL_LENGTH</strong> column using <strong><em>oml.group_apply</em></strong>.\n<br  />Notice the value for <strong><em>group_count</em></strong> is a string, not a Python function object, however, the results are the same. The script is invoked from the Python interface, followed by the REST API.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-2032112219","id":"20200915-175632_1314120975","dateCreated":"2020-06-14T18:31:13+0000","dateStarted":"2021-01-06T18:02:15+0000","dateFinished":"2021-01-06T18:02:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:31"},{"text":"%python\n\ngroup_count = \"\"\"def group_count(dat):\n  import oml\n  import pandas as pd\n  return pd.DataFrame([(dat[\"SPECIES\"][0], dat[\"SEPAL_LENGTH\"][0], dat.shape[0])], \\\n  columns = [\"SPECIES\",\"SEPAL_LENGTH\", \"COUNT\"])\"\"\"\n\ntry:\n    oml.script.drop(\"group_count\")\nexcept: \n    pass\noml.script.create(\"group_count\", func=group_count, overwrite=True) \n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:15+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"interrupted":false,"jobName":"paragraph_1600192592546_-2137765324","id":"20200915-175632_787794910","dateCreated":"2020-06-14T20:17:35+0000","dateStarted":"2021-01-06T18:02:15+0000","dateFinished":"2021-01-06T18:02:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:32"},{"text":"%python\n\nres = oml.group_apply(oml_iris, index, func=group_count, oml_input_type=\"pandas.DataFrame\",\\\n         func_value=pd.DataFrame([('a', 1, 1)], columns=[\"SPECIES\", \"SEPAL_LENGTH\",\"COUNT\"]),\\\n             orderby=oml_iris[\"SEPAL_LENGTH\"])\n\nz.show(res)\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:16+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"SPECIES":"string","SEPAL_LENGTH":"string","COUNT":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"SPECIES\tSEPAL_LENGTH\tCOUNT\nversicolor\t5.0\t2\nvirginica\t6.0\t1\nvirginica\t6.0\t1\nversicolor\t6.0\t2\nversicolor\t6.0\t2\nsetosa\t4.3\t18\nsetosa\t4.9\t1\nsetosa\t4.9\t9\nvirginica\t4.9\t1\nversicolor\t4.9\t1\nsetosa\t5.1\t8\nversicolor\t5.1\t1\nsetosa\t5.2\t2\nsetosa\t5.2\t7\nversicolor\t5.2\t1\nversicolor\t5.4\t3\nsetosa\t5.5\t2\nversicolor\t5.5\t6\nvirginica\t5.6\t1\nversicolor\t5.6\t2\nsetosa\t5.7\t2\nvirginica\t5.7\t1\nversicolor\t5.7\t5\nsetosa\t5.8\t1\nvirginica\t5.8\t1\nvirginica\t5.8\t2\nversicolor\t5.8\t1\nversicolor\t5.8\t2\nvirginica\t5.9\t1\nversicolor\t5.9\t3\nvirginica\t6.1\t2\nversicolor\t6.1\t3\nvirginica\t6.2\t1\nvirginica\t6.2\t1\nversicolor\t6.2\t1\nversicolor\t6.2\t1\nvirginica\t6.3\t1\nvirginica\t6.3\t1\nvirginica\t6.3\t4\nversicolor\t6.3\t1\nversicolor\t6.3\t1\nversicolor\t6.3\t1\nvirginica\t6.4\t2\nvirginica\t6.4\t3\nversicolor\t6.4\t1\nversicolor\t6.4\t1\nvirginica\t6.5\t2\nvirginica\t6.5\t2\nversicolor\t6.5\t1\nversicolor\t6.6\t2\nvirginica\t6.7\t1\nvirginica\t6.7\t1\nvirginica\t6.7\t5\nversicolor\t6.7\t1\nversicolor\t6.7\t2\nversicolor\t6.8\t1\nvirginica\t6.9\t3\nversicolor\t6.9\t2\nvirginica\t7.1\t12\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_1252595351","id":"20200915-175632_819953885","dateCreated":"2020-06-14T21:10:59+0000","dateStarted":"2021-01-06T18:02:16+0000","dateFinished":"2021-01-06T18:02:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:33"},{"text":"%md\n\n### **View the Python script in the OML4Py Script Repository**\n\nWe can check for the existence of the saved ***group_count*** script from the Python and REST interfaces.  From Python, run the OML4Py function ***oml.script.dir***.","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:30+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3><strong>View the Python script in the OML4Py Script Repository</strong></h3>\n<p>We can check for the existence of the saved <strong><em>group_count</em></strong> script from the Python and REST interfaces.  From Python, run the OML4Py function <strong><em>oml.script.dir</em></strong>.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-731564774","id":"20200915-175632_583131292","dateCreated":"2020-06-15T21:48:12+0000","dateStarted":"2021-01-06T18:02:30+0000","dateFinished":"2021-01-06T18:02:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:34"},{"text":"%python\n\noml.script.dir(sctype='all')[['name', 'owner']]\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:30+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"                   name    owner\n0         RandomRedDots  OMLUSER\n1            build_lm_1  OMLUSER\n2           group_count  OMLUSER\n3            sk_svc_fit  OMLUSER\n4         RandomRedDots   PYQSYS\n5        RandomRedDots2   PYQSYS\n6        RandomRedDots3   PYQSYS\n7   compute_random_mean   PYQSYS\n8           group_count   PYQSYS\n9            my_predict   PYQSYS\n10              pred_lm   PYQSYS\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-1712644907","id":"20200915-175632_1944785494","dateCreated":"2020-06-15T21:50:56+0000","dateStarted":"2021-01-06T18:02:31+0000","dateFinished":"2021-01-06T18:02:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:35"},{"text":"%md\n\n### **Synchronous REST API calls**\n\nNow verify the existence of the ***group_count*** function in the script repository from the REST API with the ***cURL*** command. The default REST API execution mode is *synchronous*, so code execution will wait for the REST API call to return before additional calls may be initiated. \n\nThe Linux command line JSON parser ***jq*** is used to return the script name and owner.  To install jq on your Linux REST client, run the command ***sudo yum install jq***.\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:31+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{"oml_server":"","token":""},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3><strong>Synchronous REST API calls</strong></h3>\n<p>Now verify the existence of the <strong><em>group_count</em></strong> function in the script repository from the REST API with the <strong><em>cURL</em></strong> command. The default REST API execution mode is <em>synchronous</em>, so code execution will wait for the REST API call to return before additional calls may be initiated.</p>\n<p>The Linux command line JSON parser <strong><em>jq</em></strong> is used to return the script name and owner.  To install jq on your Linux REST client, run the command <strong><em>sudo yum install jq</em></strong>.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_342044173","id":"20200915-175632_2068422094","dateCreated":"2020-06-10T19:08:58+0000","dateStarted":"2021-01-06T18:02:31+0000","dateFinished":"2021-01-06T18:02:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:36"},{"text":"\r\n\r\n$ curl -X GET --header \"Authorization: Bearer ${token}\" --header 'Accept: application/json' \"${oml_server}/oml/tenants/${tenant_name}/databases/${database_name}/api/py-scripts/v1/scripts\" | jq '.result[] | .name + \" \" + .owner'\r\n\r\n  HTTP/1.1 200 OK\r\n  Date: Tue, 16 Jun 2020 21:44:39 GMT\r\n  Content-Type: application/json\r\n  Transfer-Encoding: chunked\r\n  Connection: keep-alive\r\n  Cache-Control: no-cache, no-store, private\r\n  X-Frame-Options: SAMEORIGIN\r\n  X-XSS-Protection: 1;mode=block\r\n  Strict-Transport-Security: max-age=31536000; includeSubDomains\r\n  X-Content-Type-Options: nosniff\r\n\r\n  \"group_count OWNER\"","user":"CHARLIE","dateUpdated":"2020-09-01T16:58:01+0000","config":{"colWidth":12,"fontSize":9,"enabled":false,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600192592546_-248987855","id":"20200915-175632_937177874","dateCreated":"2020-08-11T23:42:57+0000","status":"READY","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:37"},{"text":"%md\n\nInvoke the ***group_count*** function in the script repository from the REST API. Set ***parallelFlag*** to true to leverage Database parallelism.\n\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Invoke the <strong><em>group_count</em></strong> function in the script repository from the REST API. Set <strong><em>parallelFlag</em></strong> to true to leverage Database parallelism.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_18536939","id":"20200915-175632_448061557","dateCreated":"2020-06-15T22:12:33+0000","dateStarted":"2021-01-06T18:02:32+0000","dateFinished":"2021-01-06T18:02:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:38"},{"text":"\n\n$ curl -i -X POST --header \"Authorization: Bearer ${token}\" --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"input\":\"select * from IRIS\", \"parameters\":\"{\\\"oml_input_type\\\":\\\"pandas.DataFrame\\\"}\", \"groupBy\":\"SPECIES\", \"orderBy\":\"SEPAL_LENGTH\", \"parallelFlag\":true}' \"${oml_server}/oml/tenants/${tenant_name}/databases/${database_name}/api/py-scripts/v1/group-apply/group_count\"\n","user":"CHARLIE","dateUpdated":"2020-09-01T16:58:02+0000","config":{"colWidth":12,"fontSize":9,"enabled":false,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600192592546_343893770","id":"20200915-175632_828782807","dateCreated":"2020-08-07T16:40:17+0000","status":"READY","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:39"},{"text":"%md\n\nThe result of the REST execution is a JSON representation of the value returned from the Python script. Dataframes, lists, and dictionaries and \nPNG images are supported. The first portion of the returned value is:\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>The result of the REST execution is a JSON representation of the value returned from the Python script. Dataframes, lists, and dictionaries and\n<br  />PNG images are supported. The first portion of the returned value is:</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_192230301","id":"20200915-175632_108422360","dateCreated":"2020-08-11T23:46:39+0000","dateStarted":"2021-01-06T18:02:33+0000","dateFinished":"2021-01-06T18:02:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:40"},{"text":"\n\n{\"result\":{\"versicolor_8\":{\"SEPAL_LENGTH\":{\"0\":5.7},\"SPECIES\":{\"0\":\"versicolor\"},\"CNT\":{\"0\":5}},\"versicolor_7\":{\"SEPAL_LENGTH\":{\"0\":5.6},\"SPECIES\":{\"0\":\"versicolor\"},\"CNT\":{\"0\":2}},\"virginica_20\":{\"SEPAL_LENGTH\":{\"0\":6.7},\"SPECIES\":{\"0\":\"virginica\"},.....\n","user":"CHARLIE","dateUpdated":"2020-09-01T16:58:02+0000","config":{"colWidth":12,"fontSize":9,"enabled":false,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600192592546_363853733","id":"20200915-175632_1348764583","dateCreated":"2020-08-11T23:46:57+0000","status":"READY","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:41"},{"text":"%md\n\n### **Asynchronous REST API calls**\n\n*Asynchronous* calls do not wait for the REST API call to return from the server. If the Python script is performing long running computations, results will not be immediate and the user may continue development on the client. The Asynchronous call's returned results are included in the response header. Display the response header by passing the ***-i*** flag to the ***cURL*** command. Asynchronous calls have a default timeout of 1800 seconds, or 30 minutes. Set the ***asyncFlag*** to ***true*** to run asynchronous calls from the REST API.\n\n  ","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{"token":"","oml_server":""},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3><strong>Asynchronous REST API calls</strong></h3>\n<p><em>Asynchronous</em> calls do not wait for the REST API call to return from the server. If the Python script is performing long running computations, results will not be immediate and the user may continue development on the client. The Asynchronous call's returned results are included in the response header. Display the response header by passing the <strong><em>-i</em></strong> flag to the <strong><em>cURL</em></strong> command. Asynchronous calls have a default timeout of 1800 seconds, or 30 minutes. Set the <strong><em>asyncFlag</em></strong> to <strong><em>true</em></strong> to run asynchronous calls from the REST API.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_2113827989","id":"20200915-175632_1835955862","dateCreated":"2020-06-10T19:10:49+0000","dateStarted":"2021-01-06T18:02:33+0000","dateFinished":"2021-01-06T18:02:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:42"},{"text":"\n\n$ curl -i -X POST --header \"Authorization: Bearer ${token}\" --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"asyncFlag\":true, \"input\":\"select * from IRIS\", \"parameter\":\"{\\\"oml_input_type\\\":\\“pandas.DataFrame\\\"}\", \"groupBy\":\"SPECIES\", \"orderBy\":\"SEPAL_LENGTH\", \"parallelFlag\":true}' \"${oml_server}/oml/tenants/${tenant_name}/databases/${database_name}/api/py-scripts/v1/group-apply/group_count\"","user":"CHARLIE","dateUpdated":"2020-09-01T16:58:03+0000","config":{"colWidth":12,"fontSize":9,"enabled":false,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600192592546_844943304","id":"20200915-175632_1833847660","dateCreated":"2020-08-11T23:48:30+0000","status":"READY","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:43"},{"text":"%md\n\nThe ***timeout*** flag is used to change the default timeout setting. Here is the equivalent asynchronous REST call with a timeout of 300 seconds, or 5 minutes. \nThe output includes the HTTP 201 status code indicating the job was created and a job id location that can be polled for status and results.\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>The <strong><em>timeout</em></strong> flag is used to change the default timeout setting. Here is the equivalent asynchronous REST call with a timeout of 300 seconds, or 5 minutes.\n<br  />The output includes the HTTP 201 status code indicating the job was created and a job id location that can be polled for status and results.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-1524872971","id":"20200915-175632_1487647417","dateCreated":"2020-08-11T23:49:32+0000","dateStarted":"2021-01-06T18:02:34+0000","dateFinished":"2021-01-06T18:02:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:44"},{"text":"\n\n$ curl -i -X POST --header \"Authorization: Bearer ${token}\" --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"asyncFlag\":true,\"timeout\":300, \"input\":\"select * from IRIS\", \"parameter\":\"{\\\"oml_input_type\\\":\\\"pandas.DataFrame\\\"}\", \"groupBy\":\"SPECIES\", \"orderBy\":\"SEPAL_LENGTH\", \"parallelFlag\":true}' \"${oml_server}/oml/tenants/${tenant_name}/databases/${database_name}/api/py-scripts/v1/group-apply/group_count\"\n\n  HTTP/1.1 201 Created\n  Location: $ {oml_server}/oml/tenants/MYTENANT/databases/MYADW/api/py-scripts/v1/<job id location>\n  Cache-Control: no-cache, no-store, private\n  Content-Length: 0\n  X-Frame-Options: SAMEORIGIN\n  Proxy-Connection: Keep-Alive\n  X-XSS-Protection: 1;mode=block\n  X-Content-Type-Options: nosniff\n","user":"CHARLIE","dateUpdated":"2020-09-01T16:58:03+0000","config":{"colWidth":12,"fontSize":9,"enabled":false,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600192592546_94663162","id":"20200915-175632_749104048","dateCreated":"2020-08-11T23:49:59+0000","status":"READY","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:45"},{"text":"%md\n\nTo poll the job status, pass the job location to ***cURL*** using the GET method. The HTTP response status 302 indicates the currently executing job is found \nand includes a job id location for future results.\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>To poll the job status, pass the job location to <strong><em>cURL</em></strong> using the GET method. The HTTP response status 302 indicates the currently executing job is found\n<br  />and includes a job id location for future results.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-448868434","id":"20200915-175632_853697140","dateCreated":"2020-06-15T22:41:51+0000","dateStarted":"2021-01-06T18:02:34+0000","dateFinished":"2021-01-06T18:02:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:46"},{"text":"\n\n$ curl -i -X GET --header \"Authorization: Bearer ${token}\" --header 'Accept: application/json' ${oml_server}/oml/tenants/${tenant_name}/databases/${database_name}/api/py-scripts/v1/jobs/<job id location>\n\n  HTTP/1.1 302 Found\n  Date: Thu, 04 Jun 2020 13:04:04 GMT\n  Server: nginx/1.18.0\n  Cache-Control: no-cache, no-store, private\n  Content-Length: 0\n  X-Frame-Options: SAMEORIGIN\n  Content-Location: http://<oml-cloud-service-instance-url>/oml/tenants/TENANT1/databases/ADWP/api/py-scripts/v1/<job id location>/result\n  Proxy-Connection: Keep-Alive\n  X-XSS-Protection: 1;mode=block\n  X-Content-Type-Options: nosniff","user":"CHARLIE","dateUpdated":"2020-09-01T16:58:04+0000","config":{"colWidth":12,"fontSize":9,"enabled":false,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600192592546_-593550823","id":"20200915-175632_770202223","dateCreated":"2020-08-11T23:55:20+0000","status":"READY","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:47"},{"text":"%md\n\nPoll the job at the results location.\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:35+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Poll the job at the results location.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-121187301","id":"20200915-175632_676535057","dateCreated":"2020-06-15T22:43:19+0000","dateStarted":"2021-01-06T18:02:35+0000","dateFinished":"2021-01-06T18:02:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:48"},{"text":"\r\n\r\n$ curl -i -X GET --header \"Authorization: Bearer ${token}\" --header 'Accept: application/json' ${oml_server}/oml/tenants/${tenant_name}/databases/${database_name}/api/py-scripts/v1/jobs/<job id location>/result\r\n\r\n\r\n  HTTP/1.1 200 OK\r\n  Date: Thu, 04 Jun 2020 13:06:05 GMT\r\n  Server: nginx/1.18.0\r\n  Content-Type: application/json\r\n  Cache-Control: no-cache, no-store, private\r\n  Content-Length: 1038\r\n  X-Frame-Options: SAMEORIGIN\r\n  Proxy-Connection: Keep-Alive\r\n  X-XSS-Protection: 1;mode=block\r\n  X-Content-Type-Options: nosniff","user":"CHARLIE","dateUpdated":"2020-09-01T16:58:04+0000","config":{"colWidth":12,"fontSize":9,"enabled":false,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600192592546_703089444","id":"20200915-175632_926359104","dateCreated":"2020-08-11T23:57:32+0000","status":"READY","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:49"},{"text":"%md\n\nA portion of the returned value is:\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:35+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>A portion of the returned value is:</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-27296286","id":"20200915-175632_384248592","dateCreated":"2020-08-11T23:58:58+0000","dateStarted":"2021-01-06T18:02:36+0000","dateFinished":"2021-01-06T18:02:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:50"},{"text":"\n\n{\"result\":{\"versicolor_8\":{\"SEPAL_LENGTH\":{\"0\":5.7},\"SPECIES\":{\"0\":\"versicolor\"},\"CNT\":{\"0\":5}},\"versicolor_7\":{\"SEPAL_LENGTH\":{\"0\":5.6},\"SPECIES\":{\"0\":\"versicolor\"},\"CNT\":{\"0\":2}},\"virginica_20\":{\"SEPAL_LENGTH\":{\"0\":6.7},\"SPECIES\":{\"0\":\"virginica\"},.....\n","user":"CHARLIE","dateUpdated":"2020-09-01T16:58:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":false,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600192592546_1412382315","id":"20200915-175632_2041786497","dateCreated":"2020-08-11T23:59:11+0000","status":"READY","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:51"},{"text":"%md\n\n### **Returning Model Details from the REST API**\n\nLet's create a linear model script and run it from the REST API. First, we'll define our function, ***build_lm_rest***, that returns a dict mapping of the model attributes. Note that the model itself cannot be returned directly from REST because LinearRegression models are not JSON-serializable. \n\n\n\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3><strong>Returning Model Details from the REST API</strong></h3>\n<p>Let's create a linear model script and run it from the REST API. First, we'll define our function, <strong><em>build_lm_rest</em></strong>, that returns a dict mapping of the model attributes. Note that the model itself cannot be returned directly from REST because LinearRegression models are not JSON-serializable.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_1731343646","id":"20200915-175632_1225271093","dateCreated":"2020-08-18T21:01:09+0000","dateStarted":"2021-01-06T18:02:36+0000","dateFinished":"2021-01-06T18:02:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:52"},{"text":"%python\n\nbuild_lm_rest = \"\"\"def build_rest(dat):\n            from sklearn import linear_model\n            import oml\n            regr = linear_model.LinearRegression()\n            import pandas as pd\n            dat = pd.get_dummies(dat, drop_first=True)\n            X = dat[[\"SEPAL_WIDTH\", \"PETAL_LENGTH\", \"PETAL_WIDTH\", \"SPECIES_versicolor\", \"SPECIES_virginica\"]]\n            y = dat[[\"SEPAL_LENGTH\"]]\n            regr.fit(X, y)\n            data = {}\n            data[\"init_params\"] = regr.get_params()\n            data[\"model_params\"] = mp = {}\n            for p in (\"coef_\", \"intercept_\", \"_residues\", \"singular_\"):\n                mp[p] = getattr(regr, p).tolist()\n            return data\"\"\"\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"interrupted":false,"jobName":"paragraph_1600192592546_-592878202","id":"20200915-175632_1178793290","dateCreated":"2020-08-18T21:26:57+0000","dateStarted":"2021-01-06T18:02:37+0000","dateFinished":"2021-01-06T18:02:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:53"},{"text":"%md\n\nSave the ***buld_lm_rest*** script to the Python script repository","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Save the <strong><em>buld_lm_rest</em></strong> script to the Python script repository</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-58393561","id":"20200915-175632_1775434041","dateCreated":"2020-08-18T21:34:25+0000","dateStarted":"2021-01-06T18:02:38+0000","dateFinished":"2021-01-06T18:02:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:54"},{"text":"%python\n\ntry:\n    oml.script.drop(\"build_lm_rest\")\nexcept: \n    pass\noml.script.create(\"build_lm_rest\", func=build_lm_rest, overwrite=True) ","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"interrupted":false,"jobName":"paragraph_1600192592546_-1093115208","id":"20200915-175632_151382970","dateCreated":"2020-08-18T20:16:08+0000","dateStarted":"2021-01-06T18:02:38+0000","dateFinished":"2021-01-06T18:02:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:55"},{"text":"%md\n\nWe invoke the ***build_lm_rest*** function in the script repository from the REST API in asynchronous mode. \n\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>We invoke the <strong><em>build_lm_rest</em></strong> function in the script repository from the REST API in asynchronous mode.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-2072324758","id":"20200915-175632_20730912","dateCreated":"2020-08-18T21:35:47+0000","dateStarted":"2021-01-06T18:02:39+0000","dateFinished":"2021-01-06T18:02:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:56"},{"text":"$ curl -i -X POST --header \"Authorization: Bearer ${token}\" --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"input\":\"select * from IRIS\", \"parameters\":\"{\\\"oml_input_type\\\":\\\"pandas.DataFrame\\\"}\"}' \"${oml_server}/oml/tenants/${tenant_name}/databases/${database_name}/api/py-scripts/v1/table-apply/build_lm_rest\"","user":"CHARLIE","dateUpdated":"2020-09-01T16:58:07+0000","config":{"colWidth":12,"fontSize":9,"enabled":false,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600192592546_2037213111","id":"20200915-175632_1342511592","dateCreated":"2020-08-20T20:39:17+0000","status":"READY","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:57"},{"text":"%md\n\nThe returned value is a dict containing model attributes.","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>The returned value is a dict containing model attributes.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_-282836172","id":"20200915-175632_778054112","dateCreated":"2020-08-18T21:38:20+0000","dateStarted":"2021-01-06T18:02:40+0000","dateFinished":"2021-01-06T18:02:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:58"},{"text":"\n{\"result\":{\"init_params\":{\"fit_intercept\":true,\"n_jobs\":null,\"normalize\":false,\"copy_X\":true},\"model_params\":{\"intercept_\":[2.1712662921550736],\"_residues\":[13.556485081974792],\"coef_\":[[0.4958889383885511,0.8292439122348054,-0.315155173326473,-0.7235619577807288,-1.0234978144908309]],\"singular_\":[23.873627650888057,7.279716799977891,4.192696791126727,2.194192042042924,0.7289542732694926]}}}","user":"CHARLIE","dateUpdated":"2020-09-01T16:58:08+0000","config":{"colWidth":12,"fontSize":9,"enabled":false,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600192592546_-1918414617","id":"20200915-175632_136208301","dateCreated":"2020-08-18T20:56:59+0000","status":"READY","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:59"},{"text":"%md\n# End of Script","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>End of Script</h1>\n"}]},"interrupted":false,"jobName":"paragraph_1600192592546_1196251229","id":"20200915-175632_1801488346","dateCreated":"2020-06-10T19:13:37+0000","dateStarted":"2021-01-06T18:02:40+0000","dateFinished":"2021-01-06T18:02:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:60"},{"text":"%md\n","user":"OMLUSER","dateUpdated":"2021-01-06T18:02:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600192592546_-954702968","id":"20200915-175632_324147463","dateCreated":"2020-09-01T16:58:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":false,"$$hashKey":"object:61"}],"name":"OML4Py REST API","id":"467947","noteParams":{},"noteForms":{"oml_server":{"type":"TextBox","name":"oml_server","defaultValue":"","hidden":false}},"angularObjects":{"MDW381939C745:shared_process":[],"ORACE04E7522F:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}