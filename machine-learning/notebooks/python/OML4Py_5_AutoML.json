{"paragraphs":[{"text":"%md\n\n# Oracle Machine Learning for Python (OML4Py)\n\n***Oracle Machine Learning for Python*** (OML4Py) makes the open source Python scripting language and environment ready for the enterprise and big data. Designed for problems involving both large and small data volumes, OML4Py integrates Python with Oracle Autonomous Database, allowing users to run Python commands and scripts for statistical, machine learning, and visualization analyses on database tables and views using Python syntax. Many familiar Python functions are overloaded that translate Python behavior into SQL for running in-database, as well as new automatic machine learning (AutoML) features.\n\nIn this notebook, we highlight the AutoML workflow using OML4Py:\n\n* Automatic algorithm selection - identify the most appropriate algorithm\n* Automatic feature selection - select the features (predictors) that best support that algorithm\n* Automatic model tuning - tune the model using algorithm hyperparameters and the selected features\n\nUsing the WINE dataset form scikit-learn, we use AutoML for classification on the 'target' column, and for regression on the 'alcohol' column. \n\nCopyright (c) 2020 Oracle Corporation                             \n###### [The Universal Permissive License (UPL), Version 1.0](https://oss.oracle.com/licenses/upl/)\n---","user":"MARK","dateUpdated":"2021-01-04T19:54:32+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Oracle Machine Learning for Python (OML4Py)</h1>\n<p><strong><em>Oracle Machine Learning for Python</em></strong> (OML4Py) makes the open source Python scripting language and environment ready for the enterprise and big data. Designed for problems involving both large and small data volumes, OML4Py integrates Python with Oracle Autonomous Database, allowing users to run Python commands and scripts for statistical, machine learning, and visualization analyses on database tables and views using Python syntax. Many familiar Python functions are overloaded that translate Python behavior into SQL for running in-database, as well as new automatic machine learning (AutoML) features.</p>\n<p>In this notebook, we highlight the AutoML workflow using OML4Py:</p>\n<ul>\n<li>Automatic algorithm selection - identify the most appropriate algorithm</li>\n<li>Automatic feature selection - select the features (predictors) that best support that algorithm</li>\n<li>Automatic model tuning - tune the model using algorithm hyperparameters and the selected features</li>\n</ul>\n<p>Using the WINE dataset form scikit-learn, we use AutoML for classification on the 'target' column, and for regression on the 'alcohol' column.</p>\n<p>Copyright (c) 2020 Oracle Corporation</p>\n<h6><a href=\"https://oss.oracle.com/licenses/upl/\">The Universal Permissive License (UPL), Version 1.0</a></h6>\n<hr />\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_-552402919","id":"20200915-175633_889750431","dateCreated":"2020-02-19T23:51:59+0000","dateStarted":"2021-01-04T19:52:26+0000","dateFinished":"2021-01-04T19:52:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"focus":true,"$$hashKey":"object:40"},{"text":"%md\n\n# Import libraries supporting OML4Py \n\nTo use OML4Py, first import the package ***oml***. \n\nUsers can get online help using Python's help function and specifying the function of interest.\n","user":"OMLUSER","dateUpdated":"2021-01-03T18:28:35+0000","config":{"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Import libraries supporting OML4Py</h1>\n<p>To use OML4Py, first import the package <strong><em>oml</em></strong>.</p>\n<p>Users can get online help using Python's help function and specifying the function of interest.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_949504990","id":"20200915-175633_473002688","dateCreated":"2020-02-19T23:51:59+0000","dateStarted":"2021-01-03T18:28:35+0000","dateFinished":"2021-01-03T18:28:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:41"},{"title":"Import libraries and set display options","text":"%python\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport pandas as pd\nimport oml\nfrom oml import automl\n\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)","user":"OMLUSER","dateUpdated":"2021-01-03T18:28:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"interrupted":false,"jobName":"paragraph_1600192593316_2062062320","id":"20200915-175633_629232463","dateCreated":"2020-02-19T23:51:59+0000","dateStarted":"2021-01-03T18:28:36+0000","dateFinished":"2021-01-03T18:28:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:42"},{"text":"%md\n\n# Create data sets as Pandas DataFrame and load into Oracle Database\n\nIn this example, we load the **wine** and **iris** data sets, combining target and predictors into a single DataFrame that matches the form the data would have as a database table. These DataFrame objects can then be loaded into Oracle Database using the ***create*** function.","user":"OMLUSER","dateUpdated":"2021-01-03T18:28:45+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Create data sets as Pandas DataFrame and load into Oracle Database</h1>\n<p>In this example, we load the <strong>wine</strong> and <strong>iris</strong> data sets, combining target and predictors into a single DataFrame that matches the form the data would have as a database table. These DataFrame objects can then be loaded into Oracle Database using the <strong><em>create</em></strong> function.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_-1392804128","id":"20200915-175633_767800207","dateCreated":"2020-02-19T23:51:59+0000","dateStarted":"2021-01-03T18:28:46+0000","dateFinished":"2021-01-03T18:28:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:43"},{"title":"Create WINE data table","text":"%python\n\nfrom sklearn.datasets import load_wine\n\nwine = load_wine()\nx = pd.DataFrame(wine.data, columns = wine[\"feature_names\"])\ny = pd.DataFrame(list(map(lambda x: {0:'class_0', 1: 'class_1', 2:'class_2'}[x], wine.target)), \n                 columns = ['target'])\n\nwine_df = pd.concat([x,y], axis=1)\n\ntry:\n    oml.drop(table=\"WINE\")\nexcept:\n    pass\nWINE = oml.create(wine_df, table=\"WINE\")\nprint(WINE.shape)\nprint(WINE.dtypes)","user":"OMLUSER","dateUpdated":"2021-01-03T18:28:46+0000","config":{"colWidth":6,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/undefined","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(178, 14)\nalcohol                           <class 'oml.core.float.Float'>\nmalic_acid                        <class 'oml.core.float.Float'>\nash                               <class 'oml.core.float.Float'>\nalcalinity_of_ash                 <class 'oml.core.float.Float'>\nmagnesium                         <class 'oml.core.float.Float'>\ntotal_phenols                     <class 'oml.core.float.Float'>\nflavanoids                        <class 'oml.core.float.Float'>\nnonflavanoid_phenols              <class 'oml.core.float.Float'>\nproanthocyanins                   <class 'oml.core.float.Float'>\ncolor_intensity                   <class 'oml.core.float.Float'>\nhue                               <class 'oml.core.float.Float'>\nod280/od315_of_diluted_wines      <class 'oml.core.float.Float'>\nproline                           <class 'oml.core.float.Float'>\ntarget                          <class 'oml.core.string.String'>\ndtype: object\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_1525287378","id":"20200915-175633_1554438611","dateCreated":"2020-06-09T22:06:50+0000","dateStarted":"2021-01-03T18:28:46+0000","dateFinished":"2021-01-03T18:28:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:44"},{"text":"%python\n\nz.show(WINE.head(20))","user":"OMLUSER","dateUpdated":"2021-01-03T18:28:47+0000","config":{"colWidth":6,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"alcohol":"string","malic_acid":"string","ash":"string","alcalinity_of_ash":"string","magnesium":"string","total_phenols":"string","flavanoids":"string","nonflavanoid_phenols":"string","proanthocyanins":"string","color_intensity":"string","hue":"string","od280/od315_of_diluted_wines":"string","proline":"string","target":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/undefined"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"alcohol\tmalic_acid\tash\talcalinity_of_ash\tmagnesium\ttotal_phenols\tflavanoids\tnonflavanoid_phenols\tproanthocyanins\tcolor_intensity\thue\tod280/od315_of_diluted_wines\tproline\ttarget\n14.23\t1.71\t2.43\t15.6\t127\t2.8\t3.06\t0.28\t2.29\t5.64\t1.04\t3.92\t1065\tclass_0\n13.2\t1.78\t2.14\t11.2\t100\t2.65\t2.76\t0.26\t1.28\t4.38\t1.05\t3.4\t1050\tclass_0\n13.16\t2.36\t2.67\t18.6\t101\t2.8\t3.24\t0.3\t2.81\t5.68\t1.03\t3.17\t1185\tclass_0\n14.37\t1.95\t2.5\t16.8\t113\t3.85\t3.49\t0.24\t2.18\t7.8\t0.86\t3.45\t1480\tclass_0\n13.24\t2.59\t2.87\t21.0\t118\t2.8\t2.69\t0.39\t1.82\t4.32\t1.04\t2.93\t735\tclass_0\n14.2\t1.76\t2.45\t15.2\t112\t3.27\t3.39\t0.34\t1.97\t6.75\t1.05\t2.85\t1450\tclass_0\n14.39\t1.87\t2.45\t14.6\t96\t2.5\t2.52\t0.3\t1.98\t5.25\t1.02\t3.58\t1290\tclass_0\n14.06\t2.15\t2.61\t17.6\t121\t2.6\t2.51\t0.31\t1.25\t5.05\t1.06\t3.58\t1295\tclass_0\n14.83\t1.64\t2.17\t14.0\t97\t2.8\t2.98\t0.29\t1.98\t5.2\t1.08\t2.85\t1045\tclass_0\n13.86\t1.35\t2.27\t16.0\t98\t2.98\t3.15\t0.22\t1.85\t7.22\t1.01\t3.55\t1045\tclass_0\n14.1\t2.16\t2.3\t18.0\t105\t2.95\t3.32\t0.22\t2.38\t5.75\t1.25\t3.17\t1510\tclass_0\n14.12\t1.48\t2.32\t16.8\t95\t2.2\t2.43\t0.26\t1.57\t5.0\t1.17\t2.82\t1280\tclass_0\n13.75\t1.73\t2.41\t16.0\t89\t2.6\t2.76\t0.29\t1.81\t5.6\t1.15\t2.9\t1320\tclass_0\n14.75\t1.73\t2.39\t11.4\t91\t3.1\t3.69\t0.43\t2.81\t5.4\t1.25\t2.73\t1150\tclass_0\n14.38\t1.87\t2.38\t12.0\t102\t3.3\t3.64\t0.29\t2.96\t7.5\t1.2\t3.0\t1547\tclass_0\n13.63\t1.81\t2.7\t17.2\t112\t2.85\t2.91\t0.3\t1.46\t7.3\t1.28\t2.88\t1310\tclass_0\n14.3\t1.92\t2.72\t20.0\t120\t2.8\t3.14\t0.33\t1.97\t6.2\t1.07\t2.65\t1280\tclass_0\n13.83\t1.57\t2.62\t20.0\t115\t2.95\t3.4\t0.4\t1.72\t6.6\t1.13\t2.57\t1130\tclass_0\n14.19\t1.59\t2.48\t16.5\t108\t3.3\t3.93\t0.32\t1.86\t8.7\t1.23\t2.82\t1680\tclass_0\n13.64\t3.1\t2.56\t15.2\t116\t2.7\t3.03\t0.17\t1.66\t5.1\t0.96\t3.36\t845\tclass_0\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_883611821","id":"20200915-175633_1259735029","dateCreated":"2020-08-11T15:01:56+0000","dateStarted":"2021-01-03T18:28:48+0000","dateFinished":"2021-01-03T18:28:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:45"},{"text":"%md\n\n# Automatic Machine Learning (AutoML)\nThe AutoML workflow consists of \n\n- identify the most appropriate algorithm \n- select the features (predictors) that best support that algorithm\n- tune the model using algorithm hyperparameters and the selected features\n\n## Automatic Algorithm Selection\n\nWhich algorithm is best to predict my target among those available with OML4Py?\n\n- Classification: Decision Tree, Generalized Linear Model, Naïve Bayes, Neural Network, RandomForest, Support Vector Machine\n- Regression: Generalized Linear Model, Neural Network, Support Vector Machine\n\nTo use AutoML algorithm selection, we create an ***AlgorithmSelection*** object, here with the 'accuracy' score metric. Then, we invoke ***select*** to get the top 4 predicted algorithms by setting k=4. Algorithm Selection automatically selects the best algorithm from the set of supported in-database algorithms by using characteristics of the data set and technique. Algorithm Selection itself uses advanced machine learning and ***meta-learning*** techniques.\n\nUsers can select from a variety of ***score_metric*** options:\n\n- binary classification – accuracy (default), f1, precision, recall, roc_auc, f1_micro, f1_macro, f1_weighted, recall_micro, recall_macro, recall_weighted, precision_micro, precision_macro, precision_weighted\n- multiclass classification – accuracy (default), f1_micro, f1_macro, f1_weighted, recall_micro, recall_macro, recall_weighted, precision_micro, precision_macro, precision_weighted\n- regression – r2 (default), neg_mean_squared_error, neg_mean_absolute_error, neg_mean_squared_log_error, neg_median_absolute_error","user":"OMLUSER","dateUpdated":"2021-01-03T18:28:48+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Automatic Machine Learning (AutoML)</h1>\n<p>The AutoML workflow consists of</p>\n<ul>\n<li>identify the most appropriate algorithm</li>\n<li>select the features (predictors) that best support that algorithm</li>\n<li>tune the model using algorithm hyperparameters and the selected features</li>\n</ul>\n<h2>Automatic Algorithm Selection</h2>\n<p>Which algorithm is best to predict my target among those available with OML4Py?</p>\n<ul>\n<li>Classification: Decision Tree, Generalized Linear Model, Naïve Bayes, Neural Network, RandomForest, Support Vector Machine</li>\n<li>Regression: Generalized Linear Model, Neural Network, Support Vector Machine</li>\n</ul>\n<p>To use AutoML algorithm selection, we create an <strong><em>AlgorithmSelection</em></strong> object, here with the 'accuracy' score metric. Then, we invoke <strong><em>select</em></strong> to get the top 4 predicted algorithms by setting k=4. Algorithm Selection automatically selects the best algorithm from the set of supported in-database algorithms by using characteristics of the data set and technique. Algorithm Selection itself uses advanced machine learning and <strong><em>meta-learning</em></strong> techniques.</p>\n<p>Users can select from a variety of <strong><em>score_metric</em></strong> options:</p>\n<ul>\n<li>binary classification – accuracy (default), f1, precision, recall, roc_auc, f1_micro, f1_macro, f1_weighted, recall_micro, recall_macro, recall_weighted, precision_micro, precision_macro, precision_weighted</li>\n<li>multiclass classification – accuracy (default), f1_micro, f1_macro, f1_weighted, recall_micro, recall_macro, recall_weighted, precision_micro, precision_macro, precision_weighted</li>\n<li>regression – r2 (default), neg_mean_squared_error, neg_mean_absolute_error, neg_mean_squared_log_error, neg_median_absolute_error</li>\n</ul>\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_-1810784583","id":"20200915-175633_1688354547","dateCreated":"2020-02-19T23:51:59+0000","dateStarted":"2021-01-03T18:28:49+0000","dateFinished":"2021-01-03T18:28:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:46"},{"title":"Prepare WINE classification data","text":"%python\n\nWINE_X_cl,WINE_y_cl = WINE.drop('target'), WINE['target']","user":"OMLUSER","dateUpdated":"2021-01-03T18:28:49+0000","config":{"colWidth":6,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/undefined","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"interrupted":false,"jobName":"paragraph_1600192593316_-297322149","id":"20200915-175633_1422767651","dateCreated":"2020-08-12T21:25:31+0000","dateStarted":"2021-01-03T18:28:49+0000","dateFinished":"2021-01-03T18:28:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:47"},{"title":"Prepare WINE regression data","text":"%python\n\nWINE_X_reg,WINE_y_reg = WINE.drop('alcohol'), WINE['alcohol']","user":"OMLUSER","dateUpdated":"2021-01-03T18:28:50+0000","config":{"colWidth":6,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/undefined","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"interrupted":false,"jobName":"paragraph_1600192593316_597182942","id":"20200915-175633_1053787432","dateCreated":"2020-08-12T21:26:32+0000","dateStarted":"2021-01-03T18:28:50+0000","dateFinished":"2021-01-03T18:28:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:48"},{"title":"Compute classification algorithm ranking for WINE data set","text":"%python\n\nas_wine_cl = automl.AlgorithmSelection(mining_function='classification', \n                                          score_metric='accuracy', parallel=2)\n\nwine_alg_ranking_cl = as_wine_cl.select(WINE_X_cl, WINE_y_cl, k=4) \n\nprint(\"Ranked algorithms:\\n\", wine_alg_ranking_cl)\n\nselected_wine_alg_cl = next(iter(dict(wine_alg_ranking_cl).keys()))\nprint(\"Best algorithm: \", selected_wine_alg_cl)","user":"OMLUSER","dateUpdated":"2021-01-03T18:28:51+0000","config":{"colWidth":6,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/undefined","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Ranked algorithms:\n [('svm_gaussian', 0.9825515947467167), ('svm_linear', 0.9727954971857411), ('nn', 0.9670812114714554), ('rf', 0.9495470383275262)]\nBest algorithm:  svm_gaussian\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_2025068813","id":"20200915-175633_1159533739","dateCreated":"2020-06-09T22:31:24+0000","dateStarted":"2021-01-03T18:28:51+0000","dateFinished":"2021-01-03T18:29:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:49"},{"title":"Compute regression algorithm ranking for WINE data set","text":"%python\n\nas_wine_reg = automl.AlgorithmSelection(mining_function='regression', \n                                          score_metric='r2', parallel=2)\n\nwine_alg_ranking_reg = as_wine_reg.select(WINE_X_reg, WINE_y_reg, k=4) \n\nprint(\"Ranked algorithms:\\n\", wine_alg_ranking_reg)\n\nselected_wine_alg_reg = next(iter(dict(wine_alg_ranking_reg).keys()))\nprint(\"Best algorithm: \", selected_wine_alg_reg)","user":"OMLUSER","dateUpdated":"2021-01-03T18:29:57+0000","config":{"colWidth":6,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/undefined","title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Ranked algorithms:\n [('glm_ridge', 0.5562678152508089), ('glm', 0.5562385995641422), ('svm_linear', 0.5382639749412087), ('nn', 0.5195417001711282)]\nBest algorithm:  glm_ridge\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_-2144925032","id":"20200915-175633_817753949","dateCreated":"2020-08-10T19:52:17+0000","dateStarted":"2021-01-03T18:29:57+0000","dateFinished":"2021-01-03T18:30:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:50"},{"text":"%md\n## Automatic Feature Selection\n\nNext, we determine the features that best support the selected algorithm. We first define a ***FeatureSelection*** object with score metric 'accuracy' and invoke ***reduce*** specifying the desired algorithm determined above and the train and test data set proxy objects. \n\nWe see the set of selected columns. Try other algorithms, e.g., svm_linear, to see if different columns are selected.\n","user":"MARK","dateUpdated":"2021-01-04T19:53:42+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Automatic Feature Selection</h2>\n<p>Next, we determine the features that best support the selected algorithm. We first define a <strong><em>FeatureSelection</em></strong> object with score metric 'accuracy' and invoke <strong><em>reduce</em></strong> specifying the desired algorithm determined above and the train and test data set proxy objects.</p>\n<p>We see the set of selected columns. Try other algorithms, e.g., svm_linear, to see if different columns are selected.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_-1431485022","id":"20200915-175633_158870471","dateCreated":"2020-02-19T23:51:59+0000","dateStarted":"2021-01-04T19:53:41+0000","dateFinished":"2021-01-04T19:53:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:51"},{"text":"%python\n\nfs_wine_cl = automl.FeatureSelection(mining_function = 'classification', \n                                     score_metric = 'accuracy', parallel=2)\n\nselected_wine_features_cl = fs_wine_cl.reduce(selected_wine_alg_cl, \n                                              WINE_X_cl, WINE_y_cl)\n\nWINE_X_reduced_cl = WINE_X_cl[:,selected_wine_features_cl]\n\nprint(\"Selected columns:\", WINE_X_reduced_cl.columns)\nprint(\"Number of columns:\")\n\"{}  reduced to {}\".format(len(WINE_X_cl.columns), len(selected_wine_features_cl))","user":"OMLUSER","dateUpdated":"2021-01-03T18:30:53+0000","config":{"colWidth":6,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/undefined"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Selected columns: ['alcohol', 'ash', 'alcalinity_of_ash', 'flavanoids', 'nonflavanoid_phenols', 'color_intensity', 'hue', 'od280/od315_of_diluted_wines', 'proline']\nNumber of columns:\n'13  reduced to 9'\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_-2027788266","id":"20200915-175633_1264322821","dateCreated":"2020-06-09T22:33:31+0000","dateStarted":"2021-01-03T18:30:53+0000","dateFinished":"2021-01-03T18:32:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:52"},{"text":"%python\n\nfs_wine_reg = automl.FeatureSelection(mining_function = 'regression', \n                                     score_metric = 'r2', parallel=2)\n\nselected_wine_features_reg = fs_wine_reg.reduce(selected_wine_alg_reg, \n                                                WINE_X_reg, WINE_y_reg)\n\nWINE_X_reduced_reg = WINE_X_reg[:,selected_wine_features_reg]\n\nprint(\"Selected columns:\",WINE_X_reduced_reg.columns)\nprint(\"Number of columns:\")\n\"{}  reduced to {}\".format(len(WINE_X_reg.columns), len(selected_wine_features_reg))","user":"OMLUSER","dateUpdated":"2021-01-03T18:32:28+0000","config":{"colWidth":6,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/undefined","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Selected columns: ['color_intensity', 'target']\nNumber of columns:\n'13  reduced to 2'\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_-1322872527","id":"20200915-175633_1716118665","dateCreated":"2020-08-11T15:05:39+0000","dateStarted":"2021-01-03T18:32:29+0000","dateFinished":"2021-01-03T18:33:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:53"},{"text":"%md\n## Automatic Model Tuning\n\nAt this point, we're ready to build and tune the models we want to use. First, we define a ***ModelTuning*** object for classification. \nWe then invoke ***tune*** to produce the tuned model using the algorithm selected above and the reduced column data. \n\nThe result of model tuning is a dictionary with the 'best model' and 'all evals', which contains a list of all hyperparameter choices tried and their corresponding score\n","user":"OMLUSER","dateUpdated":"2021-01-03T18:33:47+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Automatic Model Tuning</h2>\n<p>At this point, we're ready to build and tune the models we want to use. First, we define a <strong><em>ModelTuning</em></strong> object for classification.\n<br  />We then invoke <strong><em>tune</em></strong> to produce the tuned model using the algorithm selected above and the reduced column data.</p>\n<p>The result of model tuning is a dictionary with the 'best model' and 'all evals', which contains a list of all hyperparameter choices tried and their corresponding score</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_1598400362","id":"20200915-175633_970008602","dateCreated":"2020-02-19T23:51:59+0000","dateStarted":"2021-01-03T18:33:47+0000","dateFinished":"2021-01-03T18:33:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:54"},{"text":"%python\n\nmt_wine_cl = automl.ModelTuning(mining_function = 'classification', parallel=2)\n\nresults_cl = mt_wine_cl.tune(selected_wine_alg_cl, WINE_X_reduced_cl, WINE_y_cl)\ntuned_model_cl = results_cl['best_model']\ntuned_model_cl","user":"OMLUSER","dateUpdated":"2021-01-03T18:33:47+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":6,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nAlgorithm Name: Support Vector Machine\n\nMining Function: CLASSIFICATION\n\nTarget: target\n\nSettings: \n                    setting name                 setting value\n0                      ALGO_NAME  ALGO_SUPPORT_VECTOR_MACHINES\n1          CLAS_WEIGHTS_BALANCED                           OFF\n2                   ODMS_DETAILS                  ODMS_DISABLE\n3   ODMS_MISSING_VALUE_TREATMENT       ODMS_MISSING_VALUE_AUTO\n4                  ODMS_SAMPLING         ODMS_SAMPLING_DISABLE\n5                      PREP_AUTO                            ON\n6         SVMS_COMPLEXITY_FACTOR                            10\n7            SVMS_CONV_TOLERANCE                         .0001\n8           SVMS_KERNEL_FUNCTION                 SVMS_GAUSSIAN\n9                SVMS_NUM_PIVOTS                           200\n10                  SVMS_STD_DEV            2.1213203435596424\n\nAttributes: \nalcalinity_of_ash\nalcohol\nash\ncolor_intensity\nflavanoids\nhue\nnonflavanoid_phenols\nod280/od315_of_diluted_wines\nproline\n\nPartition: NO\n\n\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_-1429780835","id":"20200915-175633_1899961076","dateCreated":"2020-02-19T23:51:59+0000","dateStarted":"2021-01-03T18:33:48+0000","dateFinished":"2021-01-03T18:39:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:55"},{"text":"%python\n\nmt_wine_reg = automl.ModelTuning(mining_function = 'regression', parallel=2)\n\nresults_reg = mt_wine_reg.tune(selected_wine_alg_reg, WINE_X_reduced_reg, WINE_y_reg)\ntuned_model_reg = results_reg['best_model']\ntuned_model_reg","user":"OMLUSER","dateUpdated":"2021-01-03T18:39:23+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":6,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nAlgorithm Name: Generalized Linear Model\n\nMining Function: REGRESSION\n\nTarget: alcohol\n\nSettings: \n                    setting name                  setting value\n0                      ALGO_NAME  ALGO_GENERALIZED_LINEAR_MODEL\n1                GLMS_CONF_LEVEL                            .95\n2            GLMS_FTR_GENERATION    GLMS_FTR_GENERATION_DISABLE\n3             GLMS_FTR_SELECTION     GLMS_FTR_SELECTION_DISABLE\n4            GLMS_NUM_ITERATIONS                             30\n5          GLMS_RIDGE_REGRESSION          GLMS_RIDGE_REG_ENABLE\n6               GLMS_RIDGE_VALUE                      0.0149999\n7                    GLMS_SOLVER                 GLMS_SOLVER_QR\n8             GLMS_VIF_FOR_RIDGE         GLMS_VIF_RIDGE_DISABLE\n9                   ODMS_DETAILS                   ODMS_DISABLE\n10  ODMS_MISSING_VALUE_TREATMENT        ODMS_MISSING_VALUE_AUTO\n11                 ODMS_SAMPLING          ODMS_SAMPLING_DISABLE\n12                     PREP_AUTO                             ON\n\nAttributes: \ncolor_intensity\ntarget\n\nPartition: NO\n\n\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_1701066366","id":"20200915-175633_1509962231","dateCreated":"2020-08-11T15:09:15+0000","dateStarted":"2021-01-03T18:39:23+0000","dateFinished":"2021-01-03T18:44:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:56"},{"text":"%md\n### Specify a model tuning search space\n\nExplicitly indicate the search space you want to explore for model building using the ***param_space*** argument to the ***tune*** function. Below, we show using parameters for the Random Forest algorithm for classification and Neural Network for regression. ","user":"OMLUSER","dateUpdated":"2021-01-03T18:44:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Specify a model tuning search space</h3>\n<p>Explicitly indicate the search space you want to explore for model building using the <strong><em>param_space</em></strong> argument to the <strong><em>tune</em></strong> function. Below, we show using parameters for the Random Forest algorithm for classification and Neural Network for regression.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_-1251561786","id":"20200915-175633_1933896594","dateCreated":"2020-06-16T01:25:18+0000","dateStarted":"2021-01-03T18:44:43+0000","dateFinished":"2021-01-03T18:44:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:57"},{"text":"%python\n\nsearch_space={'RFOR_SAMPLING_RATIO': {'type': 'continuous', 'range': [0.05, 0.5]}, \n              'RFOR_NUM_TREES': {'type': 'discrete', 'range': [50, 55]}, \n              'TREE_IMPURITY_METRIC': {'type': 'categorical', \n                                   'range': ['TREE_IMPURITY_ENTROPY', 'TREE_IMPURITY_GINI']},}\n              \nat_wine2_cl = automl.ModelTuning(mining_function='classification', \n                                 score_metric='f1_macro', parallel=2)\nresults2_cl = at_wine2_cl.tune('rf', WINE_X_cl, WINE_y_cl, \n                               param_space=search_space)\nscore2_cl, params2_cl = results2_cl['all_evals'][0]\n\"{:.2}\".format(score2_cl)\n\ntuned_model2_cl = results2_cl['best_model']\ntuned_model2_cl","user":"OMLUSER","dateUpdated":"2021-01-03T18:44:46+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":6,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nAlgorithm Name: Random Forest\n\nMining Function: CLASSIFICATION\n\nTarget: target\n\nSettings: \n                    setting name            setting value\n0                      ALGO_NAME       ALGO_RANDOM_FOREST\n1              CLAS_MAX_SUP_BINS                       32\n2          CLAS_WEIGHTS_BALANCED                      OFF\n3                   ODMS_DETAILS             ODMS_DISABLE\n4   ODMS_MISSING_VALUE_TREATMENT  ODMS_MISSING_VALUE_AUTO\n5               ODMS_RANDOM_SEED                        0\n6                  ODMS_SAMPLING    ODMS_SAMPLING_DISABLE\n7                      PREP_AUTO                       ON\n8                 RFOR_NUM_TREES                       52\n9            RFOR_SAMPLING_RATIO                      0.2\n10          TREE_IMPURITY_METRIC       TREE_IMPURITY_GINI\n11           TREE_TERM_MAX_DEPTH                       16\n12         TREE_TERM_MINPCT_NODE                      .05\n13        TREE_TERM_MINPCT_SPLIT                       .1\n14         TREE_TERM_MINREC_NODE                       10\n15        TREE_TERM_MINREC_SPLIT                       20\n\nAttributes: \nalcalinity_of_ash\nalcohol\nash\ncolor_intensity\nflavanoids\nhue\nmagnesium\nnonflavanoid_phenols\nod280/od315_of_diluted_wines\nproline\ntotal_phenols\n\nPartition: NO\n\n\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_256391138","id":"20200915-175633_1130732568","dateCreated":"2020-02-19T23:51:59+0000","dateStarted":"2021-01-03T18:44:46+0000","dateFinished":"2021-01-03T18:49:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:58"},{"text":"%python\n\nsearch_space={\n        'NNET_REGULARIZER': {\n            'range': ['NNET_REGULARIZER_HELDASIDE', 'NNET_REGULARIZER_L2', 'NNET_REGULARIZER_NONE'],\n            'type': 'categorical',},\n        'NNET_ALL_ACTIVATIONS': {\n            'range': ['NNET_ACTIVATIONS_LOG_SIG', 'NNET_ACTIVATIONS_LINEAR',  'NNET_ACTIVATIONS_BIPOLAR_SIG'],\n            'type': 'categorical',},\n        'NNET_HIDDEN_LAYERS': {\n            'range': [1, 2],\n            'type': 'discrete',},\n        'NNET_NODES': {\n            'range': [10, 20],\n            'type': 'discrete',},\n        }\n\nat_wine2_reg = automl.ModelTuning(mining_function='regression', \n                                  score_metric='r2', parallel=2)\nresults2_reg = at_wine2_reg.tune('nn', WINE_X_reg, WINE_y_reg,\n                                 param_space=search_space)\nscore2_reg, params2_reg = results2_reg['all_evals'][0]\n\"{:.2}\".format(score2_reg)\n\ntuned_model2_reg = results2_reg['best_model']\ntuned_model2_reg","user":"OMLUSER","dateUpdated":"2021-01-03T18:49:05+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":6,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nAlgorithm Name: Neural Network\n\nMining Function: REGRESSION\n\nTarget: alcohol\n\nSettings: \n                    setting name               setting value\n0                      ALGO_NAME         ALGO_NEURAL_NETWORK\n1       LBFGS_GRADIENT_TOLERANCE                  .000000001\n2            LBFGS_HISTORY_DEPTH                          20\n3            LBFGS_SCALE_HESSIAN  LBFGS_SCALE_HESSIAN_ENABLE\n4               NNET_ACTIVATIONS   'NNET_ACTIVATIONS_LINEAR'\n5             NNET_HIDDEN_LAYERS                           1\n6                NNET_ITERATIONS                         100\n7           NNET_NODES_PER_LAYER                          17\n8               NNET_REGULARIZER       NNET_REGULARIZER_NONE\n9                 NNET_TOLERANCE                     .000001\n10                  ODMS_DETAILS                ODMS_DISABLE\n11  ODMS_MISSING_VALUE_TREATMENT     ODMS_MISSING_VALUE_AUTO\n12              ODMS_RANDOM_SEED                           0\n13                 ODMS_SAMPLING       ODMS_SAMPLING_DISABLE\n14                     PREP_AUTO                          ON\n\nAttributes: \nalcalinity_of_ash\nash\ncolor_intensity\nflavanoids\nhue\nmagnesium\nmalic_acid\nnonflavanoid_phenols\nod280/od315_of_diluted_wines\nproanthocyanins\nproline\ntarget\ntotal_phenols\n\nPartition: NO\n\n\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_1736345622","id":"20200915-175633_1250215482","dateCreated":"2020-02-19T23:51:59+0000","dateStarted":"2021-01-03T18:49:05+0000","dateFinished":"2021-01-03T18:52:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:59"},{"text":"%md\n\n## Automatic Model Selection\nAs a short cut, users may go directly to model selection on the training data. Model Selection automatically selects the best algorithm (using Algorithm Selection)\nfrom the set of supported algorithms, then builds, tunes and returns the model.","user":"OMLUSER","dateUpdated":"2021-01-03T18:52:17+0000","config":{"tableHide":false,"editorSetting":{"language":"md","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>Automatic Model Selection</h2>\n<p>As a short cut, users may go directly to model selection on the training data. Model Selection automatically selects the best algorithm (using Algorithm Selection)\n<br  />from the set of supported algorithms, then builds, tunes and returns the model.</p>\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_-919862874","id":"20200915-175633_298895636","dateCreated":"2020-02-19T23:51:59+0000","dateStarted":"2021-01-03T18:52:18+0000","dateFinished":"2021-01-03T18:52:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:60"},{"text":"%python\n\nms_wine = automl.ModelSelection(mining_function = 'classification', parallel=2)\n\nbest_model = ms_wine.select(WINE_X_cl, WINE_y_cl, k=1, cv=2)\nbest_model\n","user":"OMLUSER","dateUpdated":"2021-01-03T18:52:21+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":6,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(\nAlgorithm Name: Support Vector Machine\n\nMining Function: CLASSIFICATION\n\nTarget: target\n\nSettings: \n                    setting name                 setting value\n0                      ALGO_NAME  ALGO_SUPPORT_VECTOR_MACHINES\n1          CLAS_WEIGHTS_BALANCED                           OFF\n2                   ODMS_DETAILS                  ODMS_DISABLE\n3   ODMS_MISSING_VALUE_TREATMENT       ODMS_MISSING_VALUE_AUTO\n4                  ODMS_SAMPLING         ODMS_SAMPLING_DISABLE\n5                      PREP_AUTO                            ON\n6         SVMS_COMPLEXITY_FACTOR                            10\n7            SVMS_CONV_TOLERANCE                         .0001\n8           SVMS_KERNEL_FUNCTION                 SVMS_GAUSSIAN\n9                SVMS_NUM_PIVOTS                           200\n10                  SVMS_STD_DEV            2.5495097567963922\n\nAttributes: \nalcalinity_of_ash\nalcohol\nash\ncolor_intensity\nflavanoids\nhue\nmagnesium\nmalic_acid\nnonflavanoid_phenols\nod280/od315_of_diluted_wines\nproanthocyanins\nproline\ntotal_phenols\n\nPartition: NO\n\n, 'svm_gaussian')\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_383114123","id":"20200915-175633_1159510215","dateCreated":"2020-06-16T01:21:39+0000","dateStarted":"2021-01-03T18:52:21+0000","dateFinished":"2021-01-03T18:54:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:61"},{"text":"%python\n\nms_wine_reg = automl.ModelSelection(mining_function = 'regression', parallel=2)\n\nbest_model_reg = ms_wine_reg.select(WINE_X_reg, WINE_y_reg, k=1, cv=2)\nbest_model_reg\n","user":"OMLUSER","dateUpdated":"2021-01-03T18:54:29+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true},"colWidth":6,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(\nAlgorithm Name: Generalized Linear Model\n\nMining Function: REGRESSION\n\nTarget: alcohol\n\nSettings: \n                    setting name                  setting value\n0                 ADMM_CONSENSUS                             .1\n1                ADMM_ITERATIONS                             50\n2                 ADMM_TOLERANCE                          .0001\n3                      ALGO_NAME  ALGO_GENERALIZED_LINEAR_MODEL\n4                GLMS_CONF_LEVEL                            .95\n5            GLMS_FTR_GENERATION    GLMS_FTR_GENERATION_DISABLE\n6             GLMS_FTR_SELECTION     GLMS_FTR_SELECTION_DISABLE\n7            GLMS_NUM_ITERATIONS                            338\n8          GLMS_RIDGE_REGRESSION          GLMS_RIDGE_REG_ENABLE\n9               GLMS_RIDGE_VALUE                      0.0149999\n10                   GLMS_SOLVER         GLMS_SOLVER_LBFGS_ADMM\n11            GLMS_VIF_FOR_RIDGE         GLMS_VIF_RIDGE_DISABLE\n12      LBFGS_GRADIENT_TOLERANCE                     .000000001\n13           LBFGS_HISTORY_DEPTH                             20\n14           LBFGS_SCALE_HESSIAN     LBFGS_SCALE_HESSIAN_ENABLE\n15                  ODMS_DETAILS                   ODMS_DISABLE\n16  ODMS_MISSING_VALUE_TREATMENT        ODMS_MISSING_VALUE_AUTO\n17                 ODMS_SAMPLING          ODMS_SAMPLING_DISABLE\n18                     PREP_AUTO                             ON\n\nAttributes: \nalcalinity_of_ash\nash\ncolor_intensity\nflavanoids\nhue\nmagnesium\nmalic_acid\nnonflavanoid_phenols\nod280/od315_of_diluted_wines\nproanthocyanins\nproline\ntarget\ntotal_phenols\n\nPartition: NO\n\n, 'glm_ridge')\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_2124370314","id":"20200915-175633_720791840","dateCreated":"2020-06-16T00:23:47+0000","dateStarted":"2021-01-03T18:54:29+0000","dateFinished":"2021-01-03T18:57:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:62"},{"text":"%md\n\n# End of Script\n","user":"OMLUSER","dateUpdated":"2021-01-04T19:36:11+0000","config":{"editorSetting":{"language":"md","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"results":{},"enabled":true,"editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>End of Script</h1>\n"}]},"interrupted":false,"jobName":"paragraph_1600192593316_735077736","id":"20200915-175633_1177538386","dateCreated":"2020-02-19T23:51:59+0000","dateStarted":"2021-01-03T18:57:05+0000","dateFinished":"2021-01-03T18:57:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:63"},{"text":"%md\n","user":"OMLUSER","dateUpdated":"2021-01-03T18:57:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"md","editOnDblClick":false},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"interrupted":false,"jobName":"paragraph_1600192593316_-2096102574","id":"20200915-175633_1369454314","dateCreated":"2020-05-18T17:49:58+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"commited":true,"$$hashKey":"object:64"}],"name":"OML4Py -5- AutoML","id":"467953","noteParams":{},"noteForms":{},"angularObjects":{"MDW381939C745:shared_process":[],"ORA3594E6BC19:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}