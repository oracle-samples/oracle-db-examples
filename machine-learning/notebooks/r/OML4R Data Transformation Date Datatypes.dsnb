[{"layout":null,"template":null,"templateConfig":null,"name":"OML4R Data Transformation Date Datatypes","description":null,"readOnly":false,"type":"medium","paragraphs":[{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":null,"title":null,"message":[],"enabled":true,"result":{"startTime":1714498562508,"interpreter":"md.medium","endTime":1714498562568,"results":[],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":true,"width":0,"hideResult":true,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":true,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":null,"message":["%md","","# OML4R Data Transformation Date Datatypes","","In this notebook, we demonstrate how to perform various operations on date and time data using database table proxy objects using OML4R.","","Using a sequence of date and time data spanning from 2001/01/01 to 2001/12/31, we show how to do operations on date and time data. These operations include arithmetic, aggregation, ","comparisons, accessing details of data, coercion, as well as an example of ARIMA with a rolling mean window function.","","","For more information the Documentation can be found at <a href=\"https://docs.oracle.com/en/database/oracle/machine-learning/oml4r/2.0.0/oreug/prepare-and-explore-data-database.html#GUID-A1BC12C1-B431-4F71-9DC5-4ECCA0C693AC\" target=\"_blank\">OML4R documentation on preparing time series data<\/a>","","---","","Copyright (c) 2024 Oracle Corporation ","###### <a href=\"https://oss.oracle.com/licenses/upl/\" onclick=\"return ! window.open('https://oss.oracle.com/licenses/upl/');\">The Universal Permissive License (UPL), Version 1.0<\/a>"],"enabled":true,"result":{"startTime":1714498562643,"interpreter":"md.medium","endTime":1714498562705,"results":[{"message":"<h1 id=\"oml4r-data-transformation-date-datatypes\">OML4R Data Transformation Date Datatypes<\/h1>\n<p>In this notebook, we demonstrate how to perform various operations on date and time data using database table proxy objects using OML4R.<\/p>\n<p>Using a sequence of date and time data spanning from 2001/01/01 to 2001/12/31, we show how to do operations on date and time data. These operations include arithmetic, aggregation,\ncomparisons, accessing details of data, coercion, as well as an example of ARIMA with a rolling mean window function.<\/p>\n<p>For more information the Documentation can be found at <a href=\"https://docs.oracle.com/en/database/oracle/machine-learning/oml4r/2.0.0/oreug/prepare-and-explore-data-database.html#GUID-A1BC12C1-B431-4F71-9DC5-4ECCA0C693AC\" target=\"_blank\">OML4R documentation on preparing time series data<\/a><\/p>\n<hr />\n<p>Copyright (c) 2024 Oracle Corporation<\/p>\n<h6 id=\"the-universal-permissive-license-upl-version-10\"><a href=\"https://oss.oracle.com/licenses/upl/\" onclick=\"return ! window.open('https://oss.oracle.com/licenses/upl/');\">The Universal Permissive License (UPL), Version 1.0<\/a><\/h6>\n","type":"HTML"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":true,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":true,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":"Import R libraries and set seed","message":["%r","","library(ORE)","set.seed(100)"],"enabled":true,"result":{"startTime":1714498562783,"interpreter":"r.medium","endTime":1714498567787,"results":[],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":null,"message":["%md ","","## Create Datetime dataset","","Create datetime dataset as a database table with ore.push"],"enabled":true,"result":{"startTime":1714498567868,"interpreter":"md.medium","endTime":1714498567928,"results":[{"message":"<h2 id=\"create-datetime-dataset\">Create Datetime dataset<\/h2>\n<p>Create datetime dataset as a database table with ore.push<\/p>\n","type":"HTML"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":true,"width":0,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":true,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":null,"title":null,"message":["%r ","","n <- 500","","mydata <- data.frame(datetime = seq(as.POSIXct(\"2001/01/01\"), as.POSIXct(\"2001/12/31\"), length.out = n), ","                     difftime = as.difftime(runif(n), units = \"mins\"), ","                     x = rnorm(n))","","MYDATA <- ore.push(mydata) # create temporary table and return proxy object","","class(MYDATA)","class(MYDATA$datetime)","","z.show(head(MYDATA, 3))"],"enabled":true,"result":{"startTime":1714498568026,"interpreter":"r.medium","endTime":1714498568675,"results":[{"message":"'ore.frame'\n","type":"HTML"},{"message":"'ore.datetime'\n","type":"HTML"},{"message":"datetime\tdifftime\tx\n2001-01-01 00:00:00\t18.465967\t-0.771408001996856\n2001-01-01 17:30:25\t15.46035\t-0.507342353723463\n2001-01-02 11:00:50\t33.139346\t-0.270022583786385\n","type":"TABLE"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":null,"message":["%md","","## Date and time arithmetic"],"enabled":true,"result":{"startTime":1714498568755,"interpreter":"md.medium","endTime":1714498568816,"results":[{"message":"<h2 id=\"date-and-time-arithmetic\">Date and time arithmetic<\/h2>\n","type":"HTML"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":true,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":true,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"raw","title":"Create day1Shift dataset by adding 1 day to each date in MYDATA$datetime","message":["%r  ","","options(\"width\"=200)","","day1Shift <- MYDATA$datetime + as.difftime(1, units = \"days\")","","cat(class(day1Shift), \"\\n\")","head(MYDATA$datetime, 3)","cat(\"\\n\")","head(day1Shift, 3)"],"enabled":true,"result":{"startTime":1714498568890,"interpreter":"r.medium","endTime":1714498569114,"results":[{"message":"ore.datetime \n[1] \"2001-01-01 00:00:00 UTC\" \"2001-01-01 17:30:25 UTC\" \"2001-01-02 11:00:50 UTC\"\n[1] \"2001-01-02 00:00:00 UTC\" \"2001-01-02 17:30:25 UTC\" \"2001-01-03 11:00:50 UTC\"","type":"TEXT"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"raw","title":"Use diff function to get the differences in time between each value of MYDATA$datetime.","message":["%r","","lag1Diff <- diff(MYDATA$datetime)","cat(class(lag1Diff), \"\\n\")","head(lag1Diff, 3)"],"enabled":true,"result":{"startTime":1714498569190,"interpreter":"r.medium","endTime":1714498569312,"results":[{"message":"ore.difftime \nTime differences in secs\n[1] 63025.25 63025.25 63025.25","type":"TEXT"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":null,"message":["%md","","## Date and time aggregates","","Obtain statistical aggregates of your date and time data."],"enabled":true,"result":{"startTime":1714498569390,"interpreter":"md.medium","endTime":1714498569452,"results":[{"message":"<h2 id=\"date-and-time-aggregates\">Date and time aggregates<\/h2>\n<p>Obtain statistical aggregates of your date and time data.<\/p>\n","type":"HTML"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":true,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":true,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"raw","title":null,"message":["%r","","min(MYDATA$datetime)"],"enabled":true,"result":{"startTime":1714498569525,"interpreter":"r.medium","endTime":1714498569710,"results":[{"message":"[1] \"2001-01-01 UTC\"","type":"TEXT"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":6,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"raw","title":null,"message":["%r","","max(MYDATA$datetime)"],"enabled":true,"result":{"startTime":1714498569785,"interpreter":"r.medium","endTime":1714498569906,"results":[{"message":"[1] \"2001-12-31 UTC\"","type":"TEXT"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":6,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"raw","title":null,"message":["%r","","range(MYDATA$datetime)"],"enabled":true,"result":{"startTime":1714498569979,"interpreter":"r.medium","endTime":1714498570098,"results":[{"message":"[1] \"2001-01-01 UTC\" \"2001-12-31 UTC\"","type":"TEXT"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":6,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"raw","title":null,"message":["%r","","median(MYDATA$datetime)"],"enabled":true,"result":{"startTime":1714498570172,"interpreter":"r.medium","endTime":1714498570356,"results":[{"message":"[1] \"2001-07-02 UTC\"","type":"TEXT"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":6,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"raw","title":"Calculate quantiles at the 0%, 5%, and 10% marks","message":["%r ","","quantile(MYDATA$datetime, probs = c(0, 0.05, 0.10))"],"enabled":true,"result":{"startTime":1714498570433,"interpreter":"r.medium","endTime":1714498571630,"results":[{"message":"                       0%                        5%                       10% \n\"2001-01-01 00:00:00 UTC\" \"2001-01-19 04:47:59 UTC\" \"2001-02-06 09:35:59 UTC\" ","type":"TEXT"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":null,"message":["%md","","## Date and time comparisons"],"enabled":true,"result":{"startTime":1714498571709,"interpreter":"md.medium","endTime":1714498571771,"results":[{"message":"<h2 id=\"date-and-time-comparisons\">Date and time comparisons<\/h2>\n","type":"HTML"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":true,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":true,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"raw","title":"Use comparison to identify all data that is in Q1","message":["%r ","","isQ1 <- MYDATA$datetime < as.Date(\"2001/04/01\")","cat(class(isQ1), \"\\n\")","head(isQ1, 3)"],"enabled":true,"result":{"startTime":1714498571850,"interpreter":"r.medium","endTime":1714498572121,"results":[{"message":"ore.logical \n[1] TRUE TRUE TRUE","type":"TEXT"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"raw","title":"Use comparison and identified Q1 data to identify subset of data that is in March","message":["%r","","isMarch <- isQ1 & MYDATA$datetime > as.Date(\"2001/03/01\")","cat(class(isMarch), \"\\n\")","cat(sum(isMarch), \"\\n\")","head(isMarch[70:85,], 100)"],"enabled":true,"result":{"startTime":1714498572198,"interpreter":"r.medium","endTime":1714498572521,"results":[{"message":"ore.logical \n43 \n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE","type":"TEXT"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":null,"title":"Use comparison to get subset of data that is at the end of the year","message":["%r   ","","eoySubset <- MYDATA[MYDATA$datetime > as.Date(\"2001/12/27\"), ]","class(eoySubset)","z.show(head(eoySubset))"],"enabled":true,"result":{"startTime":1714498572596,"interpreter":"r.medium","endTime":1714498572868,"results":[{"message":"'ore.frame'\n","type":"HTML"},{"message":"datetime\tdifftime\tx\n2001-12-27 08:27:53\t6.263731\t-1.33717666886641\n2001-12-28 01:58:18\t34.794086\t2.31131788765912\n2001-12-28 19:28:44\t19.985368\t-0.350491028513415\n2001-12-29 12:59:09\t0.226655\t-0.321103323805441\n2001-12-30 06:29:34\t59.675767\t-0.428961592336069\n2001-12-31 00:00:00\t22.154092\t-0.229611260023931\n","type":"TABLE"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":null,"message":["%md","","## Date and time accessors","","Extract various features from your date and time data.","","Create a function to extract all details from data given a dataframe DF and column name dates.","After running this function, an attribute importance algorithm can then tell you how impactful these new columns are."],"enabled":true,"result":{"startTime":1714498572947,"interpreter":"md.medium","endTime":1714498573008,"results":[{"message":"<h2 id=\"date-and-time-accessors\">Date and time accessors<\/h2>\n<p>Extract various features from your date and time data.<\/p>\n<p>Create a function to extract all details from data given a dataframe DF and column name dates.\nAfter running this function, an attribute importance algorithm can then tell you how impactful these new columns are.<\/p>\n","type":"HTML"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":true,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":true,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":null,"message":["%r","","dateFeatureExtraction <- function(dat, dateCol){","  ","  datesIndex <- which(colnames(dat) == dateCol)","  colnames(dat)[datesIndex] <- \"datesCol\"","  ","  dat <- cbind(dat, year = ore.year(dat$datesCol), month = ore.month(dat$datesCol),","               dayOfMonth = ore.mday(dat$datesCol), hour = ore.hour(dat$datesCol),","               minute = ore.minute(dat$datesCol), second = ore.second(dat$datesCol))","  ","  colnames(dat)[datesIndex] <- dateCol","  ","  return(dat)","}"],"enabled":true,"result":{"startTime":1714498573085,"interpreter":"r.medium","endTime":1714498573208,"results":[],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"table","title":"Extract details from MYDATA and view data","message":["%r ","","DATE_DETAILS <- dateFeatureExtraction(MYDATA, \"datetime\")","","z.show(head(DATE_DETAILS))"],"enabled":true,"result":{"startTime":1714498573286,"interpreter":"r.medium","endTime":1714498573473,"results":[{"message":"datetime\tdifftime\tx\tyear\tmonth\tdayOfMonth\thour\tminute\tsecond\n2001-01-01 00:00:00\t18.465967\t-0.771408001996856\t2001\t1\t1\t0\t0\t0\n2001-01-01 17:30:25\t15.46035\t-0.507342353723463\t2001\t1\t1\t17\t30\t25.250501\n2001-01-02 11:00:50\t33.139346\t-0.270022583786385\t2001\t1\t2\t11\t0\t50.501002\n2001-01-03 04:31:15\t3.382989\t0.74811656342622\t2001\t1\t3\t4\t31\t15.751503\n2001-01-03 22:01:41\t28.112957\t0.668593810460555\t2001\t1\t3\t22\t1\t41.002004\n2001-01-04 15:32:06\t29.026244\t-0.455298660081533\t2001\t1\t4\t15\t32\t6.252505\n","type":"TABLE"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":null,"message":["%md","","## Date and time Coercion","","Coerce details of your date and time data to other datatypes"],"enabled":true,"result":{"startTime":1714498573551,"interpreter":"md.medium","endTime":1714498573613,"results":[{"message":"<h2 id=\"date-and-time-coercion\">Date and time Coercion<\/h2>\n<p>Coerce details of your date and time data to other datatypes<\/p>\n","type":"HTML"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":true,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":true,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":null,"title":"Coercion to date only and ore.date datatype","message":["%r ","","dateOnly <- as.ore.date(MYDATA$datetime)","class(dateOnly)","head(sort(unique(dateOnly)), 3)"],"enabled":true,"result":{"startTime":1714498573690,"interpreter":"r.medium","endTime":1714498574687,"results":[{"message":"'ore.date'\n","type":"HTML"},{"message":"<style>\n.list-inline {list-style: none; margin:0; padding: 0}\n.list-inline>li {display: inline-block}\n.list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n<\/style>\n<ol class=list-inline><li><time datetime=\"2001-01-01\">2001-01-01<\/time><\/li><li><time datetime=\"2001-01-02\">2001-01-02<\/time><\/li><li><time datetime=\"2001-01-03\">2001-01-03<\/time><\/li><\/ol>\n","type":"HTML"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"raw","title":"Coercion to name of day and ore.character datatype","message":["%r"," ","nameOfDay <- as.ore.character(MYDATA$datetime, format = \"DAY\")","cat(class(nameOfDay), \"\\n\")","sort(unique(nameOfDay))"],"enabled":true,"result":{"startTime":1714498574767,"interpreter":"r.medium","endTime":1714498574951,"results":[{"message":"ore.character \n[1] \"FRIDAY   \" \"MONDAY   \" \"SATURDAY \" \"SUNDAY   \" \"THURSDAY \" \"TUESDAY  \" \"WEDNESDAY\"","type":"TEXT"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":null,"title":"Coercion to day of year and ore.integer datatype","message":["%r ","","dayOfYear <- as.integer(as.character(MYDATA$datetime, format = \"DDD\"))","class(dayOfYear)","range(dayOfYear)"],"enabled":true,"result":{"startTime":1714498575028,"interpreter":"r.medium","endTime":1714498575216,"results":[{"message":"'ore.integer'\n","type":"HTML"},{"message":"<style>\n.list-inline {list-style: none; margin:0; padding: 0}\n.list-inline>li {display: inline-block}\n.list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n<\/style>\n<ol class=list-inline><li>1<\/li><li>365<\/li><\/ol>\n","type":"HTML"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":null,"title":"Coercion to week of year and ore.integer datatype","message":["%r","","weekOfYear <- as.integer(as.character(MYDATA$datetime, format = \"WW\"))","class(weekOfYear)","range(weekOfYear)"],"enabled":true,"result":{"startTime":1714498575297,"interpreter":"r.medium","endTime":1714498575484,"results":[{"message":"'ore.integer'\n","type":"HTML"},{"message":"<style>\n.list-inline {list-style: none; margin:0; padding: 0}\n.list-inline>li {display: inline-block}\n.list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n<\/style>\n<ol class=list-inline><li>1<\/li><li>53<\/li><\/ol>\n","type":"HTML"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"raw","title":"Coercion to quarter and ore.integer datatype ","message":["%r","","quarter <- as.integer(as.character(MYDATA$datetime, format = \"Q\"))","cat(class(quarter), \"\\n\")","sort(unique(quarter))"],"enabled":true,"result":{"startTime":1714498575567,"interpreter":"r.medium","endTime":1714498575753,"results":[{"message":"ore.integer \n[1] 1 2 3 4","type":"TEXT"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":null,"message":["%md","","## ARIMA example with rolling mean window function"],"enabled":true,"result":{"startTime":1714498575832,"interpreter":"md.medium","endTime":1714498575895,"results":[{"message":"<h2 id=\"arima-example-with-rolling-mean-window-function\">ARIMA example with rolling mean window function<\/h2>\n","type":"HTML"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":true,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":true,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"table","title":"Add rolling mean columns to the dataset using functions ore.rollmean and ore.rollsd","message":["%r","","row.names(MYDATA) <- MYDATA$datetime","MYDATA$rollmean5 <- ore.rollmean(MYDATA$x, k = 5)","","MYDATA$rollsd5 <- ore.rollsd(MYDATA$x, k = 5)","","z.show(head(MYDATA))"],"enabled":true,"result":{"startTime":1714498575995,"interpreter":"r.medium","endTime":1714498576568,"results":[{"message":"datetime\tdifftime\tx\trollmean5\trollsd5\n2001-01-01 00:00:00\t18.465967\t-0.771408001996856\t-0.516257646502235\t0.250811575156571\n2001-01-01 17:30:25\t15.46035\t-0.507342353723463\t-0.200164094020121\t0.664528529488939\n2001-01-02 11:00:50\t33.139346\t-0.270022583786385\t-0.0264125131239859\t0.694367830618671\n2001-01-03 04:31:15\t3.382989\t0.74811656342622\t0.0368093552590786\t0.619985234137527\n2001-01-03 22:01:41\t28.112957\t0.668593810460555\t-0.24729121885517\t1.08371209457437\n2001-01-04 15:32:06\t29.026244\t-0.455298660081533\t0.183108711300886\t1.44090022507514\n","type":"TABLE"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":"Get subset of MYDATA for month of March","message":["%r ","","marchData <- ore.pull(MYDATA[isMarch,])"],"enabled":true,"result":{"startTime":1714498576645,"interpreter":"r.medium","endTime":1714498577080,"results":[],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":"ARIMA example on column x","message":["%r","","# Use ts function to convert marchData$x to time-series data","tseries.x <- ts(marchData$x)","","# Apply arima function to time series data","arima110.x <- arima(tseries.x, c(1,1,0))","","# Use arima model to predict 3 periods into the future.","predict(arima110.x, 3)"],"enabled":true,"result":{"startTime":1714498577154,"interpreter":"r.medium","endTime":1714498577276,"results":[{"message":"<dl>\n\t<dt>$pred<\/dt>\n\t\t<dd>A Time Series:<br><style>\n.list-inline {list-style: none; margin:0; padding: 0}\n.list-inline>li {display: inline-block}\n.list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n<\/style>\n<ol class=list-inline><li>0.737665008766931<\/li><li>0.737107845887169<\/li><li>0.737403253131558<\/li><\/ol>\n<\/dd>\n\t<dt>$se<\/dt>\n\t\t<dd>A Time Series:<br><style>\n.list-inline {list-style: none; margin:0; padding: 0}\n.list-inline>li {display: inline-block}\n.list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n<\/style>\n<ol class=list-inline><li>1.52717485052426<\/li><li>1.68731253103124<\/li><li>2.04012596396468<\/li><\/ol>\n<\/dd>\n<\/dl>\n","type":"HTML"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":"ARIMA example on column rm5","message":["%r","","# Use ts function to convert marchData$rollmean5 to time-series data","tseries.rm5 <- ts(marchData$rollmean5)","","# Apply arima function to time series data","arima110.rm5 <- arima(tseries.rm5, c(1,1,0))","","# Use arima model to predict 3 periods into the future","predict(arima110.rm5, 3)"],"enabled":true,"result":{"startTime":1714498577360,"interpreter":"r.medium","endTime":1714498577482,"results":[{"message":"<dl>\n\t<dt>$pred<\/dt>\n\t\t<dd>A Time Series:<br><style>\n.list-inline {list-style: none; margin:0; padding: 0}\n.list-inline>li {display: inline-block}\n.list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n<\/style>\n<ol class=list-inline><li>0.0500358177001674<\/li><li>0.0500209842289667<\/li><li>0.0500210887985084<\/li><\/ol>\n<\/dd>\n\t<dt>$se<\/dt>\n\t\t<dd>A Time Series:<br><style>\n.list-inline {list-style: none; margin:0; padding: 0}\n.list-inline>li {display: inline-block}\n.list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n<\/style>\n<ol class=list-inline><li>0.377205002878134<\/li><li>0.531571466289616<\/li><li>0.650282151047021<\/li><\/ol>\n<\/dd>\n<\/dl>\n","type":"HTML"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":false,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":true,"hideVizConfig":false,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":null,"message":["%md","","# End of script"],"enabled":true,"result":{"startTime":1714498577559,"interpreter":"md.medium","endTime":1714498577620,"results":[{"message":"<h1 id=\"end-of-script\">End of script<\/h1>\n","type":"HTML"}],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":true,"width":12,"hideResult":false,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":true,"hideGutter":true,"relations":[],"forms":"[]"},{"col":0,"visualizationConfig":null,"hideInIFrame":false,"selectedVisualization":"html","title":null,"message":[],"enabled":true,"result":{"startTime":1714498577698,"interpreter":"md.medium","endTime":1714498577758,"results":[],"taskStatus":"SUCCESS","forms":"[]","status":"SUCCESS"},"sizeX":0,"hideCode":true,"width":0,"hideResult":true,"dynamicFormParams":null,"row":0,"hasTitle":false,"hideVizConfig":true,"hideGutter":true,"relations":[],"forms":"[]"}],"version":"6","snapshot":false,"tags":null}]