{
  "paragraphs": [
    {
      "text": "%md\n\n# OML4Py REST API for invoking embedded R execution\n\nOn Oracle Autonomous Database, OML4Py contains a REST API to run user-defined Python functions saved in the script repository. REST APIs can be called from a web development application, improving the portability of the interface to other types of platforms, increasing project scalability, and allowing components to evolve independently. Use the OML4Py REST API to invoke user-defined Python functions and to list those available in the Python script repository\n\nTo run a script, it must reside in the Python script repository. An Oracle Machine Learning cloud service account **username** and **password** must be provided for authentication.\n\n### **REST API Workflow**\n\nIn this workflow, we highlight a few of the features of the REST API:\n\n- authenticating the database user and obtaining a token\n- loading a database table into the database\n- saving scripts in the database Python script repository\n- executing the saved Python scripts from the REST API using both synchronous and asynchronous modes\n\n\nCopyright (c) 2022 Oracle Corporation \n###### <a href=\"https://oss.oracle.com/licenses/upl/\" onclick=\"return ! window.open('https://oss.oracle.com/licenses/upl/');\">The Universal Permissive License (UPL), Version 1.0</a>\n---",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:42:00+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "graph": {
          "mode": "table",
          "height": 300,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h1>OML4Py REST API for invoking embedded R execution</h1>\n<p>On Oracle Autonomous Database, OML4Py contains a REST API to run user-defined Python functions saved in the script repository. REST APIs can be called from a web development application, improving the portability of the interface to other types of platforms, increasing project scalability, and allowing components to evolve independently. Use the OML4Py REST API to invoke user-defined Python functions and to list those available in the Python script repository</p>\n<p>To run a script, it must reside in the Python script repository. An Oracle Machine Learning cloud service account <strong>username</strong> and <strong>password</strong> must be provided for authentication.</p>\n<h3><strong>REST API Workflow</strong></h3>\n<p>In this workflow, we highlight a few of the features of the REST API:</p>\n<ul>\n<li>authenticating the database user and obtaining a token</li>\n<li>loading a database table into the database</li>\n<li>saving scripts in the database Python script repository</li>\n<li>executing the saved Python scripts from the REST API using both synchronous and asynchronous modes</li>\n</ul>\n<p>Copyright (c) 2022 Oracle Corporation</p>\n<h6><a href=\"https: //oss.oracle.com/licenses/upl/\" onclick=\"return ! window.open('https://oss.oracle.com/licenses/upl/');\">The Universal Permissive License (UPL), Version 1.0</a></h6>\n<hr />\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_1541796990",
      "id": "20220701-211935_75320687",
      "dateCreated": "2020-06-10T19:04:55+0000",
      "dateStarted": "2022-08-01T15:39:19+0000",
      "dateFinished": "2022-08-01T15:39:20+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:41"
    },
    {
      "text": "%md\n\nOracle ADW Documentation <a href=\"https://docs.oracle.com/en/cloud/paas/autonomous-data-warehouse-cloud/index.html\" onclick=\"return ! window.open('https://docs.oracle.com/en/cloud/paas/autonomous-data-warehouse-cloud/index.html');\">https://docs.oracle.com/en/cloud/paas/autonomous-data-warehouse-cloud/index.html</a>\nOML folder on Oracle Github : <a href=\"https://github.com/oracle/oracle-db-examples/tree/master/machine-learning\" onclick=\"return ! window.open('https://github.com/oracle/oracle-db-examples/tree/master/machine-learning');\">https://github.com/oracle/oracle-db-examples/tree/master/machine-learning</a>\nOML web page: <a href=\"https://www.oracle.com/machine-learning\" onclick=\"return ! window.open('https://www.oracle.com/machine-learning');\">https://www.oracle.com/machine-learning</a>",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>Oracle ADW Documentation <a href=\"https: //docs.oracle.com/en/cloud/paas/autonomous-data-warehouse-cloud/index.html\" onclick=\"return ! window.open('https://docs.oracle.com/en/cloud/paas/autonomous-data-warehouse-cloud/index.html');\">https://docs.oracle.com/en/cloud/paas/autonomous-data-warehouse-cloud/index.html</a>\n<br  />OML folder on Oracle Github : <a href=\"https: //github.com/oracle/oracle-db-examples/tree/master/machine-learning\" onclick=\"return ! window.open('https://github.com/oracle/oracle-db-examples/tree/master/machine-learning');\">https://github.com/oracle/oracle-db-examples/tree/master/machine-learning</a>\n<br  />OML web page: <a href=\"https: //www.oracle.com/machine-learning\" onclick=\"return ! window.open('https://www.oracle.com/machine-learning');\">https://www.oracle.com/machine-learning</a></p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1657060141674_422213772",
      "id": "paragraph_1657060141674_422213772",
      "dateCreated": "2022-07-05T22:29:01+0000",
      "dateStarted": "2022-08-01T15:39:20+0000",
      "dateFinished": "2022-08-01T15:39:20+0000",
      "status": "FINISHED",
      "$$hashKey": "object:42"
    },
    {
      "text": "%md\n\n### **REST API Authentication**\n\nTo authenticate and obtain a token, use **cURL** with the **-d** option to pass the credentials for your Oracle Machine Learning account against the Oracle Machine Learning user management cloud service REST endpoint */oauth2/v1/token*. \n\n    $ curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"grant_type\":\"password\", \"username\":\"'<yourusername>'\", \n    \"password\":\"' <yourpassword>'\"}' \"<oml-cloud-service-url>/omlusers/api/oauth2/v1/token\"\n    \nwhere   \n\n* _-X POST_ specifies to use a POST request when communicating with the HTTP server\n* _--header_ defines the headers required for the request (application/json)\n* _-d <data>_ sends the username and password authentication credentials as data in a POST request to the HTTP server\n* _Content-Type_ and _Accept_ define the response format (JSON)\n* _yourusername_ is the user name of a Oracle Machine Learning user with the default OML_DEVELOPER role\n* _yourpassword_ is the password for the user name\n* _oml-cloud-service-url_ is the REST server portion of the Oracle Machine Learning user management cloud service instance\n\nFor example, Oracle Machine Learning user **OMLUSER** with password **OMLPASSWD** and cloud service url **https://qtraya2braestch-omldb.adb.us-sanjose-1.oraclecloudapps.com** authenticates and obtain a REST token using the following approach:\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {
          "oml_server": ""
        },
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h3><strong>REST API Authentication</strong></h3>\n<p>To authenticate and obtain a token, use <strong>cURL</strong> with the <strong>-d</strong> option to pass the credentials for your Oracle Machine Learning account against the Oracle Machine Learning user management cloud service REST endpoint <em>/oauth2/v1/token</em>.</p>\n<pre><code>$ curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"grant_type\":\"password\", \"username\":\"'&lt;yourusername&gt;'\", \n\"password\":\"' &lt;yourpassword&gt;'\"}' \"&lt;oml-cloud-service-url&gt;/omlusers/api/oauth2/v1/token\"\n</code></pre>\n<p>where</p>\n<ul>\n<li><em>-X POST</em> specifies to use a POST request when communicating with the HTTP server</li>\n<li><em>&ndash;header</em> defines the headers required for the request (application/json)</li>\n<li><em>-d <data></em> sends the username and password authentication credentials as data in a POST request to the HTTP server</li>\n<li><em>Content-Type</em> and <em>Accept</em> define the response format (JSON)</li>\n<li><em>yourusername</em> is the user name of a Oracle Machine Learning user with the default OML_DEVELOPER role</li>\n<li><em>yourpassword</em> is the password for the user name</li>\n<li><em>oml-cloud-service-url</em> is the REST server portion of the Oracle Machine Learning user management cloud service instance</li>\n</ul>\n<p>For example, Oracle Machine Learning user <strong>OMLUSER</strong> with password <strong>OMLPASSWD</strong> and cloud service url <strong>https://qtraya2braestch-omldb.adb.us-sanjose-1.oraclecloudapps.com</strong> authenticates and obtain a REST token using the following approach:</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-1694404374",
      "id": "20220701-211935_1822215302",
      "dateCreated": "2020-06-14T18:38:33+0000",
      "dateStarted": "2022-08-01T15:39:21+0000",
      "dateFinished": "2022-08-01T15:39:21+0000",
      "status": "FINISHED",
      "$$hashKey": "object:43"
    },
    {
      "text": "%md\n___________________________________________________________________________________________________________________________________________________________________________________________________________________________\nExport the OML cloud service URL to the environment variable `omlserver`, the OML username to environment variable `username`, and the password to environment variable `password`, then exchange the OML user credentials for an access token using a `cURL` command.\n\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<hr />\n<p>Export the OML cloud service URL to the environment variable <code>omlserver</code>, the OML username to environment variable <code>username</code>, and the password to environment variable <code>password</code>, then exchange the OML user credentials for an access token using a <code>cURL</code> command.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-1728963585",
      "id": "20220701-211935_1235404262",
      "dateCreated": "2020-08-11T23:07:01+0000",
      "dateStarted": "2022-08-01T15:39:21+0000",
      "dateFinished": "2022-08-01T15:39:21+0000",
      "status": "FINISHED",
      "$$hashKey": "object:44"
    },
    {
      "text": "\n$ export omlserver=https://qtraya2braestch-omldb.adb.us-sanjose-1.oraclecloudapps.com\n$ export username=OMLUSER\n$ export password=OMLPASSWD\n\ncurl -i -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"grant_type\":\"password\", \"username\":\"'${username}'\", \"password\":\"'${password}'\"}' \"${omlserver}/omlusers/api/oauth2/v1/token\"\n\n  HTTP/1.1 200 OK\n  Date: Wed, 09 Mar 2022 21:59:16 GMT\n  Content-Type: application/json\n  Content-Length: 1027\n  Connection: keep-alive\n  Cache-Control: no-cache, no-store, private\n  X-Frame-Options: SAMEORIGIN\n  X-XSS-Protection: 1;mode=block\n  Strict-Transport-Security: max-age=31536000; includeSubDomains\n  X-Content-Type-Options: nosniff\n\n  {\"accessToken\":\"eyJhbGciOiJ...\",\"expiresIn\":3600,\"tokenType\":\"Bearer\"}\n\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-1772971452",
      "id": "20220701-211935_662630565",
      "dateCreated": "2020-08-11T23:04:41+0000",
      "status": "FINISHED",
      "$$hashKey": "object:45"
    },
    {
      "text": "%md \n______________________________________________________________________________________________________________________________________________________________________________________________________________________________\nCopy the `accessToken` field from the response and assign it to variable token, surrounded by single quotes. A token has a lifecycle of 3600 seconds, or 1 hour, and it can be refreshed for up to 8 hours.",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<hr />\n<p>Copy the <code>accessToken</code> field from the response and assign it to variable token, surrounded by single quotes. A token has a lifecycle of 3600 seconds, or 1 hour, and it can be refreshed for up to 8 hours.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-908807997",
      "id": "20220701-211935_1233573648",
      "dateCreated": "2020-08-11T23:07:51+0000",
      "dateStarted": "2022-08-01T15:39:22+0000",
      "dateFinished": "2022-08-01T15:39:22+0000",
      "status": "FINISHED",
      "$$hashKey": "object:46"
    },
    {
      "text": "$ export token='eyJhbGciOiJ...'",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "editorHide": false,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_854245908",
      "id": "20220701-211935_1131727450",
      "dateCreated": "2020-08-11T23:08:13+0000",
      "status": "FINISHED",
      "$$hashKey": "object:47"
    },
    {
      "title": "Load a Python DataFrame to an Oracle Database table",
      "text": "%md\n______________________________________________________________________________________________________________________________________________________________________________________________________________________________\nUsing the `oml.create` function, create an OML proxy object `IRIS_PY` from the `iris` data. The OML proxy object `IRIS_PY` represents a database table. We first drop the table if already exists, and display the first 6 rows of the `IRIS_PY` proxy object. \n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<hr />\n<p>Using the <code>oml.create</code> function, create an OML proxy object <code>IRIS_PY</code> from the <code>iris</code> data. The OML proxy object <code>IRIS_PY</code> represents a database table. We first drop the table if already exists, and display the first 6 rows of the <code>IRIS_PY</code> proxy object.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-612926384",
      "id": "20220701-211935_472295975",
      "dateCreated": "2020-06-14T19:55:10+0000",
      "dateStarted": "2022-08-01T15:39:22+0000",
      "dateFinished": "2022-08-01T15:39:22+0000",
      "status": "FINISHED",
      "$$hashKey": "object:48"
    },
    {
      "text": "%python\n\nimport oml\nimport pandas as pd\nfrom sklearn.datasets import load_iris\n\niris = load_iris()\nX = pd.DataFrame(iris.data, \n                 columns = [\"SEPAL_LENGTH\", \"SEPAL_WIDTH\", \"PETAL_LENGTH\", \"PETAL_WIDTH\"])\ny = pd.DataFrame(list(map(lambda x: {0:'setosa', 1: 'versicolor', 2:'virginica'}[x], iris.target)), \n                 columns = ['SPECIES'])\n\niris_df = pd.concat([X, y], axis=1)\ntry:\n    oml.drop(table='IRIS_PY')\nexcept:\n    pass\nIRIS_PY = oml.create(iris_df, table = 'IRIS_PY')\n\nz.show(IRIS_PY.head())\n\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "editorHide": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "SEPAL_LENGTH": "string",
                      "SEPAL_WIDTH": "string",
                      "PETAL_LENGTH": "string",
                      "PETAL_WIDTH": "string",
                      "SPECIES": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "SEPAL_LENGTH\tSEPAL_WIDTH\tPETAL_LENGTH\tPETAL_WIDTH\tSPECIES\n4.6\t3.6\t1\t0.2\tsetosa\n5.1\t2.5\t3\t1.1\tversicolor\n6.0\t2.2\t4\t1.0\tversicolor\n5.8\t2.6\t4\t1.2\tversicolor\n5.5\t2.3\t4\t1.3\tversicolor\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-622627243",
      "id": "20220701-211935_1275955934",
      "dateCreated": "2020-06-14T19:56:19+0000",
      "dateStarted": "2022-08-01T15:39:23+0000",
      "dateFinished": "2022-08-01T15:39:34+0000",
      "status": "FINISHED",
      "$$hashKey": "object:49"
    },
    {
      "title": "Create a Python script and save it to the Python script repository",
      "text": "%md\n\n____________________________________________________________________________________________________________________________________________________________________________________________________________________________\nCreate a function `group_count_py` that returns the counts for each category in the `SPECIES` column.  Save the `group_count_py` function to the Python script repository using `oml.script.create`, overwriting any existing script with the same name. The script is invoked from the Python interface, followed by the OML4Py Python and REST APIs for embedded Python execution.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<hr />\n<p>Create a function <code>group_count_py</code> that returns the counts for each category in the <code>SPECIES</code> column.  Save the <code>group_count_py</code> function to the Python script repository using <code>oml.script.create</code>, overwriting any existing script with the same name. The script is invoked from the Python interface, followed by the OML4Py Python and REST APIs for embedded Python execution.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_47057711",
      "id": "20220701-211935_869071384",
      "dateCreated": "2020-06-14T18:31:13+0000",
      "dateStarted": "2022-08-01T15:39:34+0000",
      "dateFinished": "2022-08-01T15:39:34+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50"
    },
    {
      "text": "%python\n\ndef group_count_py(dat):\n    import pandas as pd\n    return pd.DataFrame([(dat[\"SPECIES\"][0], dat.shape[0])],  columns = [\"SPECIES\", \"COUNT\"])\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656712042931_2103424631",
      "id": "paragraph_1656712042931_2103424631",
      "dateCreated": "2022-07-01T21:47:22+0000",
      "dateStarted": "2022-08-01T15:39:34+0000",
      "dateFinished": "2022-08-01T15:39:34+0000",
      "status": "FINISHED",
      "$$hashKey": "object:51"
    },
    {
      "title": "Run the script in Python",
      "text": "%python\n\ngroup_count_py(iris_df)",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "  SPECIES  COUNT\n0  setosa    150\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656711237727_641436192",
      "id": "paragraph_1656711237727_641436192",
      "dateCreated": "2022-07-01T21:33:57+0000",
      "dateStarted": "2022-08-01T15:39:34+0000",
      "dateFinished": "2022-08-01T15:39:34+0000",
      "status": "FINISHED",
      "$$hashKey": "object:52"
    },
    {
      "text": "%python\n\ngroup_count_py = \"\"\"def group_count_py(dat):\n  import oml\n  import pandas as pd\n  return pd.DataFrame([(dat[\"SPECIES\"][0], dat.shape[0])], columns = [\"SPECIES\", \"COUNT\"])\"\"\"\n\n\noml.script.create(\"group_count_py\", func=group_count_py, overwrite=True) \n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-233208377",
      "id": "20220701-211935_1452261409",
      "dateCreated": "2020-06-14T20:17:35+0000",
      "dateStarted": "2022-08-01T15:39:35+0000",
      "dateFinished": "2022-08-01T15:39:35+0000",
      "status": "FINISHED",
      "$$hashKey": "object:53"
    },
    {
      "title": "View the Python script in the script repository",
      "text": "%md\n\nTo check for the existence of the saved `group_count_py` script from the OML4Py Python interface, run the function `oml.script.dir`.",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>To check for the existence of the saved <code>group_count_py</code> script from the OML4Py Python interface, run the function <code>oml.script.dir</code>.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_1166399989",
      "id": "20220701-211935_1596588315",
      "dateCreated": "2020-06-15T21:48:12+0000",
      "dateStarted": "2022-08-01T15:39:35+0000",
      "dateFinished": "2022-08-01T15:39:35+0000",
      "status": "FINISHED",
      "$$hashKey": "object:54"
    },
    {
      "text": "%python\n\noml.script.dir(sctype='all')[['name', 'owner']]\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "             name    owner\n0     build_lm_py  OMLUSER\n1  group_count_py  OMLUSER\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-1502485307",
      "id": "20220701-211935_190987484",
      "dateCreated": "2020-06-15T21:50:56+0000",
      "dateStarted": "2022-08-01T15:39:35+0000",
      "dateFinished": "2022-08-01T15:39:35+0000",
      "status": "FINISHED",
      "$$hashKey": "object:55"
    },
    {
      "title": "Run the script using group_apply",
      "text": "%md\n\nThe `group_apply` function runs a user-defined function on data grouped by a specified column in the database environment. In this case, the grouping column is `SPECIES` and the script is `group_count_py`.\n\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>The <code>group_apply</code> function runs a user-defined function on data grouped by a specified column in the database environment. In this case, the grouping column is <code>SPECIES</code> and the script is <code>group_count_py</code>.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1657060920645_1371888580",
      "id": "paragraph_1657060920645_1371888580",
      "dateCreated": "2022-07-05T22:42:00+0000",
      "dateStarted": "2022-08-01T15:39:36+0000",
      "dateFinished": "2022-08-01T15:39:36+0000",
      "status": "FINISHED",
      "$$hashKey": "object:56"
    },
    {
      "text": "%python\n\nindex = IRIS_PY['SPECIES']\n\nres = oml.group_apply(IRIS_PY, index, func=group_count_py, oml_input_type=\"pandas.DataFrame\")\n\nres",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "SPECIES": "string",
                      "SEPAL_LENGTH": "string",
                      "COUNT": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "{'virginica':      SPECIES  COUNT\n0  virginica     50, 'setosa':   SPECIES  COUNT\n0  setosa     50, 'versicolor':       SPECIES  COUNT\n0  versicolor     50}\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_1475070891",
      "id": "20220701-211935_2144415557",
      "dateCreated": "2020-06-14T21:10:59+0000",
      "dateStarted": "2022-08-01T15:39:36+0000",
      "dateFinished": "2022-08-01T15:39:37+0000",
      "status": "FINISHED",
      "$$hashKey": "object:57"
    },
    {
      "text": "%md\n\n### **Synchronous REST API calls**",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {
          "oml_server": "",
          "token": ""
        },
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h3><strong>Synchronous REST API calls</strong></h3>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_1263326668",
      "id": "20220701-211935_600075097",
      "dateCreated": "2020-06-10T19:08:58+0000",
      "dateStarted": "2022-08-01T15:39:38+0000",
      "dateFinished": "2022-08-01T15:39:38+0000",
      "status": "FINISHED",
      "$$hashKey": "object:58"
    },
    {
      "title": "View script in the Python script repository using REST",
      "text": "%md\n\nVerify the existence of `group_count_py` in the script repository again, this time using the REST API with `cURL`. Send a GET request to the scripts endpoint, and the scripts available to the OML user are returned in JSON format.\n\nNote, the default REST API execution mode is synchronous, so code execution will wait for the REST API call to return before additional calls may be initiated.",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>Verify the existence of <code>group_count_py</code> in the script repository again, this time using the REST API with <code>cURL</code>. Send a GET request to the scripts endpoint, and the scripts available to the OML user are returned in JSON format.</p>\n<p>Note, the default REST API execution mode is synchronous, so code execution will wait for the REST API call to return before additional calls may be initiated.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656713836978_1113346416",
      "id": "paragraph_1656713836978_1113346416",
      "dateCreated": "2022-07-01T22:17:16+0000",
      "dateStarted": "2022-08-01T15:39:38+0000",
      "dateFinished": "2022-08-01T15:39:38+0000",
      "status": "FINISHED",
      "$$hashKey": "object:59"
    },
    {
      "text": "\r\n$ curl -X GET --header \"Authorization: Bearer ${token}\" --header 'Accept: application/json' \"${omlserver}/oml/api/py-scripts/v1/scripts\" | jq '.result[] | .name + \" \" + .owner'\r\n\r\n  HTTP/1.1 200 OK\r\n  Date: Wed, 09 Mar 2022 21:44:39 GMT\r\n  Content-Type: application/json\r\n  Transfer-Encoding: chunked\r\n  Connection: keep-alive\r\n  Cache-Control: no-cache, no-store, private\r\n  X-Frame-Options: SAMEORIGIN\r\n  X-XSS-Protection: 1;mode=block\r\n  Strict-Transport-Security: max-age=31536000; includeSubDomains\r\n  X-Content-Type-Options: nosniff\r\n\r\n  \"group_count OWNER\"",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_1350713939",
      "id": "20220701-211935_1436144483",
      "dateCreated": "2020-08-11T23:42:57+0000",
      "status": "FINISHED",
      "$$hashKey": "object:60"
    },
    {
      "text": "%md\n\nInvoke the `group_count` function in the script repository from the REST API. Set `parallelFlag` to true to leverage database parallelism.\n\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>Invoke the <code>group_count</code> function in the script repository from the REST API. Set <code>parallelFlag</code> to true to leverage database parallelism.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_1303382259",
      "id": "20220701-211935_1513366034",
      "dateCreated": "2020-06-15T22:12:33+0000",
      "dateStarted": "2022-08-01T15:39:38+0000",
      "dateFinished": "2022-08-01T15:39:38+0000",
      "status": "FINISHED",
      "$$hashKey": "object:61"
    },
    {
      "text": "\n\n\n$ curl -i -X POST --header \"Authorization: Bearer ${token}\" --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"input\":\"select * from IRIS\", \"parameters\":\"{\\\"oml_input_type\\\":\\\"pandas.DataFrame\\\"}\", \"groupBy\":\"SPECIES\", \"orderBy\":\"SEPAL_LENGTH\", \"parallelFlag\":true}' \"${omlserver}/oml/api/py-scripts/v1/group-apply/group_count\"\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-76982211",
      "id": "20220701-211935_1076519252",
      "dateCreated": "2020-08-07T16:40:17+0000",
      "status": "FINISHED",
      "$$hashKey": "object:62"
    },
    {
      "text": "%md\n\n\nThe result of the REST execution is a JSON representation of the value returned from the Python script. Dataframes, lists, and dictionaries and PNG images are supported. The returned value is:\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>The result of the REST execution is a JSON representation of the value returned from the Python script. Dataframes, lists, and dictionaries and PNG images are supported. The returned value is:</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_315734315",
      "id": "20220701-211935_1077171371",
      "dateCreated": "2020-08-11T23:46:39+0000",
      "dateStarted": "2022-08-01T15:39:39+0000",
      "dateFinished": "2022-08-01T15:39:39+0000",
      "status": "FINISHED",
      "$$hashKey": "object:63"
    },
    {
      "text": "\n\n\n{\"result\":{\"versicolor_8\":{\"SEPAL_LENGTH\":{\"0\":5.7},\"SPECIES\":{\"0\":\"versicolor\"},\"CNT\":{\"0\":5}},\"versicolor_7\":{\"SEPAL_LENGTH\":{\"0\":5.6},\"SPECIES\":{\"0\":\"versicolor\"},\"CNT\":{\"0\":2}},\"virginica_20\":{\"SEPAL_LENGTH\":{\"0\":6.7},\"SPECIES\":{\"0\":\"virginica\"},.....\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_576585122",
      "id": "20220701-211935_1538098437",
      "dateCreated": "2020-08-11T23:46:57+0000",
      "status": "FINISHED",
      "$$hashKey": "object:64"
    },
    {
      "text": "%md\n\n### **Asynchronous REST API calls**\n\nAsynchronous calls do not wait for the result to return from the server. If the Python script is performing long running computations, results will not be immediate and the user may want to use asynchronous calls to continue development on the client.\n\nThe asynchronous call's returned results are included in the response header. Display the response header by passing the `-i` flag to the `cURL` command. Asynchronous calls have a default timeout of 1800 seconds, or 30 minutes, and can be extended up to 12 hours. Set the `asyncFlag` to `true` to run asynchronous calls from the REST API.\n\n\n\n  ",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {
          "token": "",
          "oml_server": ""
        },
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h3><strong>Asynchronous REST API calls</strong></h3>\n<p>Asynchronous calls do not wait for the result to return from the server. If the Python script is performing long running computations, results will not be immediate and the user may want to use asynchronous calls to continue development on the client.</p>\n<p>The asynchronous call's returned results are included in the response header. Display the response header by passing the <code>-i</code> flag to the <code>cURL</code> command. Asynchronous calls have a default timeout of 1800 seconds, or 30 minutes, and can be extended up to 12 hours. Set the <code>asyncFlag</code> to <code>true</code> to run asynchronous calls from the REST API.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-879204689",
      "id": "20220701-211935_552736976",
      "dateCreated": "2020-06-10T19:10:49+0000",
      "dateStarted": "2022-08-01T15:39:40+0000",
      "dateFinished": "2022-08-01T15:39:40+0000",
      "status": "FINISHED",
      "$$hashKey": "object:65"
    },
    {
      "text": "\n\n$ curl -i -X POST --header \"Authorization: Bearer ${token}\" --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"asyncFlag\":true, \"input\":\"select * from IRIS\", \"parameter\":\"{\\\"oml_input_type\\\":\\“pandas.DataFrame\\\"}\", \"groupBy\":\"SPECIES\", \"parallelFlag\":true}' \"${omlserver}/oml/api/py-scripts/v1/group-apply/group_count_py\"\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-1732335601",
      "id": "20220701-211935_868351323",
      "dateCreated": "2020-08-11T23:48:30+0000",
      "status": "FINISHED",
      "$$hashKey": "object:66"
    },
    {
      "title": "Perform an asynchronous REST call with a timeout of 300 seconds, or 5 minutes",
      "text": "%md\r\n\r\nBelow is the equivalent asynchronous REST call with a timeout of 300 seconds, or 5 minutes. The output includes the HTTP 201 status code indicating the job was created, and a job id location that can be polled for status and results.\r\n\r\nThe `timeout` flag is used to change the default timeout setting.",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>Below is the equivalent asynchronous REST call with a timeout of 300 seconds, or 5 minutes. The output includes the HTTP 201 status code indicating the job was created, and a job id location that can be polled for status and results.</p>\n<p>The <code>timeout</code> flag is used to change the default timeout setting.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_1821911865",
      "id": "20220701-211935_1362257540",
      "dateCreated": "2020-08-11T23:49:32+0000",
      "dateStarted": "2022-08-01T15:39:40+0000",
      "dateFinished": "2022-08-01T15:39:40+0000",
      "status": "FINISHED",
      "$$hashKey": "object:67"
    },
    {
      "text": "\n\n$ curl -i -X POST --header \"Authorization: Bearer ${token}\" --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"asyncFlag\":true,\"timeout\":300, \"input\":\"select * from IRIS\", \"parameter\":\"{\\\"oml_input_type\\\":\\\"pandas.DataFrame\\\"}\", \"groupBy\":\"SPECIES\", \"parallelFlag\":true}' \"${omlserver}/oml/api/py-scripts/v1/group-apply/group_count_py\"\n\n  HTTP/1.1 201 Created\n  Location: $ {oml_server}/oml/tenants/MYTENANT/databases/MYADW/api/py-scripts/v1/<job id location>\n  Cache-Control: no-cache, no-store, private\n  Content-Length: 0\n  X-Frame-Options: SAMEORIGIN\n  Proxy-Connection: Keep-Alive\n  X-XSS-Protection: 1;mode=block\n  X-Content-Type-Options: nosniff\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-1049760695",
      "id": "20220701-211935_1719682058",
      "dateCreated": "2020-08-11T23:49:59+0000",
      "status": "FINISHED",
      "$$hashKey": "object:68"
    },
    {
      "title": "Poll the job status",
      "text": "%md\n\nTo poll the job status, pass the job ID location to the jobs endpoint using the GET method. The HTTP response status 302 indicates the running job is found and includes a job id location for future results.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>To poll the job status, pass the job ID location to the jobs endpoint using the GET method. The HTTP response status 302 indicates the running job is found and includes a job id location for future results.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-1079793725",
      "id": "20220701-211935_1443161234",
      "dateCreated": "2020-06-15T22:41:51+0000",
      "dateStarted": "2022-08-01T15:39:41+0000",
      "dateFinished": "2022-08-01T15:39:41+0000",
      "status": "FINISHED",
      "$$hashKey": "object:69"
    },
    {
      "text": "\n$ curl -i -X GET --header \"Authorization: Bearer ${token}\" --header 'Accept: application/json' ${omlserver}/oml/api/py-scripts/v1/jobs/<job id location>\n\n  HTTP/1.1 302 Found\n  Date: Wed, 09 Mar 2022 13:04:04 GMT\n  Server: nginx/1.18.0\n  Cache-Control: no-cache, no-store, private\n  Content-Length: 0\n  X-Frame-Options: SAMEORIGIN\n  Content-Location: http://<oml-cloud-service-instance-url>/oml/tenants/TENANT1/databases/ADWP/api/py-scripts/v1/<job id location>/result\n  Proxy-Connection: Keep-Alive\n  X-XSS-Protection: 1;mode=block\n  X-Content-Type-Options: nosniff",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_720143535",
      "id": "20220701-211935_1779691564",
      "dateCreated": "2020-08-11T23:55:20+0000",
      "status": "FINISHED",
      "$$hashKey": "object:70"
    },
    {
      "title": "Poll the job at the results location",
      "text": "\r\n$ curl -i -X GET --header \"Authorization: Bearer ${token}\" --header 'Accept: application/json' ${omlserver}/oml/api/py-scripts/v1/jobs/<job id location>/result\r\n\r\n\r\n  HTTP/1.1 200 OK\r\n  Date: Wed, 09 Mar 2022 13:06:05 GMT\r\n  Server: nginx/1.18.0\r\n  Content-Type: application/json\r\n  Cache-Control: no-cache, no-store, private\r\n  Content-Length: 1038\r\n  X-Frame-Options: SAMEORIGIN\r\n  Proxy-Connection: Keep-Alive\r\n  X-XSS-Protection: 1;mode=block\r\n  X-Content-Type-Options: nosniff",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_1111047527",
      "id": "20220701-211935_1276320936",
      "dateCreated": "2020-08-11T23:57:32+0000",
      "status": "FINISHED",
      "$$hashKey": "object:71"
    },
    {
      "text": "%md\n\nThe returned value is:\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>The returned value is:</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_175250465",
      "id": "20220701-211935_1036141004",
      "dateCreated": "2020-08-11T23:58:58+0000",
      "dateStarted": "2022-08-01T15:39:41+0000",
      "dateFinished": "2022-08-01T15:39:41+0000",
      "status": "FINISHED",
      "$$hashKey": "object:72"
    },
    {
      "text": "\n\n\n{\"result\":{\"versicolor_8\":{\"SEPAL_LENGTH\":{\"0\":5.7},\"SPECIES\":{\"0\":\"versicolor\"},\"CNT\":{\"0\":5}},\"versicolor_7\":{\"SEPAL_LENGTH\":{\"0\":5.6},\"SPECIES\":{\"0\":\"versicolor\"},\"CNT\":{\"0\":2}},\"virginica_20\":{\"SEPAL_LENGTH\":{\"0\":6.7},\"SPECIES\":{\"0\":\"virginica\"},.....\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-1731593710",
      "id": "20220701-211935_1210406088",
      "dateCreated": "2020-08-11T23:59:11+0000",
      "status": "FINISHED",
      "$$hashKey": "object:73"
    },
    {
      "title": "Returning model details from the REST API",
      "text": "%md\n\n\nLet's create a linear model script and run it from the REST API. First, we'll define our function, `build_lm_py`, which returns a dict mapping of the model attributes. Note that the model itself cannot be returned directly from REST because LinearRegression model objects are not JSON-serializable. \n\n\n\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>Let's create a linear model script and run it from the REST API. First, we'll define our function, <code>build_lm_py</code>, which returns a dict mapping of the model attributes. Note that the model itself cannot be returned directly from REST because LinearRegression model objects are not JSON-serializable.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_1954297624",
      "id": "20220701-211935_1560951469",
      "dateCreated": "2020-08-18T21:01:09+0000",
      "dateStarted": "2022-08-01T15:39:42+0000",
      "dateFinished": "2022-08-01T15:39:42+0000",
      "status": "FINISHED",
      "$$hashKey": "object:74"
    },
    {
      "text": "%python\n\nbuild_lm_py = \"\"\"def build_py(dat):\n            from sklearn import linear_model\n            import oml\n            regr = linear_model.LinearRegression()\n            import pandas as pd\n            dat = pd.get_dummies(dat, drop_first=True)\n            X = dat[[\"SEPAL_WIDTH\", \"PETAL_LENGTH\", \"PETAL_WIDTH\", \"SPECIES_versicolor\", \"SPECIES_virginica\"]]\n            y = dat[[\"SEPAL_LENGTH\"]]\n            regr.fit(X, y)\n            data = {}\n            data[\"init_params\"] = regr.get_params()\n            data[\"model_params\"] = mp = {}\n            for p in (\"coef_\", \"intercept_\", \"_residues\", \"singular_\"):\n                mp[p] = getattr(regr, p).tolist()\n            return data\"\"\"\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_425530666",
      "id": "20220701-211935_153656312",
      "dateCreated": "2020-08-18T21:26:57+0000",
      "dateStarted": "2022-08-01T15:39:42+0000",
      "dateFinished": "2022-08-01T15:39:42+0000",
      "status": "FINISHED",
      "$$hashKey": "object:75"
    },
    {
      "title": "Save the script to the Python script repository",
      "text": "%python\n\noml.script.create(\"build_lm_py\", func=build_lm_py, overwrite=True) \n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_441791799",
      "id": "20220701-211935_1143665701",
      "dateCreated": "2020-08-18T20:16:08+0000",
      "dateStarted": "2022-08-01T15:39:43+0000",
      "dateFinished": "2022-08-01T15:39:43+0000",
      "status": "FINISHED",
      "$$hashKey": "object:76"
    },
    {
      "text": "%md\n_________________________________________________________________________________________________________________________________________________________________________________________________________________________\nNow invoke the build_lm_rest_py function from the REST API in asynchronous mode.\n\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<hr />\n<p>Now invoke the build_lm_rest_py function from the REST API in asynchronous mode.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-1945409867",
      "id": "20220701-211935_1224302943",
      "dateCreated": "2020-08-18T21:35:47+0000",
      "dateStarted": "2022-08-01T15:39:43+0000",
      "dateFinished": "2022-08-01T15:39:43+0000",
      "status": "FINISHED",
      "$$hashKey": "object:77"
    },
    {
      "text": "\n\n$ curl -i -X POST --header \"Authorization: Bearer ${token}\" --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\"input\":\"select * from IRIS\", \"parameters\":\"{\\\"oml_input_type\\\":\\\"pandas.DataFrame\\\"}\"}' \"${omlserver}/oml/api/py-scripts/v1/table-apply/build_lm_py\"\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-529279554",
      "id": "20220701-211935_96720099",
      "dateCreated": "2020-08-20T20:39:17+0000",
      "status": "FINISHED",
      "$$hashKey": "object:78"
    },
    {
      "text": "%md\n\nThe returned value is a dict containing model attributes.",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>The returned value is a dict containing model attributes.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_-1252944791",
      "id": "20220701-211935_2026652044",
      "dateCreated": "2020-08-18T21:38:20+0000",
      "dateStarted": "2022-08-01T15:39:43+0000",
      "dateFinished": "2022-08-01T15:39:43+0000",
      "status": "FINISHED",
      "$$hashKey": "object:79"
    },
    {
      "text": "\n{\"result\":{\"init_params\":{\"fit_intercept\":true,\"n_jobs\":null,\"normalize\":false,\"copy_X\":true},\"model_params\":{\"intercept_\":[2.1712662921550736],\"_residues\":[13.556485081974792],\"coef_\":[[0.4958889383885511,0.8292439122348054,-0.315155173326473,-0.7235619577807288,-1.0234978144908309]],\"singular_\":[23.873627650888057,7.279716799977891,4.192696791126727,2.194192042042924,0.7289542732694926]}}}",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_243743032",
      "id": "20220701-211935_1747218128",
      "dateCreated": "2020-08-18T20:56:59+0000",
      "status": "FINISHED",
      "$$hashKey": "object:80"
    },
    {
      "text": "%md\n# End of Script",
      "user": "OMLUSER",
      "dateUpdated": "2022-08-01T15:39:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h1>End of Script</h1>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656710375533_1881413655",
      "id": "20220701-211935_1935399931",
      "dateCreated": "2020-06-10T19:13:37+0000",
      "dateStarted": "2022-08-01T15:39:44+0000",
      "dateFinished": "2022-08-01T15:39:44+0000",
      "status": "FINISHED",
      "$$hashKey": "object:81"
    }
  ],
  "name": "OML4Py REST API",
  "id": "19315",
  "defaultInterpreterGroup": "spark",
  "noteParams": {},
  "noteForms": {
    "oml_server": {
      "type": "FormInput",
      "name": "oml_server",
      "defaultValue": "",
      "hidden": false
    }
  },
  "angularObjects": {},
  "config": {
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {
    "isRunning": false
  },
  "path": "/OML4Py REST API"
}