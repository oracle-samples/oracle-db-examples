{
  "paragraphs": [
    {
      "text": "%md\n\n### Importing Data from Oracle Cloud Object Storage\n\nSo, you've signed up for an Oracle Cloud account and you want to start exploring Oracle Machine Learning in Autonomous Database. The first step is to import your data, and there are a few different options to choose from. For example, Oracle Database Actions provides a friendly web-based interface to load data from local files, cloud storage, or from remote databases. Another option for loading data from local files is to use SQL*Loader. For moving data between Oracle Database and Autonomous Database, Oracle Data Pump offers very fast data movement. \n\nBut how do you import data into Oracle Autonomous Database without leaving the Oracle Machine Learning Notebooks environment?  The answer is to use the `DBMS_CLOUD` package.\n\n`DBMS_CLOUD` provides a simple way to interact with an object store from the database. It supports loading data files from Oracle Cloud Infrastructure Object Storage, Github repositories, Amazon AWS S3, Microsoft Azure Cloud Storage, and Google Cloud Storage. \n\nIn this example, we demonstrate using a custom procedure `IMPORT_DATA_OBJSTORE_DATASET`, which leverages `DBMS_CLOUD`, to import data from an Oracle Cloud Object Storage bucket to an Autonomous Database table. When using `DBMS_CLOUD.COPY_DATA` alone, the target table must be created in advance. With `IMPORT_DATA_OBJSTORE_DATASET`, you simply provide the dataset name, and the table will be created and the data inserted in a single step. This custom procedure was created to facilitate easy import of the datasets used in Oracle Machine Learning notebooks and demos.\n\nFor a one-off approach to importing specific datasets, refer to the `OML Run-me-first` notebook in the OML Notebooks template examples.\n\n### Prerequisites:\n- An Oracle Machine Learning account with grant EXECUTE privileges on DBMS_CLOUD\n\nTo run `DBMS_CLOUD` subprograms with a user other than ADMIN you need to grant EXECUTE privileges to that user. For example, run the following command as ADMIN to grant privileges to OMLUSER:\n\n    GRANT EXECUTE ON DBMS_CLOUD TO OMLUSER;\n\n- A public Oracle Cloud Object Storage bucket\n\nCopyright (c) 2022 Oracle Corporation                             \n###### [The Universal Permissive License (UPL), Version 1.0](https://oss.oracle.com/licenses/upl/)\n---",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h3>Importing Data from Oracle Cloud Object Storage</h3>\n<p>So, you've signed up for an Oracle Cloud account and you want to start exploring Oracle Machine Learning in Autonomous Database. The first step is to import your data, and there are a few different options to choose from. For example, Oracle Database Actions provides a friendly web-based interface to load data from local files, cloud storage, or from remote databases. Another option for loading data from local files is to use SQL*Loader. For moving data between Oracle Database and Autonomous Database, Oracle Data Pump offers very fast data movement.</p>\n<p>But how do you import data into Oracle Autonomous Database without leaving the Oracle Machine Learning Notebooks environment?  The answer is to use the <code>DBMS_CLOUD</code> package.</p>\n<p><code>DBMS_CLOUD</code> provides a simple way to interact with an object store from the database. It supports loading data files from Oracle Cloud Infrastructure Object Storage, Github repositories, Amazon AWS S3, Microsoft Azure Cloud Storage, and Google Cloud Storage.</p>\n<p>In this example, we demonstrate using a custom procedure <code>IMPORT_DATA_OBJSTORE_DATASET</code>, which leverages <code>DBMS_CLOUD</code>, to import data from an Oracle Cloud Object Storage bucket to an Autonomous Database table. When using <code>DBMS_CLOUD.COPY_DATA</code> alone, the target table must be created in advance. With <code>IMPORT_DATA_OBJSTORE_DATASET</code>, you simply provide the dataset name, and the table will be created and the data inserted in a single step. This custom procedure was created to facilitate easy import of the datasets used in Oracle Machine Learning notebooks and demos.</p>\n<p>For a one-off approach to importing specific datasets, refer to the <code>OML Run-me-first</code> notebook in the OML Notebooks template examples.</p>\n<h3>Prerequisites:</h3>\n<ul>\n<li>An Oracle Machine Learning account with grant EXECUTE privileges on DBMS_CLOUD</li>\n</ul>\n<p>To run <code>DBMS_CLOUD</code> subprograms with a user other than ADMIN you need to grant EXECUTE privileges to that user. For example, run the following command as ADMIN to grant privileges to OMLUSER:</p>\n<pre><code>GRANT EXECUTE ON DBMS_CLOUD TO OMLUSER;\n</code></pre>\n<ul>\n<li>A public Oracle Cloud Object Storage bucket</li>\n</ul>\n<p>Copyright (c) 2022 Oracle Corporation</p>\n<h6><a href=\"https://oss.oracle.com/licenses/upl/\">The Universal Permissive License (UPL), Version 1.0</a></h6>\n<hr />\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_261685917",
      "id": "20220225-173909_1646444460",
      "dateCreated": "2020-11-25T21:53:03+0000",
      "dateStarted": "2022-03-10T23:39:19+0000",
      "dateFinished": "2022-03-10T23:39:19+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:40"
    },
    {
      "title": "For more information...",
      "text": "%md\n\n###### [Getting Started with Oracle Machine Learning Notebooks](https://docs.oracle.com/en/database/oracle/machine-learning/oml-notebooks/omlug/get-started-oracle-machine-learning.html#GUID-2AEC56A4-E751-48A3-AAA0-0659EDD639BA)\n###### [Loading Data with Autonomous Database](https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/load-data.html#GUID-1351807C-E3F7-4C6D-AF83-2AEEADE2F83E)\n###### [Object Storage Buckets](https://docs.oracle.com/en-us/iaas/Content/Object/Concepts/objectstorageoverview.htm)\n###### [DBMS_CLOUD](https://docs.oracle.com/en/cloud/paas/autonomous-database/adbdu/dbms_cloud-objects-and-files.html#GUID-12C083D6-76ED-4D35-8BD6-B277D91090F9)",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:19+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h6><a href=\"https://docs.oracle.com/en/database/oracle/machine-learning/oml-notebooks/omlug/get-started-oracle-machine-learning.html#GUID-2AEC56A4-E751-48A3-AAA0-0659EDD639BA\">Getting Started with Oracle Machine Learning Notebooks</a></h6>\n<h6><a href=\"https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/load-data.html#GUID-1351807C-E3F7-4C6D-AF83-2AEEADE2F83E\">Loading Data with Autonomous Database</a></h6>\n<h6><a href=\"https://docs.oracle.com/en-us/iaas/Content/Object/Concepts/objectstorageoverview.htm\">Object Storage Buckets</a></h6>\n<h6><a href=\"https://docs.oracle.com/en/cloud/paas/autonomous-database/adbdu/dbms_cloud-objects-and-files.html#GUID-12C083D6-76ED-4D35-8BD6-B277D91090F9\">DBMS_CLOUD</a></h6>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_1943384261",
      "id": "20220225-173909_728035521",
      "dateCreated": "2021-11-01T17:41:34+0000",
      "dateStarted": "2022-03-10T23:39:20+0000",
      "dateFinished": "2022-03-10T23:39:20+0000",
      "status": "FINISHED",
      "$$hashKey": "object:41"
    },
    {
      "title": "Custom procedure for loading data ",
      "text": "%md\n\nThe custom procedure `IMPORT_DATA_OBJSTORE_DATASET` imports the data from Object Storage directly to a database table using a combination of PL/SQL commands and the `DBMS_CLOUD.COPY_DATA` procedure. Simply provide the dataset name, and the table will be created and the data inserted to the target table.\n\n#### Prerequisites:\n\n- The CSV file containing the data and a text file with the table definition must be saved in the Object Storage bucket\n-- Note, the default Object Storage bucket already contains the CSV and text files needed to create the OML demo datasets\n- Both the CSV and text files must match the name of the input dataset\n-- For example, *CUSTOMER_INSURANCE_LTV2.txt* and *CUSTOMER_INSURANCE_LTV2.csv*\n- The Object Storage bucket must be public\n-- Either the default bucket or the user's public bucket may be used\n- The OML ADMIN user must grant execute on the DBMS_CLOUD procedures to the OML user \n-- Use the command *grant execute on DBMS_CLOUD to OMLUSER*, where OMLUSER is the OML username\n\n#### Input variables:\n- DATASET: The name of CSV data set residing in Object Storage\n- VERBOSE: Optional. Controls the amount of information returned from the procedure\n-- Default is FALSE, which returns the table name and number of rows in the table\n-- When TRUE, returns detailed object information, including the default return values, the file names in Object Storage, and the table definition\n- LOCATION_URI: Optional. The Object Storage URL where the files reside. The default value is the Oracle Machine Learning public bucket.\n\n#### Basic usage:\nTo run the procedure, pass the dataset name as the `DATASET` parameter:\n\n    EXEC IMPORT_DATA_OBJSTORE_DATASET('CUSTOMER_INSURANCE_LTV2')\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:20+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>The custom procedure <code>IMPORT_DATA_OBJSTORE_DATASET</code> imports the data from Object Storage directly to a database table using a combination of PL/SQL commands and the <code>DBMS_CLOUD.COPY_DATA</code> procedure. Simply provide the dataset name, and the table will be created and the data inserted to the target table.</p>\n<h4>Prerequisites:</h4>\n<ul>\n<li>The CSV file containing the data and a text file with the table definition must be saved in the Object Storage bucket\n<br  />&ndash; Note, the default Object Storage bucket already contains the CSV and text files needed to create the OML demo datasets</li>\n<li>Both the CSV and text files must match the name of the input dataset\n<br  />&ndash; For example, <em>CUSTOMER_INSURANCE_LTV2.txt</em> and <em>CUSTOMER_INSURANCE_LTV2.csv</em></li>\n<li>The Object Storage bucket must be public\n<br  />&ndash; Either the default bucket or the user's public bucket may be used</li>\n<li>The OML ADMIN user must grant execute on the DBMS_CLOUD procedures to the OML user\n<br  />&ndash; Use the command <em>grant execute on DBMS_CLOUD to OMLUSER</em>, where OMLUSER is the OML username</li>\n</ul>\n<h4>Input variables:</h4>\n<ul>\n<li>DATASET: The name of CSV data set residing in Object Storage</li>\n<li>VERBOSE: Optional. Controls the amount of information returned from the procedure\n<br  />&ndash; Default is FALSE, which returns the table name and number of rows in the table\n<br  />&ndash; When TRUE, returns detailed object information, including the default return values, the file names in Object Storage, and the table definition</li>\n<li>LOCATION_URI: Optional. The Object Storage URL where the files reside. The default value is the Oracle Machine Learning public bucket.</li>\n</ul>\n<h4>Basic usage:</h4>\n<p>To run the procedure, pass the dataset name as the <code>DATASET</code> parameter:</p>\n<pre><code>EXEC IMPORT_DATA_OBJSTORE_DATASET('CUSTOMER_INSURANCE_LTV2')\n</code></pre>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_1940120566",
      "id": "20220225-173909_1814347879",
      "dateCreated": "2021-11-01T17:50:24+0000",
      "dateStarted": "2022-03-10T23:39:20+0000",
      "dateFinished": "2022-03-10T23:39:20+0000",
      "status": "FINISHED",
      "$$hashKey": "object:42"
    },
    {
      "title": "Define the custom procedure",
      "text": "%script\r\n\r\nCREATE OR REPLACE PROCEDURE IMPORT_DATA_OBJSTORE_DATASET(\r\nDATASET IN VARCHAR2,\r\nVERBOSE IN BOOLEAN DEFAULT FALSE,\r\nLOCATION_URI IN VARCHAR2 DEFAULT 'https://objectstorage.us-ashburn-1.oraclecloud.com/n/adwc4pm/b/OML_Data/o/') AUTHID CURRENT_USER AS\r\ndataset_upper VARCHAR2(100);\r\nfile_name VARCHAR2(1000);\r\ntable_name varchar2(1000);\r\nobj varchar2(1000);\r\nsql_file varchar2(1000);\r\nb_data BLOB;\r\nv_data VARCHAR2(5000);\r\nv_rownum INTEGER;\r\n\r\n------------------------------------------------------\r\n-- Declare a new variable to convert the input\r\n-- dataset to upper case.  \r\n\r\n------------------------------------------------------\r\n\r\nBEGIN\r\n    dataset_upper := upper(dataset);\r\n\r\n------------------------------------------------------\r\n-- Define file name from input dataset\r\n------------------------------------------------------\r\n\r\nSELECT CONCAT(dataset_upper, '.csv') INTO FILE_NAME from dual;\r\n\r\nIF VERBOSE THEN\r\n   DBMS_OUTPUT.PUT_LINE('Dataset name is: '||dataset_upper);\r\n   DBMS_OUTPUT.PUT_LINE('CSV file name is: '||file_name);\r\nEND IF;\r\n\r\n------------------------------------------------------\r\n-- Select file from Object Storage\r\n------------------------------------------------------\r\n\r\nSELECT object_name INTO obj FROM DBMS_CLOUD.LIST_OBJECTS(NULL, LOCATION_URI) where object_name = FILE_NAME;\r\n\r\n------------------------------------------------------\r\n-- Define table name\r\n------------------------------------------------------\r\n\r\nSELECT REGEXP_SUBSTR(obj, '[^.]+') INTO table_name from dual;\r\n\r\n   DBMS_OUTPUT.PUT_LINE('Table name is: '||table_name);\r\n\r\n------------------------------------------------------\r\n-- Define file containing the CREATE TABLE statement,\r\n-- which is saved in a TXT file. DBMS_CLOUD does not\r\n-- support reading SQL files.\r\n------------------------------------------------------\r\n\r\nSELECT table_name||'.txt' INTO sql_file from dual;\r\n\r\nIF VERBOSE THEN\r\n   DBMS_OUTPUT.PUT_LINE('Text file is: '||sql_file);\r\nEND IF;\r\n\r\n------------------------------------------------------\r\n-- Read the SQL statement from the text file into\r\n-- a binary variable and execute the statement\r\n------------------------------------------------------\r\n\r\nBEGIN\r\n  b_data := DBMS_CLOUD.GET_OBJECT(\r\n      credential_name => NULL,\r\n      object_uri => LOCATION_URI||sql_file);\r\n  v_data :=  utl_raw.cast_to_varchar2(b_data);\r\n  IF VERBOSE THEN\r\n  DBMS_OUTPUT.PUT_LINE('Table definition is: '||v_data);\r\n  END IF;\r\n  EXECUTE IMMEDIATE v_data;\r\nEND;\r\n\r\n------------------------------------------------------\r\n-- Write data to the final table specified as dataset\r\n-- input. If the table already exists, an error is\r\n-- returned.\r\n------------------------------------------------------\r\n\r\nBEGIN\r\n    DBMS_CLOUD.COPY_DATA (\r\n       credential_name => NULL,\r\n       table_name => table_name,\r\n       file_uri_list   => LOCATION_URI||file_name,\r\n  format => json_object('type' value 'CSV', 'skipheaders' value 1));\r\nEND;\r\n\r\n------------------------------------------------------\r\n-- Return the number of rows in the table\r\n------------------------------------------------------\r\n\r\nEXECUTE IMMEDIATE 'SELECT count(*) FROM ' || table_name INTO v_rownum;\r\nDBMS_OUTPUT.PUT_LINE ('Table created with number of rows = ' || v_rownum);\r\n\r\n\r\nEND;",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:20+0000",
      "progress": 0,
      "config": {
        "lineNumbers": false,
        "editorSetting": {
          "language": "plsql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/plsql",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\nProcedure IMPORT_DATA_OBJSTORE_DATASET compiled\n\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_-873820044",
      "id": "20220225-173909_1813067492",
      "dateCreated": "2021-11-01T17:50:00+0000",
      "dateStarted": "2022-03-10T23:39:21+0000",
      "dateFinished": "2022-03-10T23:39:21+0000",
      "status": "FINISHED",
      "$$hashKey": "object:43"
    },
    {
      "title": "Delete the table if it exists",
      "text": "%script\n\nBEGIN\n       EXECUTE IMMEDIATE 'DROP TABLE CUSTOMER_INSURANCE_LTV2';\n       EXCEPTION WHEN OTHERS THEN NULL;\nEND;",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:21+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "plsql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/plsql",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\nPL/SQL procedure successfully completed.\n\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_1517301000",
      "id": "20220225-173909_456735509",
      "dateCreated": "2021-11-03T20:54:28+0000",
      "dateStarted": "2022-03-10T23:39:22+0000",
      "dateFinished": "2022-03-10T23:39:22+0000",
      "status": "FINISHED",
      "$$hashKey": "object:44"
    },
    {
      "title": "Run the procedure in default mode",
      "text": "%md\n\nIn default mode, the only required input is the dataset name, `CUSTOMER_INSURANCE_LTV2`. The table `CUSTOMER_INSURANCE_LTV2` is created and the table name and number of rows in the table is returned.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:22+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>In default mode, the only required input is the dataset name, <code>CUSTOMER_INSURANCE_LTV2</code>. The table <code>CUSTOMER_INSURANCE_LTV2</code> is created and the table name and number of rows in the table is returned.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_1026356148",
      "id": "20220225-173909_391590475",
      "dateCreated": "2021-11-02T17:24:03+0000",
      "dateStarted": "2022-03-10T23:39:22+0000",
      "dateFinished": "2022-03-10T23:39:22+0000",
      "status": "FINISHED",
      "$$hashKey": "object:45"
    },
    {
      "title": "",
      "text": "%script\n\nEXEC IMPORT_DATA_OBJSTORE_DATASET('CUSTOMER_INSURANCE_LTV2')",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:22+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "plsql",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/plsql",
        "fontSize": 9,
        "title": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Table name is: CUSTOMER_INSURANCE_LTV2\nTable created with number of rows = 13880\n\n\nPL/SQL procedure successfully completed.\n\n\n---------------------------\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_635362888",
      "id": "20220225-173909_1572532030",
      "dateCreated": "2020-11-25T21:53:03+0000",
      "dateStarted": "2022-03-10T23:39:23+0000",
      "dateFinished": "2022-03-10T23:39:30+0000",
      "status": "FINISHED",
      "$$hashKey": "object:46"
    },
    {
      "title": "Display the first 10 rows of the table",
      "text": "%sql\n\nselect * from  CUSTOMER_INSURANCE_LTV2 where rownum <= 10",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:30+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "MARITAL_STATUS": "string",
                      "STATE": "string",
                      "CREDIT_BALANCE": "string",
                      "CUSTOMER_TENURE": "string",
                      "MORTGAGE_AMOUNT": "string",
                      "BANK_FUNDS": "string",
                      "NUM_DEPENDENTS": "string",
                      "HAS_CHILDREN": "string",
                      "INCOME": "string",
                      "CUSTOMER_ID": "string",
                      "GENDER": "string",
                      "PROFESSION": "string",
                      "CREDIT_CARD_LIMITS": "string",
                      "REGION": "string",
                      "HOME_OWNERSHIP": "string",
                      "NUM_ONLINE_TRANS": "string",
                      "BUY_INSURANCE": "string",
                      "MONTHLY_CHECKS": "string",
                      "NUM_TRANS_KIOSK": "string",
                      "AGE": "string",
                      "MONEY_MONTLY_OVERDRAWN": "string",
                      "LTV": "string",
                      "TOTAL_AUTOM_PAYMENTS": "string",
                      "NUM_TRANS_TELLER": "string",
                      "CHECKING_BALANCE": "string",
                      "NUM_TRANS_ATM": "string",
                      "LTV_BIN": "string",
                      "FIRST_NAME": "string",
                      "NUM_MORTGAGES": "string",
                      "CAR_OWNERSHIP": "string",
                      "LAST_NAME": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "MARITAL_STATUS\tSTATE\tCREDIT_BALANCE\tCUSTOMER_TENURE\tMORTGAGE_AMOUNT\tBANK_FUNDS\tNUM_DEPENDENTS\tHAS_CHILDREN\tINCOME\tCUSTOMER_ID\tGENDER\tPROFESSION\tCREDIT_CARD_LIMITS\tREGION\tHOME_OWNERSHIP\tNUM_ONLINE_TRANS\tBUY_INSURANCE\tMONTHLY_CHECKS\tNUM_TRANS_KIOSK\tAGE\tMONEY_MONTLY_OVERDRAWN\tLTV\tTOTAL_AUTOM_PAYMENTS\tNUM_TRANS_TELLER\tCHECKING_BALANCE\tNUM_TRANS_ATM\tLTV_BIN\tFIRST_NAME\tNUM_MORTGAGES\tCAR_OWNERSHIP\tLAST_NAME\nSINGLE\tCA                        \t0\t3\t0\t0\t3\t0\t65871\tCU15154                   \tM                         \tNurse\t1000\tWest\t0\t0\tNo\t0\t1\t24\t53.06\t14367.75\t0\t0\t25\t0\tMEDIUM\tGAYLE\t0\t0\tDURANT\nSINGLE\tNY                        \t0\t4\t0\t290\t4\t0\t68747\tCU15155                   \tM                         \tProgrammer/Developer\t700\tNorthEast\t0\t0\tYes\t1\t1\t35\t53.84\t14686.75\t287\t2\t25\t4\tMEDIUM\tQUINTON\t0\t1\tMASSEY\nMARRIED\tMI                        \t0\t3\t1000\t550\t3\t0\t68684\tCU15157                   \tM                         \tProgrammer/Developer\t1000\tMidwest\t1\t1000\tYes\t14\t1\t26\t53.48\t25271\t132\t2\t25\t4\tHIGH\tANIBAL\t1\t1\tJIMENEZ\nMARRIED\tUT                        \t0\t5\t1200\t1000\t5\t0\t59354\tCU15286                   \tF                         \tFireman\t2500\tSouthwest\t1\t1200\tNo\t4\t5\t24\t53.08\t19738.5\t628\t3\t619\t1\tMEDIUM\tJUNITA\t1\t1\tROBERTSON\nMARRIED\tUT                        \t0\t4\t1800\t0\t3\t0\t84801\tCU15287                   \tF                         \tPROF-26\t2500\tSouthwest\t1\t1800\tNo\t0\t5\t47\t53.06\t31900.25\t0\t0\t25\t0\tVERY HIGH\tCHASITY\t1\t1\tELLIS\nMARRIED\tUT                        \t0\t1\t1400\t0\t1\t0\t73987\tCU15289                   \tM                         \tProfessor\t2500\tSouthwest\t1\t1400\tNo\t0\t5\t46\t53.06\t31596.75\t0\t0\t25\t0\tVERY HIGH\tFRANKLIN\t1\t1\tKNOX\nSINGLE\tUT                        \t0\t3\t578\t0\t3\t0\t51452\tCU15290                   \tM                         \tSales Representative\t2500\tSouthwest\t1\t578\tNo\t0\t5\t33\t53.06\t21663\t0\t0\t25\t0\tMEDIUM\tLINCOLN\t1\t1\tMATTSON\nSINGLE\tUT                        \t0\t3\t0\t0\t3\t0\t63181\tCU15291                   \tM                         \tConstruction Laborer\t2500\tSouthwest\t0\t0\tNo\t1\t5\t49\t53.07\t16195.25\t0\t0\t25\t1\tMEDIUM\tSTEPHEN\t0\t0\tCARROLL\nSINGLE\tUT                        \t0\t5\t117\t0\t5\t0\t66654\tCU15292                   \tF                         \tPROF-3\t2500\tSouthwest\t1\t117\tNo\t0\t5\t21\t53.06\t21263.5\t0\t0\t25\t0\tMEDIUM\tCEOLA\t1\t1\tHARRISON\nSINGLE\tUT                        \t0\t3\t0\t250\t3\t0\t61716\tCU15294                   \tM                         \tProgrammer/Developer\t1500\tSouthwest\t0\t0\tNo\t3\t5\t26\t53.04\t13529\t0\t2\t25\t2\tLOW\tLLOYD\t0\t0\tHOLLEY\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_950527380",
      "id": "20220225-173909_955860091",
      "dateCreated": "2021-11-03T22:02:44+0000",
      "dateStarted": "2022-03-10T23:39:31+0000",
      "dateFinished": "2022-03-10T23:39:31+0000",
      "status": "FINISHED",
      "$$hashKey": "object:47"
    },
    {
      "title": "Run the custom procedure in verbose mode",
      "text": "%md\n\nIn verbose mode, additional information is returned, including the dataset, CSV, and text file names, and the table definition. Verbose mode is enabled by specified by setting the `VERBOSE`parameter to `TRUE`.",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:31+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>In verbose mode, additional information is returned, including the dataset, CSV, and text file names, and the table definition. Verbose mode is enabled by specified by setting the <code>VERBOSE</code>parameter to <code>TRUE</code>.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_106611943",
      "id": "20220225-173909_1783247330",
      "dateCreated": "2021-11-02T17:26:22+0000",
      "dateStarted": "2022-03-10T23:39:31+0000",
      "dateFinished": "2022-03-10T23:39:31+0000",
      "status": "FINISHED",
      "$$hashKey": "object:48"
    },
    {
      "title": "Delete the previously created table",
      "text": "%script\n\nBEGIN\n       EXECUTE IMMEDIATE 'DROP TABLE CUSTOMER_INSURANCE_LTV2';\n       EXCEPTION WHEN OTHERS THEN NULL;\nEND;",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:31+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "plsql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/plsql",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\nPL/SQL procedure successfully completed.\n\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_-1731778841",
      "id": "20220225-173909_1143051146",
      "dateCreated": "2021-11-03T21:27:27+0000",
      "dateStarted": "2022-03-10T23:39:32+0000",
      "dateFinished": "2022-03-10T23:39:32+0000",
      "status": "FINISHED",
      "$$hashKey": "object:49"
    },
    {
      "text": "%script\n\nEXEC IMPORT_DATA_OBJSTORE_DATASET('CUSTOMER_INSURANCE_LTV2', TRUE)\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:32+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "plsql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/plsql",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Dataset name is: CUSTOMER_INSURANCE_LTV2\nCSV file name is: CUSTOMER_INSURANCE_LTV2.csv\nTable name is: CUSTOMER_INSURANCE_LTV2\nText file is: CUSTOMER_INSURANCE_LTV2.txt\nTable definition is: CREATE TABLE CUSTOMER_INSURANCE_LTV2(MARITAL_STATUS\nVARCHAR2(26 BYTE), STATE CHAR(26 BYTE), CREDIT_BALANCE NUMBER(8,0),\nCUSTOMER_TENURE NUMBER(3,0), MORTGAGE_AMOUNT NUMBER(7,0), BANK_FUNDS\nNUMBER(7,0), NUM_DEPENDENTS NUMBER(3,0), HAS_CHILDREN NUMBER(3,0), INCOME\nNUMBER(7,0), CUSTOMER_ID CHAR(26 BYTE), GENDER CHAR(26 BYTE), PROFESSION\nVARCHAR2(35 BYTE), CREDIT_CARD_LIMITS NUMBER(6,0), REGION VARCHAR2(26 BYTE),\nHOME_OWNERSHIP NUMBER(3,0), NUM_ONLINE_TRANS NUMBER(6,0), BUY_INSURANCE\nVARCHAR2(26 BYTE), MONTHLY_CHECKS NUMBER(4,0), NUM_TRANS_KIOSK NUMBER(3,0), AGE\nNUMBER(4,0), MONEY_MONTLY_OVERDRAWN NUMBER(6,2), LTV NUMBER(9,2),\nTOTAL_AUTOM_PAYMENTS NUMBER(8,0), NUM_TRANS_TELLER NUMBER(3,0), \r\nCHECKING_BALANCE NUMBER(7,0), NUM_TRANS_ATM NUMBER(3,0), LTV_BIN VARCHAR2(26\nBYTE), FIRST_NAME VARCHAR2(26 BYTE), NUM_MORTGAGES NUMBER(3,0), CAR_OWNERSHIP\nNUMBER(3,0), LAST_NAME VARCHAR2(26 BYTE)) \r\n\nTable created with number of rows = 13880\n\n\nPL/SQL procedure successfully completed.\n\n\n---------------------------\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_-608771607",
      "id": "20220225-173909_1323849519",
      "dateCreated": "2021-11-03T21:25:12+0000",
      "dateStarted": "2022-03-10T23:39:33+0000",
      "dateFinished": "2022-03-10T23:39:39+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50"
    },
    {
      "title": "Display the first 10 rows of the table",
      "text": "%sql\n\nselect * from  CUSTOMER_INSURANCE_LTV2 where rownum <= 10",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:39+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/osql",
        "fontSize": 9,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "MARITAL_STATUS": "string",
                      "STATE": "string",
                      "CREDIT_BALANCE": "string",
                      "CUSTOMER_TENURE": "string",
                      "MORTGAGE_AMOUNT": "string",
                      "BANK_FUNDS": "string",
                      "NUM_DEPENDENTS": "string",
                      "HAS_CHILDREN": "string",
                      "INCOME": "string",
                      "CUSTOMER_ID": "string",
                      "GENDER": "string",
                      "PROFESSION": "string",
                      "CREDIT_CARD_LIMITS": "string",
                      "REGION": "string",
                      "HOME_OWNERSHIP": "string",
                      "NUM_ONLINE_TRANS": "string",
                      "BUY_INSURANCE": "string",
                      "MONTHLY_CHECKS": "string",
                      "NUM_TRANS_KIOSK": "string",
                      "AGE": "string",
                      "MONEY_MONTLY_OVERDRAWN": "string",
                      "LTV": "string",
                      "TOTAL_AUTOM_PAYMENTS": "string",
                      "NUM_TRANS_TELLER": "string",
                      "CHECKING_BALANCE": "string",
                      "NUM_TRANS_ATM": "string",
                      "LTV_BIN": "string",
                      "FIRST_NAME": "string",
                      "NUM_MORTGAGES": "string",
                      "CAR_OWNERSHIP": "string",
                      "LAST_NAME": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "MARITAL_STATUS\tSTATE\tCREDIT_BALANCE\tCUSTOMER_TENURE\tMORTGAGE_AMOUNT\tBANK_FUNDS\tNUM_DEPENDENTS\tHAS_CHILDREN\tINCOME\tCUSTOMER_ID\tGENDER\tPROFESSION\tCREDIT_CARD_LIMITS\tREGION\tHOME_OWNERSHIP\tNUM_ONLINE_TRANS\tBUY_INSURANCE\tMONTHLY_CHECKS\tNUM_TRANS_KIOSK\tAGE\tMONEY_MONTLY_OVERDRAWN\tLTV\tTOTAL_AUTOM_PAYMENTS\tNUM_TRANS_TELLER\tCHECKING_BALANCE\tNUM_TRANS_ATM\tLTV_BIN\tFIRST_NAME\tNUM_MORTGAGES\tCAR_OWNERSHIP\tLAST_NAME\nSINGLE\tCA                        \t0\t3\t0\t0\t3\t0\t65871\tCU15154                   \tM                         \tNurse\t1000\tWest\t0\t0\tNo\t0\t1\t24\t53.06\t14367.75\t0\t0\t25\t0\tMEDIUM\tGAYLE\t0\t0\tDURANT\nSINGLE\tNY                        \t0\t4\t0\t290\t4\t0\t68747\tCU15155                   \tM                         \tProgrammer/Developer\t700\tNorthEast\t0\t0\tYes\t1\t1\t35\t53.84\t14686.75\t287\t2\t25\t4\tMEDIUM\tQUINTON\t0\t1\tMASSEY\nMARRIED\tMI                        \t0\t3\t1000\t550\t3\t0\t68684\tCU15157                   \tM                         \tProgrammer/Developer\t1000\tMidwest\t1\t1000\tYes\t14\t1\t26\t53.48\t25271\t132\t2\t25\t4\tHIGH\tANIBAL\t1\t1\tJIMENEZ\nMARRIED\tUT                        \t0\t5\t1200\t1000\t5\t0\t59354\tCU15286                   \tF                         \tFireman\t2500\tSouthwest\t1\t1200\tNo\t4\t5\t24\t53.08\t19738.5\t628\t3\t619\t1\tMEDIUM\tJUNITA\t1\t1\tROBERTSON\nMARRIED\tUT                        \t0\t4\t1800\t0\t3\t0\t84801\tCU15287                   \tF                         \tPROF-26\t2500\tSouthwest\t1\t1800\tNo\t0\t5\t47\t53.06\t31900.25\t0\t0\t25\t0\tVERY HIGH\tCHASITY\t1\t1\tELLIS\nMARRIED\tUT                        \t0\t1\t1400\t0\t1\t0\t73987\tCU15289                   \tM                         \tProfessor\t2500\tSouthwest\t1\t1400\tNo\t0\t5\t46\t53.06\t31596.75\t0\t0\t25\t0\tVERY HIGH\tFRANKLIN\t1\t1\tKNOX\nSINGLE\tUT                        \t0\t3\t578\t0\t3\t0\t51452\tCU15290                   \tM                         \tSales Representative\t2500\tSouthwest\t1\t578\tNo\t0\t5\t33\t53.06\t21663\t0\t0\t25\t0\tMEDIUM\tLINCOLN\t1\t1\tMATTSON\nSINGLE\tUT                        \t0\t3\t0\t0\t3\t0\t63181\tCU15291                   \tM                         \tConstruction Laborer\t2500\tSouthwest\t0\t0\tNo\t1\t5\t49\t53.07\t16195.25\t0\t0\t25\t1\tMEDIUM\tSTEPHEN\t0\t0\tCARROLL\nSINGLE\tUT                        \t0\t5\t117\t0\t5\t0\t66654\tCU15292                   \tF                         \tPROF-3\t2500\tSouthwest\t1\t117\tNo\t0\t5\t21\t53.06\t21263.5\t0\t0\t25\t0\tMEDIUM\tCEOLA\t1\t1\tHARRISON\nSINGLE\tUT                        \t0\t3\t0\t250\t3\t0\t61716\tCU15294                   \tM                         \tProgrammer/Developer\t1500\tSouthwest\t0\t0\tNo\t3\t5\t26\t53.04\t13529\t0\t2\t25\t2\tLOW\tLLOYD\t0\t0\tHOLLEY\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_-321350810",
      "id": "20220225-173909_1019217941",
      "dateCreated": "2021-11-03T22:03:22+0000",
      "dateStarted": "2022-03-10T23:39:39+0000",
      "dateFinished": "2022-03-10T23:39:39+0000",
      "status": "FINISHED",
      "$$hashKey": "object:51"
    },
    {
      "title": "Run the procedure using your own Object Storage bucket",
      "text": "%md\n\nTo use your own Object Storage bucket with `IMPORT_DATA_OBJSTORE_DATASET`, pass the bucket URI to the `LOCATION_URI` parameter. Recall that the CSV file containing the data and the text file with the table definition should first be uploaded to the bucket. The example below demonstrates this functionality in default mode, and replacing NULL for TRUE will enable verbose mode.\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:39+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>To use your own Object Storage bucket with <code>IMPORT_DATA_OBJSTORE_DATASET</code>, pass the bucket URI to the <code>LOCATION_URI</code> parameter. Recall that the CSV file containing the data and the text file with the table definition should first be uploaded to the bucket. The example below demonstrates this functionality in default mode, and replacing NULL for TRUE will enable verbose mode.</p>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_396108293",
      "id": "20220225-173909_121563982",
      "dateCreated": "2021-11-02T17:29:02+0000",
      "dateStarted": "2022-03-10T23:39:40+0000",
      "dateFinished": "2022-03-10T23:39:40+0000",
      "status": "FINISHED",
      "$$hashKey": "object:52"
    },
    {
      "text": "%script\n\nEXEC IMPORT_DATA_OBJSTORE_DATASET('CUSTOMER_INSURANCE_LTV2', NULL, '<your bucket URI here>')\n \n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:40+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "plsql",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/plsql",
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_-2064831579",
      "id": "20220225-173909_1133965833",
      "dateCreated": "2021-11-02T17:32:35+0000",
      "dateStarted": "2022-03-10T23:32:19+0000",
      "dateFinished": "2022-03-10T23:32:19+0000",
      "status": "FINISHED",
      "$$hashKey": "object:54"
    },
    {
      "title": "Try it with your data",
      "text": "%md\n\nTo use the `IMPORT_DATA_OBJSTORE_DATASET` procedure with your own dataset, create the text file containing the table definition (in a single line), save the corresponding CSV data file to your public Object Storage bucket, and run the procedure with the dataset name as input. \n\nFor example, for the IRIS data, the bucket will have IRIS.csv containing the data, and IRIS.txt with table definition:\n\n    CREATE TABLE IRIS(SEPAL_LENGTH number, SEPAL_WIDTH number, PETAL_LENGTH number, PETAL_WIDTH number, SPECIES varchar2(4000))\n\nRun the procedure using your bucket:\n\n    EXEC IMPORT_DATA_OBJSTORE_DATASET('IRIS', NULL, '<your bucket URI>')",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:41+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>To use the <code>IMPORT_DATA_OBJSTORE_DATASET</code> procedure with your own dataset, create the text file containing the table definition (in a single line), save the corresponding CSV data file to your public Object Storage bucket, and run the procedure with the dataset name as input.</p>\n<p>For example, for the IRIS data, the bucket will have IRIS.csv containing the data, and IRIS.txt with table definition:</p>\n<pre><code>CREATE TABLE IRIS(SEPAL_LENGTH number, SEPAL_WIDTH number, PETAL_LENGTH number, PETAL_WIDTH number, SPECIES varchar2(4000))\n</code></pre>\n<p>Run the procedure using your bucket:</p>\n<pre><code>EXEC IMPORT_DATA_OBJSTORE_DATASET('IRIS', NULL, '&lt;your bucket URI&gt;')\n</code></pre>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_1873507928",
      "id": "20220225-173909_264121086",
      "dateCreated": "2021-11-02T17:48:45+0000",
      "dateStarted": "2022-03-10T23:39:41+0000",
      "dateFinished": "2022-03-10T23:39:41+0000",
      "status": "FINISHED",
      "$$hashKey": "object:56"
    },
    {
      "text": "%md\n\n# End of script\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:41+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h1>End of script</h1>\n"
          }
        ]
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_-1146486091",
      "id": "20220225-173909_482953852",
      "dateCreated": "2021-11-01T22:08:02+0000",
      "dateStarted": "2022-03-10T23:39:42+0000",
      "dateFinished": "2022-03-10T23:39:42+0000",
      "status": "FINISHED",
      "$$hashKey": "object:57"
    },
    {
      "text": "%md\n",
      "user": "OMLUSER",
      "dateUpdated": "2022-03-10T23:39:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "md",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "interrupted": false,
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1645810749808_-1246028003",
      "id": "20220225-173909_1748759894",
      "dateCreated": "2021-11-02T17:42:41+0000",
      "status": "FINISHED",
      "$$hashKey": "object:58",
      "dateFinished": "2022-03-10T23:39:43+0000",
      "dateStarted": "2022-03-10T23:39:43+0000",
      "results": {
        "code": "SUCCESS",
        "msg": []
      }
    }
  ],
  "name": "OML4SQL Procedure for Importing Data to ADB",
  "id": "106923",
  "defaultInterpreterGroup": "spark",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "ORA7A60DC9B32:OMLUSER-106923": [],
    "MDW381939C745:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {
    "isRunning": false
  },
  "path": "/OML4SQL Procedure for Importing Data to ADB"
}